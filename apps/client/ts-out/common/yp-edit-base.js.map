{"version":3,"file":"yp-edit-base.js","sourceRoot":"","sources":["../../src/common/yp-edit-base.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAG7C,MAAM,OAAgB,UAAW,SAAQ,aAAa;IAAtD;;QAEE,QAAG,GAAG,IAAI,CAAC;QAeX,WAAM,GAAG,MAAM,CAAA;IA8HjB,CAAC;IA/GC,cAAc,CAAC,OAAuB;QACpC,kBAAkB;IACpB,CAAC;IAED,cAAc,CAAC,MAAyB;QACtC,kBAAkB;IACpB,CAAC;IAED,kBAAkB,CAAC,KAAmB;QACpC,kBAAkB;IACpB,CAAC;IAMQ,OAAO,CAAC,iBAAyD;QACxE,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACjC,IAAI,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YACjC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAEQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;IACrE,CAAC;IAEQ,oBAAoB;QAC3B,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;IACxE,CAAC;IAED,kBAAkB,CAAC,KAAkB;QACnC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,EAAE,CAAC;QACpC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC;IACnC,CAAC;IAED,oBAAoB,CAAC,KAAkB;QACrC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,EAAE,CAAC;IACxC,CAAC;IAED,yBAAyB,CAAC,KAAkB;QAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC,EAAE,CAAC;IAC7C,CAAC;IAED,yBAAyB,CAAC,KAAkB;QAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC,EAAE,CAAC;IAC7C,CAAC;IAED,aAAa,CAAC,KAAkB;QAC9B,IAAI,OAAO,IAAI,CAAC,cAAc,IAAI,UAAU,EAAE,CAAC;YAC7C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACpC,CAAC;QAED,IAAI,OAAO,IAAI,CAAC,eAAe,IAAI,UAAU,EAAE,CAAC;YAC9C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACrC,CAAC;QACD,IACE,KAAK;YACL,KAAK,CAAC,MAAM;YACZ,KAAK,CAAC,MAAM,CAAC,OAAO,EACpB,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QACzD,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;QACD,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,OAAgB,EAAE,MAAyD;QACpF,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE,CAAC;YACzD,IAAI,OAAO,EAAE,CAAC;gBACZ,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;YAClB,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;YACnB,CAAC;YACD,IAAI,MAAM;gBAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACjC,IAAI,OAAO,IAAI,CAAC,cAAc,KAAK,UAAU,EAAE,CAAC;gBAC9C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAC9B,CAAC;YACD,MAAM,IAAI,CAAC,cAAc,CAAC;YACzB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAkB,CAAC,IAAI,EAAE,CAAC;QAClD,CAAC;aAAM,CAAC;YACN,MAAM,CAAC,OAAO,CAAC,YAAY,CACzB,IAAI,EACJ,OAAO,EACP,MAAM,EACN,IAAI,CAAC,eAAgB,CACtB,CAAC;QACJ,CAAC;IACH,CAAC;IAED,KAAK;QACF,IAAI,CAAC,EAAE,CAAC,aAAa,CAAkB,CAAC,KAAK,EAAE,CAAC;IACnD,CAAC;CACF;AA7IC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;uCACjB;AAGX;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;kDACO;AAGlC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;4CACC;AAG5B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gDACK;AAGhC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;0CACoC;AAG/D;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;0CACZ;AAGf;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;mDACU","sourcesContent":["import { YpBaseElement } from './yp-base-element.js';\nimport { property } from 'lit/decorators.js';\nimport { YpEditDialog } from '../yp-edit-dialog/yp-edit-dialog.js';\n\nexport abstract class YpEditBase extends YpBaseElement {\n  @property({ type: Boolean })\n  new = true;\n\n  @property({ type: String })\n  editHeaderText: string | undefined\n\n  @property({ type: String })\n  saveText: string | undefined\n\n  @property({ type: String })\n  snackbarText: string | undefined\n\n  @property({ type: Object })\n  params: Record<string,string|boolean|number|object> | undefined\n\n  @property({ type: String })\n  method = 'POST'\n\n  @property({ type: Object })\n  refreshFunction: Function | undefined\n\n  uploadedLogoImageId: number | undefined\n\n  imagePreviewUrl: string | undefined\n\n  uploadedHeaderImageId: number | undefined\n\n  uploadedDefaultDataImageId: number | undefined\n\n  uploadedDefaultPostImageId: number | undefined\n\n  customRedirect(unknown: YpDatabaseItem): void {\n    // For subclassing\n  }\n\n  setupAfterOpen(params?: YpEditFormParams): void {\n    // For subclassing\n  }\n\n  customFormResponse(event?: CustomEvent): void {\n    // For subclassing\n  }\n\n  abstract clear(): void\n\n  abstract setupTranslation(): void\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    super.updated(changedProperties);\n    if (changedProperties.has('new')) {\n      this._setupNewUpdateState();\n    }\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.addListener('yp-form-response', this._formResponse.bind(this))\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeListener('yp-form-response', this._formResponse.bind(this))\n  }\n\n  _logoImageUploaded(event: CustomEvent) {\n    const image = JSON.parse(event.detail.xhr.response);\n    this.uploadedLogoImageId = image.id;\n    this.imagePreviewUrl = image.url;\n  }\n\n  _headerImageUploaded(event: CustomEvent) {\n    const image = JSON.parse(event.detail.xhr.response);\n    this.uploadedHeaderImageId = image.id;\n  }\n\n  _defaultDataImageUploaded(event: CustomEvent) {\n    const image = JSON.parse(event.detail.xhr.response);\n    this.uploadedDefaultDataImageId = image.id;\n  }\n\n  _defaultPostImageUploaded(event: CustomEvent) {\n    const image = JSON.parse(event.detail.xhr.response);\n    this.uploadedDefaultPostImageId = image.id;\n  }\n\n  _formResponse(event: CustomEvent) {\n    if (typeof this.customRedirect == 'function') {\n      this.customRedirect(event.detail);\n    }\n\n    if (typeof this.refreshFunction == 'function') {\n      this.refreshFunction(event.detail);\n    }\n    if (\n      event &&\n      event.detail &&\n      event.detail.isError\n    ) {\n      console.log('Not clearing form because of user error');\n    } else {\n      this.clear();\n    }\n    this.customFormResponse(event);\n  }\n\n  _setupNewUpdateState() {\n    if (this.new) {\n      this.saveText = this.t('create');\n      this.method = 'POST';\n    } else {\n      this.saveText = this.t('update');\n      this.method = 'PUT';\n    }\n    this.setupTranslation();\n  }\n\n  async open(newItem: boolean, params: Record<string,string | boolean | number | object>) {\n    if (window.appUser && window.appUser.loggedIn() === true) {\n      if (newItem) {\n        this.new = true;\n      } else {\n        this.new = false;\n      }\n      if (params) this.params = params;\n      if (typeof this.setupAfterOpen === 'function') {\n        this.setupAfterOpen(params);\n      }\n      await this.updateComplete;\n      (this.$$(\"#editDialog\") as YpEditDialog).open();\n    } else {\n      window.appUser.loginForEdit(\n        this,\n        newItem,\n        params,\n        this.refreshFunction!\n      );\n    }\n  }\n\n  close() {\n    (this.$$(\"#editDialog\") as YpEditDialog).close();\n  }\n}\n"]}