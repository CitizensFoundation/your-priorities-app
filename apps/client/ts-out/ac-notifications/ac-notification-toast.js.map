{"version":3,"file":"ac-notification-toast.js","sourceRoot":"","sources":["../../src/ac-notifications/ac-notification-toast.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAc,OAAO,EAAkB,MAAM,KAAK,CAAC;AACrE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,uBAAuB,EAAE,MAAM,+DAA+D,CAAC;AAExG,OAAO,yCAAyC,CAAC;AACjD,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAI3C,IAAM,mBAAmB,GAAzB,MAAM,mBAAoB,SAAQ,QAAQ;IAA1C;;QAEL,qBAAgB,GAAG,EAAE,CAAC;QAStB,eAAU,GAAG,KAAK,CAAA;IAuFpB,CAAC;IArFC,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,KAAK,CAAC,MAAa;YACnB,GAAG,CAAA;;;;;;;;;;;;;OAaF;SACF,CAAC;IACJ,CAAC;IAEQ,MAAM;QACb,MAAM,OAAO,GAAG;YACd,uBAAuB,EAAE,IAAI,CAAC,OAAO;YACrC,uBAAuB,EAAE,IAAI,CAAC,OAAO;SACtC,CAAC;QACF,OAAO,IAAI,CAAA;4BACa,QAAQ,CAAC,OAAO,CAAC;kBAC3B,IAAI,CAAC,cAAc;;;UAG3B,IAAI,CAAC,IAAI;YACT,CAAC,CAAC,IAAI,CAAA;;;yBAGS,IAAI,CAAC,IAAI;;aAErB;YACH,CAAC,CAAC,OAAO;;;;uBAII,CAAC,IAAI,CAAC,IAAI;qBACZ,IAAI,CAAC,IAAI;;;YAGlB,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC;;;wCAG7B,IAAI,CAAC,kBAAkB;yCACtB,IAAI,CAAC,mBAAmB;;;WAGtD,CAAC;IACV,CAAC;IAED,UAAU,CACR,IAA4B,EAC5B,gBAAwB,EACxB,kBAA2B,EAC3B,OAA2B,SAAS,EACpC,YAAgC,SAAS,EACzC,aAAkC,SAAS;QAE3C,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC;QAED,IAAI,IAAI,EAAE,CAAC;YACT,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACxB,CAAC;QAED,IAAI,UAAU,EAAE,CAAC;YACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;QAED,IAAI,SAAS,EAAE,CAAC;YACd,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CACF,CAAA;AAhGC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6DACL;AAGtB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iDACE;AAG7B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iDACF;AAGzB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;uDACV;AAXP,mBAAmB;IAD/B,aAAa,CAAC,uBAAuB,CAAC;GAC1B,mBAAmB,CAkG/B","sourcesContent":["import { css, html, LitElement, nothing, TemplateResult } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { accessibleSnackbarLabel } from '@material/mwc-snackbar/accessible-snackbar-label-directive.js';\n\nimport '../yp-user/yp-user-with-organization.js';\nimport { Snackbar } from '@material/mwc-snackbar';\nimport { YpBaseElement } from '../common/yp-base-element.js';\n\n@customElement('ac-notification-toast')\nexport class AcNotificationToast extends Snackbar {\n  @property({ type: String })\n  notificationText = '';\n\n  @property({ type: Object })\n  user: YpUserData | undefined;\n\n  @property({ type: String })\n  icon: string | undefined;\n\n  @property({ type: Boolean })\n  largerFont = false\n\n  static override get styles() {\n    return [\n      super.styles as any,\n      css`\n        .icon {\n          height: 32px;\n          width: 32px;\n          min-width: 32px;\n          min-height: 32px;\n        }\n\n        .text[large-font] {\n          margin: 8px;\n          font-size: 16px;\n          margin-left: 12px;\n        }\n      `,\n    ];\n  }\n\n  override render() {\n    const classes = {\n      'mdc-snackbar--stacked': this.stacked,\n      'mdc-snackbar--leading': this.leading,\n    };\n    return html` <div\n      class=\"mdc-snackbar ${classMap(classes)}\"\n      @keydown=\"${this._handleKeydown}\"\n    >\n      <div class=\"mdc-snackbar__surface\">\n        ${this.user\n          ? html`\n              <yp-user-with-organization\n                class=\"layout horizontal self-end\"\n                .user=\"${this.user}\"\n              ></yp-user-with-organization>\n            `\n          : nothing}\n        <div class=\"layout horizontal\">\n          <md-icon\n            class=\"icon\"\n            ?hidden=\"${!this.icon}\"\n            .icon=\"${this.icon}\"\n          ></md-icon>\n          <!-- add larger-font -->\n          ${accessibleSnackbarLabel(this.notificationText, this.open)}\n        </div>\n        <div class=\"mdc-snackbar__actions\">\n          <slot name=\"action\" @click=\"${this._handleActionClick}\"></slot>\n          <slot name=\"dismiss\" @click=\"${this._handleDismissClick}\"></slot>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  openDialog(\n    user: YpUserData | undefined,\n    notificationText: string,\n    systemNotification: boolean,\n    icon: string | undefined = undefined,\n    timeoutMs: number | undefined = undefined,\n    largerFont: boolean | undefined = undefined\n  ) {\n    this.notificationText = notificationText;\n    if (!systemNotification) {\n      this.user = user;\n    }\n\n    if (icon) {\n      this.icon = icon;\n    } else {\n      this.icon = undefined;\n    }\n\n    if (largerFont) {\n      this.largerFont = true;\n    } else {\n      this.largerFont = false;\n    }\n\n    if (timeoutMs) {\n      this.timeoutMs = timeoutMs;\n    }\n    this.open = true;\n  }\n}\n"]}