{"version":3,"file":"yp-post-user-image-edit.js","sourceRoot":"","sources":["../../src/yp-post/yp-post-user-image-edit.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport { YpBaseElement } from '../common/yp-base-element.js';\n\nimport '../yp-file-upload/yp-file-upload.js';\nimport '../yp-edit-dialog/yp-edit-dialog.js';\nimport '@material/web/textfield/outlined-text-field.js';\n\nimport { ShadowStyles } from '../common/ShadowStyles.js';\nimport { YpMediaHelpers } from '../common/YpMediaHelpers.js';\nimport { YpApiActionDialog } from '../yp-api-action-dialog/yp-api-action-dialog.js';\nimport { YpAccessHelpers } from '../common/YpAccessHelpers.js';\nimport { YpEditBase } from '../common/yp-edit-base.js';\nimport { YpFileUpload } from '../yp-file-upload/yp-file-upload.js';\nimport { TextField } from '@material/web/textfield/internal/text-field.js';\n\n@customElement('yp-post-user-image-edit')\nexport class YpPostUserImageEdit extends YpEditBase {\n  @property({ type: Object })\n  image: YpImageData | undefined;\n\n  @property({ type: Object })\n  post: YpPostData | undefined;\n\n  @property({ type: Boolean })\n  override new = false;\n\n  @property({ type: String })\n  action = '/images';\n\n  @property({ type: Number })\n  uploadedPostUserImageId: number | undefined;\n\n  @property({ type: Number })\n  oldUploadedPostUserImageId: number | undefined;\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>) {\n    super.updated(changedProperties);\n\n    if (changedProperties.has('image')) {\n      this._imageChanged();\n    }\n\n    if (changedProperties.has('post')) {\n      this._postChanged();\n    }\n  }\n\n  override render() {\n    return html`\n      <yp-edit-dialog\n        doubleWidth\n        id=\"editDialog\"\n        icon=\"photo_camera\"\n        .action=\"${this.action}\"\n        .title=\"${this.editHeaderText}\"\n        .method=\"${this.method}\"\n        .saveText=\"${this.saveText}\"\n        .nextActionText=\"${this.t('next')}\"\n        .toastText=\"${this.snackbarText}\"\n        .params=\"${this.params}\">\n        ${this.image\n          ? html`\n              <div class=\"layout vertical center-center\">\n                <yp-file-upload\n                  id=\"imageFileUpload\"\n                  raised\n                  .buttonText=\"${this.t('image.upload')}\"\n                  buttonIcon=\"photo_camera\"\n                  method=\"POST\"\n                  @success=\"${this._imageUploaded}\">\n                </yp-file-upload>\n              </div>\n\n              <md-outlined-text-field\n                id=\"photographerName\"\n                name=\"photographerName\"\n                type=\"text\"\n                .label=\"${this.t('post.photographerName')}\"\n                .value=\"${this.image.photographer_name || ''}\"\n                maxlength=\"60\"\n                char-counter=\"\">\n              </-outlined-text-field>\n\n              <md-outlined-text-field\n              type=\"textarea\"\n                id=\"description\"\n                required\n                minlength=\"1\"\n                name=\"description\"\n                .value=\"${this.image.description || ''}\"\n                .label=\"${this.t('post.description')}\"\n                charCounter\n                rows=\"2\"\n                maxrows=\"5\"\n                maxlength=\"200\">\n              </md-outlined-text-field>\n\n              <input\n                type=\"hidden\"\n                name=\"uploadedPostUserImageId\"\n                .value=\"${this.uploadedPostUserImageId}\" />\n\n              <input\n                type=\"hidden\"\n                name=\"oldUploadedPostUserImageId\"\n                .value=\"${this.oldUploadedPostUserImageId}\" />\n            `\n          : nothing}\n      </yp-edit-dialog>\n    `;\n  }\n\n  _postChanged() {\n    if (this.post) {\n      (this.$$('#imageFileUpload') as YpFileUpload).target =\n        '/api/images?itemType=post-user-image&postId=' + this.post.id;\n    }\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.addListener('yp-form-invalid', this._formInvalid);\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeListener('yp-form-invalid', this._formInvalid);\n  }\n\n  _imageChanged() {\n    if (this.image) {\n      this.oldUploadedPostUserImageId = this.image.id;\n    }\n  }\n\n  _formInvalid() {\n    //(this.$$('#photographerName') as TextField).autoValidate = true;\n    //(this.$$('#description') as TextField).autoValidate = true;\n  }\n\n  _imageUploaded(event: CustomEvent) {\n    const image = JSON.parse(event.detail.xhr.response);\n    this.uploadedPostUserImageId = image.id;\n  }\n\n  clear() {\n    this.uploadedPostUserImageId = undefined;\n    (this.$$('#imageFileUpload') as YpFileUpload).clear();\n  }\n\n  setup(\n    post: YpPostData,\n    image: YpImageData | undefined,\n    newNotEdit: boolean,\n    refreshFunction: Function\n  ) {\n    if (image) {\n      this.image = image;\n    } else {\n      this.image = ({\n        description: '',\n        photographerName: '',\n      } as unknown) as YpImageData;\n    }\n    if (post) {\n      this.post = post;\n    } else {\n      this.post = undefined;\n    }\n    this.new = newNotEdit;\n    this.refreshFunction = refreshFunction;\n    this.setupTranslation();\n  }\n\n  setupTranslation() {\n    if (this.new) {\n      this.editHeaderText = this.t('post.newPhoto');\n      this.snackbarText = this.t('post.photo.toast.added');\n    } else {\n      this.editHeaderText = this.t('post.photoUpdate');\n      this.snackbarText = this.t('post.photo.toast.updated');\n    }\n  }\n}\n"]}