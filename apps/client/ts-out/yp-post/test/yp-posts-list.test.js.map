{"version":3,"file":"yp-posts-list.test.js","sourceRoot":"","sources":["../../../src/yp-post/test/yp-posts-list.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAGnE,OAAO,qBAAqB,CAAC;AAC7B,OAAO,EAAE,aAAa,EAAE,MAAM,gCAAgC,CAAC;AAE/D,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,IAAI,OAAoB,CAAC;IACzB,IAAI,SAAc,CAAC;IAEnB,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,SAAS,GAAG,aAAa,CAAC,YAAY,EAAE,CAAC;QACzC,MAAM,aAAa,CAAC,QAAQ,EAAE,CAAC;QAE/B,MAAM,KAAK,GAAG;YACZ;gBACE,EAAE,EAAE,CAAC;gBACL,QAAQ,EAAC;oBACP,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;iBACb;gBACD,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,CAAC;gBACX,WAAW,EAAE,WAAW;gBACxB,uBAAuB,EAAE,CAAC;gBAC1B,yBAAyB,EAAE,CAAC;gBAC5B,cAAc,EAAE,CAAC;aAClB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,QAAQ,EAAC;oBACP,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;iBACb;gBACD,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,CAAC;gBACX,WAAW,EAAE,WAAW;gBACxB,uBAAuB,EAAE,CAAC;gBAC1B,yBAAyB,EAAE,CAAC;gBAC5B,cAAc,EAAE,CAAC;aAClB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,QAAQ,EAAC;oBACP,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;iBACb;gBACD,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,CAAC;gBACX,WAAW,EAAE,WAAW;gBACxB,uBAAuB,EAAE,CAAC;gBAC1B,yBAAyB,EAAE,CAAC;gBAC5B,cAAc,EAAE,CAAC;aAClB;SACmB,CAAA;QAEtB,SAAS,CAAC,GAAG,CAAC,+CAA+C,EAAE,KAAK,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC;IACvG,CAAC,CAAC,CAAC;IAED,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA;UACxB,aAAa,CAAC,kBAAkB,EAAE;;oBAExB,aAAa,CAAC,QAAQ,EAAE;;OAErC,CAAC,CAAC;QACH,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,QAAQ,CAAC;QACT,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { html, fixture, expect, aTimeout } from '@open-wc/testing';\n\nimport { YpPostsList } from '../yp-posts-list.js';\nimport '../yp-posts-list.js';\nimport { YpTestHelpers } from '../../common/test/setup-app.js';\n\ndescribe('YpPostslist', () => {\n  let element: YpPostsList;\n  let fetchMock: any;\n\n  before(async () => {\n    fetchMock = YpTestHelpers.getFetchMock();\n    await YpTestHelpers.setupApp();\n\n    const posts = [\n      {\n        id: 1,\n        location:{\n          latitude: 2,\n          longitude: 3,\n        },\n        name: 'Robert',\n        group_id: 1,\n        description: 'Post-Test',\n        counter_endorsements_up: 2,\n        counter_endorsements_down: 4,\n        counter_points: 5,\n      },\n      {\n        id: 2,\n        location:{\n          latitude: 2,\n          longitude: 3,\n        },\n        name: 'Robert 2',\n        group_id: 1,\n        description: 'Post-Test',\n        counter_endorsements_up: 2,\n        counter_endorsements_down: 4,\n        counter_points: 5,\n      },\n      {\n        id: 3,\n        location:{\n          latitude: 2,\n          longitude: 3,\n        },\n        name: 'Robert 3',\n        group_id: 1,\n        description: 'Post-Test',\n        counter_endorsements_up: 2,\n        counter_endorsements_down: 4,\n        counter_points: 5,\n      },\n    ] as Array<YpPostData>\n\n    fetchMock.get('/api/groups/1/posts/newest/null/open?offset=0', posts, YpTestHelpers.fetchMockConfig);\n  });\n\n    beforeEach(async () => {\n      element = await fixture(html`\n        ${YpTestHelpers.renderCommonHeader()}\n        <yp-posts-list\n          .group=\"${YpTestHelpers.getGroup()}\"\n        ></yp-posts-list>\n      `);\n      await aTimeout(100);\n    });\n\n    it('passes the a11y audit', async () => {\n      debugger;\n      await expect(element).shadowDom.to.be.accessible();\n    });\n  });"]}