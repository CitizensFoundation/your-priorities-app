{"version":3,"file":"date.js","sourceRoot":"","sources":["../../../../src/analytics-and-promotion/pl-components/util/date.ts"],"names":[],"mappings":"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","sourcesContent":["export function formatISO(date: Date): string {\n  return new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\n    .toISOString()\n    .split(\"T\")[0];\n}\n\nexport function shiftMonths(date: Date, months: number): Date {\n  const newDate = new Date(date.getTime());\n  const d = newDate.getDate();\n  newDate.setMonth(newDate.getMonth() + months);\n  if (newDate.getDate() !== d) {\n    newDate.setDate(0);\n  }\n  return newDate;\n}\n\nexport function shiftDays(date: Date, days: number): Date {\n  const newDate = new Date(date.getTime());\n  newDate.setDate(newDate.getDate() + days);\n  return newDate;\n}\n\nconst MONTHS = [\n  \"January\", \"February\", \"March\",\n  \"April\", \"May\", \"June\", \"July\",\n  \"August\", \"September\", \"October\",\n  \"November\", \"December\"\n];\n\nconst DAYS_ABBREV = [\n  \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"\n];\n\nexport function formatMonthYYYY(date: Date): string {\n  return `${MONTHS[date.getMonth()]} ${date.getFullYear()}`;\n}\n\nexport function formatYear(date: Date): string {\n  return `Year of ${date.getFullYear()}`;\n}\n\nexport function formatDay(date: Date): string {\n  const weekday = DAYS_ABBREV[date.getDay()];\n  if (date.getFullYear() !== (new Date()).getFullYear()) {\n    return `${weekday}, ${date.getDate()} ${formatMonthShort(date)} ${date.getFullYear()}`;\n  } else {\n    return `${weekday}, ${date.getDate()} ${formatMonthShort(date)}`;\n  }\n}\n\nexport function formatDayShort(date: Date): string {\n  return `${date.getDate()} ${formatMonthShort(date)}`;\n}\n\nexport function parseUTCDate(dateString: string): Date {\n  let date: Date;\n  // Safari Compatibility\n  if (typeof dateString === \"string\" && dateString.includes(' ')) {\n    const parts = dateString.split(/[^0-9]/).map(part => parseInt(part, 10));\n    parts[1] -= 1; // Adjust for month index\n    //@ts-ignore\n    date = new Date(...parts);\n  } else {\n    date = new Date(dateString);\n  }\n  return new Date(date.getTime() + date.getTimezoneOffset() * 60000);\n}\n\nexport function nowForSite(site: PlausibleSiteData): Date {\n  const browserOffset = (new Date()).getTimezoneOffset() * 60;\n  return new Date(new Date().getTime() + (site.offset! * 1000) + (browserOffset * 1000));\n}\n\nexport function lastMonth(site: PlausibleSiteData): Date {\n  return shiftMonths(nowForSite(site), -1);\n}\n\nexport function isSameMonth(date1: Date, date2: Date): boolean {\n  return formatMonthYYYY(date1) === formatMonthYYYY(date2);\n}\n\nexport function isToday(site: PlausibleSiteData, date: Date): boolean {\n  return formatISO(date) === formatISO(nowForSite(site));\n}\n\nexport function isThisMonth(site: PlausibleSiteData, date: Date): boolean {\n  return formatMonthYYYY(date) === formatMonthYYYY(nowForSite(site));\n}\n\nexport function isThisYear(site: PlausibleSiteData, date: Date): boolean {\n  return date.getFullYear() === nowForSite(site).getFullYear();\n}\n\nexport function isBefore(date1: Date, date2: Date, period: 'day' | 'month' | 'year'): boolean {\n  if (date1.getFullYear() !== date2.getFullYear()) {\n    return date1.getFullYear() < date2.getFullYear();\n  }\n  if (period === \"year\") {\n    return false;\n  }\n  if (date1.getMonth() !== date2.getMonth()) {\n    return date1.getMonth() < date2.getMonth();\n  }\n  if (period === \"month\") {\n    return false;\n  }\n  return date1.getDate() < date2.getDate();\n}\n\nexport function isAfter(date1: Date, date2: Date, period: 'day' | 'month' | 'year'): boolean {\n  if (date1.getFullYear() !== date2.getFullYear()) {\n    return date1.getFullYear() > date2.getFullYear();\n  }\n  if (period === \"year\") {\n    return false;\n  }\n  if (date1.getMonth() !== date2.getMonth()) {\n    return date1.getMonth() > date2.getMonth();\n  }\n  if (period === \"month\") {\n    return false;\n  }\n  return date1.getDate() > date2.getDate();\n}\n\nfunction formatMonthShort(date: Date): string {\n  return `${MONTHS[date.getMonth()].substring(0, 3)}`;\n}\n"]}