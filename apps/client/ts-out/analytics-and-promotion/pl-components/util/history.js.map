{"version":3,"file":"history.js","sourceRoot":"","sources":["../../../../src/analytics-and-promotion/pl-components/util/history.ts"],"names":[],"mappings":"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","sourcesContent":["declare var __DEV__: boolean;\nvar __DEV__ = false;\n\n/**\n * Actions represent the type of change to a location value.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\n */\n export enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * A URL pathname, beginning with a /.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#location.pathname\n */\nexport type Pathname = string;\n\n/**\n * A URL search string, beginning with a ?.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#location.search\n */\nexport type Search = string;\n\n/**\n * A URL fragment identifier, beginning with a #.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#location.hash\n */\nexport type Hash = string;\n\n/**\n * An object that is used to associate some arbitrary data with a location, but\n * that does not appear in the URL path.\n *\n * @deprecated\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#location.state\n */\nexport type State = unknown;\n\n/**\n * A unique string associated with a location. May be used to safely store\n * and retrieve data in some other storage API, like `localStorage`.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#location.key\n */\nexport type Key = string;\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#location.pathname\n   */\n  pathname: Pathname;\n\n  /**\n   * A URL search string, beginning with a ?.\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#location.search\n   */\n  search: Search;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#location.hash\n   */\n  hash: Hash;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#location\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#location.state\n   */\n  state: unknown;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#location.key\n   */\n  key: Key;\n}\n\n/**\n * A partial Path object that may be missing some properties.\n *\n * @deprecated\n */\nexport type PartialPath = Partial<Path>;\n\n/**\n * A partial Location object that may be missing some properties.\n *\n * @deprecated\n */\nexport type PartialLocation = Partial<Location>;\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * A change to the current location that was blocked. May be retried\n * after obtaining user confirmation.\n */\nexport interface Transition extends Update {\n  /**\n   * Retries the update to the current location.\n   */\n  retry(): void;\n}\n\n/**\n * A function that receives transitions when navigation is blocked.\n */\nexport interface Blocker {\n  (tx: Transition): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#history.action\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#history.location\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#history.createHref\n   */\n  createHref(to: To): string;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#history.push\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#history.replace\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#history.go\n   */\n  go(delta: number): void;\n\n  /**\n   * Navigates to the previous entry in the stack. Identical to go(-1).\n   *\n   * Warning: if the current location is the first location in the stack, this\n   * will unload the current document.\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#history.back\n   */\n  back(): void;\n\n  /**\n   * Navigates to the next entry in the stack. Identical to go(1).\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#history.forward\n   */\n  forward(): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#history.listen\n   */\n  listen(listener: Listener): () => void;\n\n  /**\n   * Prevents the current location from changing and sets up a listener that\n   * will be called instead.\n   *\n   * @param blocker - A function that will be called when a transition is blocked\n   * @returns unblock - A function that may be used to stop blocking\n   *\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#history.block\n   */\n  block(blocker: Blocker): () => void;\n}\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends History {}\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends History {}\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#memoryhistory\n */\nexport interface MemoryHistory extends History {\n  readonly index: number;\n}\n\n\nconst readOnly: <T>(obj: T) => Readonly<T> = __DEV__\n  ? (obj) => Object.freeze(obj)\n  : (obj) => obj;\n\nfunction warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// BROWSER\n////////////////////////////////////////////////////////////////////////////////\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst BeforeUnloadEventType = \"beforeunload\";\nconst HashChangeEventType = \"hashchange\";\nconst PopStateEventType = \"popstate\";\n\nexport type BrowserHistoryOptions = { window?: Window };\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  let { window = document.defaultView! } = options;\n  let globalHistory = window.history;\n\n  function getIndexAndLocation(): [number, Location] {\n    let { pathname, search, hash } = window.location;\n    let state = globalHistory.state || {};\n    return [\n      state.idx,\n      readOnly<Location>({\n        pathname,\n        search,\n        hash,\n        state: state.usr || null,\n        key: state.key || \"default\",\n      }),\n    ];\n  }\n\n  let blockedPopTx: Transition | null = null;\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      let nextAction = Action.Pop;\n      let [nextIndex, nextLocation] = getIndexAndLocation();\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          let delta = index - nextIndex;\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry() {\n                go(delta * -1);\n              },\n            };\n\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          warning(\n            false,\n            // TODO: Write up a doc that explains our blocking strategy in\n            // detail and link to it here so people can understand better what\n            // is going on and how to avoid it.\n            `You are trying to block a POP navigation to a location that was not ` +\n              `created by the history library. The block will fail silently in ` +\n              `production, but in general you should do all navigation with the ` +\n              `history library (instead of using window.history.pushState directly) ` +\n              `to avoid this situation.`\n          );\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n\n  let action = Action.Pop;\n  let [index, location] = getIndexAndLocation();\n  let listeners = createEvents<Listener>();\n  let blockers = createEvents<Blocker>();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  // state defaults to `null` because `window.history.state` does\n  function getNextLocation(to: To, state: any = null): Location {\n    return readOnly<Location>({\n      pathname: location.pathname,\n      hash: \"\",\n      search: \"\",\n      ...(typeof to === \"string\" ? parsePath(to) : to),\n      state,\n      key: createKey(),\n    });\n  }\n\n  function getHistoryStateAndUrl(\n    nextLocation: Location,\n    index: number\n  ): [HistoryState, string] {\n    return [\n      {\n        usr: nextLocation.state,\n        key: nextLocation.key,\n        idx: index,\n      },\n      createHref(nextLocation),\n    ];\n  }\n\n  function allowTx(action: Action, location: Location, retry: () => void) {\n    return (\n      !blockers.length || (blockers.call({ action, location, retry }), false)\n    );\n  }\n\n  function applyTx(nextAction: Action) {\n    action = nextAction;\n    [index, location] = getIndexAndLocation();\n    listeners.call({ action, location });\n  }\n\n  function push(to: To, state?: any) {\n    let nextAction = Action.Push;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index + 1);\n\n      // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n      try {\n        globalHistory.pushState(historyState, \"\", url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    let nextAction = Action.Replace;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index);\n\n      // TODO: Support forced reloading\n      globalHistory.replaceState(historyState, \"\", url);\n\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta: number) {\n    globalHistory.go(delta);\n  }\n\n  let history: BrowserHistory = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return location;\n    },\n    createHref,\n    push,\n    replace,\n    go,\n    back() {\n      go(-1);\n    },\n    forward() {\n      go(1);\n    },\n    listen(listener) {\n      return listeners.push(listener);\n    },\n    block(blocker) {\n      let unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock();\n\n        // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    },\n  };\n\n  return history;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HASH\n////////////////////////////////////////////////////////////////////////////////\n\nexport type HashHistoryOptions = { window?: Window };\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  let { window = document.defaultView! } = options;\n  let globalHistory = window.history;\n\n  function getIndexAndLocation(): [number, Location] {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    let state = globalHistory.state || {};\n    return [\n      state.idx,\n      readOnly<Location>({\n        pathname,\n        search,\n        hash,\n        state: state.usr || null,\n        key: state.key || \"default\",\n      }),\n    ];\n  }\n\n  let blockedPopTx: Transition | null = null;\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      let nextAction = Action.Pop;\n      let [nextIndex, nextLocation] = getIndexAndLocation();\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          let delta = index - nextIndex;\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry() {\n                go(delta * -1);\n              },\n            };\n\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          warning(\n            false,\n            // TODO: Write up a doc that explains our blocking strategy in\n            // detail and link to it here so people can understand better\n            // what is going on and how to avoid it.\n            `You are trying to block a POP navigation to a location that was not ` +\n              `created by the history library. The block will fail silently in ` +\n              `production, but in general you should do all navigation with the ` +\n              `history library (instead of using window.history.pushState directly) ` +\n              `to avoid this situation.`\n          );\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n\n  // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n  window.addEventListener(HashChangeEventType, () => {\n    let [, nextLocation] = getIndexAndLocation();\n\n    // Ignore extraneous hashchange events.\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n\n  let action = Action.Pop;\n  let [index, location] = getIndexAndLocation();\n  let listeners = createEvents<Listener>();\n  let blockers = createEvents<Blocker>();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getBaseHref() {\n    let base = document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to: To) {\n    return getBaseHref() + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function getNextLocation(to: To, state: any = null): Location {\n    return readOnly<Location>({\n      pathname: location.pathname,\n      hash: \"\",\n      search: \"\",\n      ...(typeof to === \"string\" ? parsePath(to) : to),\n      state,\n      key: createKey(),\n    });\n  }\n\n  function getHistoryStateAndUrl(\n    nextLocation: Location,\n    index: number\n  ): [HistoryState, string] {\n    return [\n      {\n        usr: nextLocation.state,\n        key: nextLocation.key,\n        idx: index,\n      },\n      createHref(nextLocation),\n    ];\n  }\n\n  function allowTx(action: Action, location: Location, retry: () => void) {\n    return (\n      !blockers.length || (blockers.call({ action, location, retry }), false)\n    );\n  }\n\n  function applyTx(nextAction: Action) {\n    action = nextAction;\n    [index, location] = getIndexAndLocation();\n    listeners.call({ action, location });\n  }\n\n  function push(to: To, state?: any) {\n    let nextAction = Action.Push;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      push(to, state);\n    }\n\n    warning(\n      nextLocation.pathname.charAt(0) === \"/\",\n      `Relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index + 1);\n\n      // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n      try {\n        globalHistory.pushState(historyState, \"\", url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    let nextAction = Action.Replace;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      replace(to, state);\n    }\n\n    warning(\n      nextLocation.pathname.charAt(0) === \"/\",\n      `Relative pathnames are not supported in hash history.replace(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      let [historyState, url] = getHistoryStateAndUrl(nextLocation, index);\n\n      // TODO: Support forced reloading\n      globalHistory.replaceState(historyState, \"\", url);\n\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta: number) {\n    globalHistory.go(delta);\n  }\n\n  let history: HashHistory = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return location;\n    },\n    createHref,\n    push,\n    replace,\n    go,\n    back() {\n      go(-1);\n    },\n    forward() {\n      go(1);\n    },\n    listen(listener) {\n      return listeners.push(listener);\n    },\n    block(blocker) {\n      let unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock();\n\n        // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    },\n  };\n\n  return history;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// MEMORY\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n};\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex } = options;\n  let entries: Location[] = initialEntries.map((entry) => {\n    let location = readOnly<Location>({\n      pathname: \"/\",\n      search: \"\",\n      hash: \"\",\n      state: null,\n      key: createKey(),\n      ...(typeof entry === \"string\" ? parsePath(entry) : entry),\n    });\n\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: ${JSON.stringify(\n        entry\n      )})`\n    );\n\n    return location;\n  });\n  let index = clamp(\n    initialIndex == null ? entries.length - 1 : initialIndex,\n    0,\n    entries.length - 1\n  );\n\n  let action = Action.Pop;\n  let location = entries[index];\n  let listeners = createEvents<Listener>();\n  let blockers = createEvents<Blocker>();\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  function getNextLocation(to: To, state: any = null): Location {\n    return readOnly<Location>({\n      pathname: location.pathname,\n      search: \"\",\n      hash: \"\",\n      ...(typeof to === \"string\" ? parsePath(to) : to),\n      state,\n      key: createKey(),\n    });\n  }\n\n  function allowTx(action: Action, location: Location, retry: () => void) {\n    return (\n      !blockers.length || (blockers.call({ action, location, retry }), false)\n    );\n  }\n\n  function applyTx(nextAction: Action, nextLocation: Location) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({ action, location });\n  }\n\n  function push(to: To, state?: any) {\n    let nextAction = Action.Push;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      push(to, state);\n    }\n\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `Relative pathnames are not supported in memory history.push(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    let nextAction = Action.Replace;\n    let nextLocation = getNextLocation(to, state);\n    function retry() {\n      replace(to, state);\n    }\n\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `Relative pathnames are not supported in memory history.replace(${JSON.stringify(\n        to\n      )})`\n    );\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(delta: number) {\n    let nextIndex = clamp(index + delta, 0, entries.length - 1);\n    let nextAction = Action.Pop;\n    let nextLocation = entries[nextIndex];\n    function retry() {\n      go(delta);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return location;\n    },\n    createHref,\n    push,\n    replace,\n    go,\n    back() {\n      go(-1);\n    },\n    forward() {\n      go(1);\n    },\n    listen(listener) {\n      return listeners.push(listener);\n    },\n    block(blocker) {\n      return blockers.push(blocker);\n    },\n  };\n\n  return history;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction clamp(n: number, lowerBound: number, upperBound: number) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\nfunction promptBeforeUnload(event: BeforeUnloadEvent) {\n  // Cancel the event.\n  event.preventDefault();\n  // Chrome (and legacy IE) requires returnValue to be set.\n  event.returnValue = \"\";\n}\n\ntype Events<F> = {\n  length: number;\n  push: (fn: F) => () => void;\n  call: (arg: any) => void;\n};\n\nfunction createEvents<F extends Function>(): Events<F> {\n  let handlers: F[] = [];\n\n  return {\n    get length() {\n      return handlers.length;\n    },\n    push(fn: F) {\n      handlers.push(fn);\n      return function () {\n        handlers = handlers.filter((handler) => handler !== fn);\n      };\n    },\n    call(arg) {\n      handlers.forEach((fn) => fn && fn(arg));\n    },\n  };\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}"]}