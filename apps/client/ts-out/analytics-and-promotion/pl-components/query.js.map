{"version":3,"file":"query.js","sourceRoot":"","sources":["../../../src/analytics-and-promotion/pl-components/query.ts"],"names":[],"mappings":"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","sourcesContent":["import {formatDay, formatMonthYYYY, nowForSite, parseUTCDate} from './util/date.js';\nimport * as storage from './util/storage.js';\n\nconst PERIODS = ['realtime', 'day', 'month', '7d', '30d', '6mo', '12mo', 'year', 'all', 'custom']\n\nimport './pl-link.js';\nimport { BrowserHistory } from './util/history.js';\n\nexport function parseQuery(querystring: string, site: PlausibleSiteData): PlausibleQueryData {\n  const q = new URLSearchParams(querystring)\n  let period = q.get('period')\n  const periodKey = `period__${  site.domain}`\n\n  if (PERIODS.includes(period!)) {\n    if (period !== 'custom' && period !== 'realtime') storage.setItem(periodKey, period!)\n  } else if (storage.getItem(periodKey)) {\n      period = storage.getItem(periodKey)\n    } else {\n      period = '30d'\n    }\n\n    return {\n    period,\n    date: q.get('date') ? parseUTCDate(q.get('date')!) : nowForSite(site),\n    from: q.get('from') ? parseUTCDate(q.get('from')!) : undefined,\n    to: q.get('to') ? parseUTCDate(q.get('to')!) : undefined,\n    with_imported: q.get('with_imported') ? q.get('with_imported') === 'true' : true,\n    filters: {\n      'goal': q.get('goal'),\n      'props': JSON.parse(q.get('props')!),\n      'source': q.get('source'),\n      'utm_medium': q.get('utm_medium'),\n      'utm_source': q.get('utm_source'),\n      'utm_campaign': q.get('utm_campaign'),\n      'utm_content': q.get('utm_content'),\n      'utm_term': q.get('utm_term'),\n      'referrer': q.get('referrer'),\n      'screen': q.get('screen'),\n      'browser': q.get('browser'),\n      'browser_version': q.get('browser_version'),\n      'os': q.get('os'),\n      'os_version': q.get('os_version'),\n      'country': q.get('country'),\n      'region': q.get('region'),\n      'city': q.get('city'),\n      'page': q.get('page'),\n      'entry_page': q.get('entry_page'),\n      'exit_page': q.get('exit_page')\n    }\n  } as PlausibleQueryData\n}\n\nexport function appliedFilters(query: PlausibleQueryData) {\n  return Object.keys(query.filters!)\n     //@ts-ignore\n    .map((key: string) => [key, query.filters![key]])\n    .filter(([_key, value]) => !!value);\n}\n\nexport function generateQueryString(data: any) {\n  const query = new URLSearchParams(window.location.search)\n  Object.keys(data).forEach(key => {\n    if (!data[key]) {\n      query.delete(key)\n      return\n    }\n\n    query.set(key, data[key])\n  })\n  return query.toString()\n}\n\nexport function navigateToQuery(history: BrowserHistory, queryFrom: PlausibleQueryData, newData: PlausibleQueryData | PlausibleQueryStringsData) {\n  // if we update any data that we store in localstorage, make sure going back in history will\n  // revert them\n  const newQueryString = generateQueryString(newData);\n  if (newData.period && newData.period !== queryFrom.period) {\n    const replaceQuery = new URLSearchParams(window.location.search)\n    replaceQuery.set('period', queryFrom.period)\n//    history.replace({ search: replaceQuery.toString() })\n    const currentUri = `${location.pathname}?${replaceQuery.toString()}`;\n    window.history.pushState({}, \"\", currentUri);\n    setTimeout(() => {\n      window.dispatchEvent(new CustomEvent('popstate'));\n    });\n  } else {\n    const currentUri = `${location.pathname}?${newQueryString}`;\n    window.history.pushState({}, \"\", currentUri);\n    setTimeout(() => {\n      window.dispatchEvent(new CustomEvent('popstate'));\n    });\n  }\n\n  // then push the new query to the history\n  history.push({ search: newQueryString })\n}\n\n//TODO: Fix routing\n//const QueryLinkWithRouter = withRouter(QueryLink)\n//export { QueryLinkWithRouter as QueryLink };\n\n//const QueryButtonWithRouter = withRouter(QueryButton)\n//export { QueryButtonWithRouter as QueryButton };\n\nexport function toHuman(query: PlausibleQueryData) {\n  if (query.period === 'day') {\n    return `on ${formatDay(query.date!)}`\n  } if (query.period === 'month') {\n    return `in ${formatMonthYYYY(query.date!)}`\n  } if (query.period === '7d') {\n    return 'in the last 7 days'\n  } if (query.period === '30d') {\n    return 'in the last 30 days'\n  } if (query.period === '6mo') {\n    return 'in the last 6 months'\n  } if (query.period === '12mo') {\n    return 'in the last 12 months'\n  }\n  return ''\n}\n\nexport function eventName(query: PlausibleQueryData) {\n  if (query.filters?.goal) {\n    if (query.filters.goal.startsWith('Visit ')) {\n      return 'pageviews'\n    }\n    return 'events'\n  }\n  return 'pageviews'\n}\n\nexport const formattedFilters = {\n  'goal': 'Goal',\n  'props': 'Property',\n  'prop_key': 'Property',\n  'prop_value': 'Value',\n  'source': 'Source',\n  'utm_medium': 'UTM Medium',\n  'utm_source': 'UTM Source',\n  'utm_campaign': 'UTM Campaign',\n  'utm_content': 'UTM Content',\n  'utm_term': 'UTM Term',\n  'referrer': 'Referrer URL',\n  'screen': 'Screen size',\n  'browser': 'Browser',\n  'browser_version': 'Browser Version',\n  'os': 'Operating System',\n  'os_version': 'Operating System Version',\n  'country': 'Country',\n  'region': 'Region',\n  'city': 'City',\n  'page': 'Page',\n  'entry_page': 'Entry Page',\n  'exit_page': 'Exit Page'\n} as Record<string,string>;"]}