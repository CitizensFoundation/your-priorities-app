{"version":3,"file":"pl-goal-graph.js","sourceRoot":"","sources":["../../../../../src/analytics-and-promotion/pl-components/stats/graph/pl-goal-graph.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAc,GAAG,EAAE,IAAI,EAAW,MAAM,KAAK,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAS,MAAM,mBAAmB,CAAC;AACnE,OAAO,KAAK,MAAM,eAAe,CAAC;AAElC,OAAO,eAEN,MAAM,gCAAgC,CAAC;AACxC,OAAO,KAAK,GAAG,MAAM,WAAW,CAAC;AAEjC,uDAAuD;AACvD,OAAO,EAAgB,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAC9D,OAAO,mBAAmB,CAAC;AAK3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAKjD,IAAM,kBAAkB,GAAxB,MAAM,kBAAmB,SAAQ,kBAAkB;IAIxD,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,GAAG,KAAK,CAAC,MAAM;YACf,GAAG,CAAA;;;;OAIF;SACF,CAAC;IACJ,CAAC;IAED,IAAI,mBAAmB;QACrB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,MAAM,GAAY,EAAE,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YAC1C,YAAY;YACZ,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC5B,YAAY;gBACZ,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAE,MAAM,EAAE,CAAC;oBACpC,YAAY;oBACZ,YAAY,IAAI,GAAG,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;oBACtD,YAAY;gBACd,CAAC;qBAAM,IAAI,GAAG,IAAE,MAAM,EAAE,CAAC;oBACvB,YAAY;oBACZ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvC,CAAC;qBAAM,CAAC;oBACN,YAAY;oBACZ,YAAY,IAAI,SAAS,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;gBAC9D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,YAAY,EAAG,CAAC;YAClB,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;YAClC,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,MAAM,CAAC,MAAM,GAAC,CAAC,EAAE,CAAC;YACrB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,YAAY,CAAC;QAC9C,CAAC;aAAM,CAAC;YACN,OAAO,YAAY,CAAC;QACtB,CAAC;IACH,CAAC;IAEQ,KAAK,CAAC,cAAc;QAC3B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAE,UAAU,EAAE,CAAC;gBAClC,IAAI,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxC,KAAK,GAAG,IAAI,CAAC,gCAAgC,CAAC,KAAK,CAAC,CAAC;gBACrD,GAAG;qBACF,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,iBAAiB,IAAI,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;oBACzD,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;oBAChC,OAAO,EAAE,kBAAkB,CAAC,IAAI,CAAC,IAAK,CAAC,MAAO,CAAC;oBAC/C,OAAO,EAAE,eAAe,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,mBAAmB,EAAE;iBAC3E,CAAC;qBACD,IAAI,CAAC,GAAG,CAAC,EAAE;oBACV,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;oBACvB,OAAO,CAAC,GAAG,CAAC,CAAC;gBACf,CAAC,CAAC;qBACD,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACjC,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,EAAE,CAAC,CAAC;YACd,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,IAAS;QACpB,MAAM,OAAO,GAAG;YACd,MAAM,EAAE,EAAE;YACV,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;SAChD,CAAC;QAET,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7C,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC1C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACnD,CAAC;QAED,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;IAC3B,CAAC;IAEQ,eAAe;QACtB,IAAI,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAsB,CAAC;QACrD,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,GAAG,IAAI,CAAC,aAAkC,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,GAAG,GAAG,OAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,EACnB,IAAI,CAAC,SAAS,CAAC,aAAa,EAC5B,IAAI,CAAC,GAAI,CACV,CAAC;QACF,mIAAmI;QACnI,yGAAyG;QAEzG,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAEjC,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,GAAI,EAAE;YAC1B,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE;gBACJ,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM;gBAC7B,QAAQ,EAAE,OAAO;aAClB;YACD,OAAO,EAAE;gBACP,SAAS,EAAE,KAAK;gBAChB,OAAO,EAAE;oBACP,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;oBAC1B,OAAO,EAAE;wBACP,OAAO,EAAE,KAAK;wBACd,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,KAAK;wBAChB,QAAQ,EAAE,SAAS;wBACnB,QAAQ,EAAE,IAAI,CAAC,YAAY,CACzB,IAAI,CAAC,SAAS,EACd,OAAO,EACP,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAC5B;qBACF;iBACF;gBACD,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI,CAAC,sBAAsB;gBACrC,QAAQ,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxD,YAAY;gBACZ,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;gBAChC,MAAM,EAAE;oBACN,CAAC,EAAE;wBACD,WAAW,EAAE,IAAI;wBACjB,KAAK,EAAE;4BACL,YAAY;4BACZ,QAAQ,EAAE,eAAe;4BACzB,aAAa,EAAE,CAAC;4BAChB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,SAAS;yBACzD;wBACD,IAAI,EAAE;4BACJ,YAAY;4BACZ,aAAa,EAAE,aAAa;4BAC5B,UAAU,EAAE,KAAK;yBAClB;qBACF;oBACD,CAAC,EAAE;wBACD,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;wBACxB,KAAK,EAAE;4BACL,aAAa,EAAE,CAAC;4BAChB,QAAQ,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE,MAAM;gCACrC,OAAO,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,CACtC,IAAI,CAAC,gBAAgB,CAAC,GAAa,CAAC,CACrC,CAAC;4BACJ,CAAC;4BAED,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,SAAS;yBACzD;qBACF;iBACF;gBACD,WAAW,EAAE;oBACX,IAAI,EAAE,OAAO;oBACb,SAAS,EAAE,KAAK;iBACjB;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAEQ,YAAY;QACnB,OAAO,IAAI,CAAA,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;IACpD,CAAC;CACF,CAAA;AAvKC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;kDACR;AAFP,kBAAkB;IAD9B,aAAa,CAAC,eAAe,CAAC;GAClB,kBAAkB,CAyK9B","sourcesContent":["import { LitElement, css, html, nothing } from 'lit';\nimport { property, customElement, query } from 'lit/decorators.js';\nimport Chart from 'chart.js/auto';\nimport { navigateToQuery } from '../../query.js';\nimport numberFormatter, {\n  durationFormatter,\n} from '../../util/number-formatter.js';\nimport * as api from '../../api';\nimport * as storage from '../../util/storage.js';\n//import LazyLoader from '../../components/lazy-loader'\nimport { GraphTooltip, dateFormatter } from './graph-util.js';\nimport './pl-top-stats.js';\nimport * as url from '../../util/url.js';\nimport { PlausibleBaseElement } from '../../pl-base-element.js';\n\nimport { PlausibleBaseElementWithState } from '../../pl-base-element-with-state.js';\nimport { PlausibleBaseGraph } from './pl-base-graph.js';\nimport { themeFromSourceColor } from '@material/material-color-utilities';\nimport { formatISO } from '../../util/date.js';\n\n@customElement('pl-goal-graph')\nexport class PlausibleGoalGraph extends PlausibleBaseGraph {\n  @property({ type: Array })\n  events!: string[];\n\n  static override get styles() {\n    return [\n      ...super.styles,\n      css`\n        .topContainer {\n          margin-top: 24px;\n        }\n      `,\n    ];\n  }\n\n  get filterInStatsFormat() {\n    let filterString = '';\n    let events: string[] =[];\n    Object.keys(this.query.filters).map((key) => {\n      //@ts-ignore\n      if (this.query.filters[key]) {\n        //@ts-ignore\n        if (this.query.filters[key]==\"page\") {\n          //@ts-ignore\n          filterString += `${key}==${this.query.filters[key]};`;\n          //@ts-ignore\n        } else if (key==\"goal\") {\n          //@ts-ignore\n          events.push(this.query.filters[key]);\n        } else {\n          //@ts-ignore\n          filterString += `visit:${key}==${this.query.filters[key]};`;\n        }\n      }\n    });\n\n    if (filterString)  {\n      filterString = `;${filterString}`;\n      filterString = filterString.slice(0, -1);\n    }\n\n    if (events.length>0) {\n     return `|${events.join('|')}` + filterString;\n    } else {\n      return filterString;\n    }\n  }\n\n  override async fetchGraphData() {\n    return new Promise((resolve, reject) => {\n      if (this.query.period!=\"realtime\") {\n        let query = structuredClone(this.query);\n        query = this.transformCustomDateForStatsQuery(query);\n        api\n        .get(this.proxyUrl, `/api/v1/stats/${this.method}`, query, {\n          metrics: this.metrics,\n          statsBegin: this.site.statsBegin,\n          site_id: encodeURIComponent(this.site!.domain!),\n          filters: `event:name==${this.events.join('|')}${this.filterInStatsFormat}`,\n        })\n        .then(res => {\n          this.setGraphData(res);\n          resolve(res);\n        })\n        .catch(error => reject(error));\n      } else {\n        resolve([]);\n      }\n    });\n  }\n\n  setGraphData(data: any) {\n    const newData = {\n      labels: [],\n      plot: [],\n      interval: this.query.period == \"day\" ? 'hour' : 'date',\n    } as any;\n\n    for (let r = 0; data.results.length > r; r++) {\n      newData.labels.push(data.results[r].date);\n      newData.plot.push(data.results[r][this.metrics]);\n    }\n\n    this.graphData = newData;\n  }\n\n  override regenerateChart() {\n    let graphEl = this.$$('canvas') as HTMLCanvasElement;\n    if (!graphEl) {\n      graphEl = this.canvasElement as HTMLCanvasElement;\n    }\n    this.ctx = graphEl!.getContext('2d');\n    const dataSet = this.buildDataSet(\n      this.graphData.plot,\n      this.graphData.present_index,\n      this.ctx!\n    );\n    // const prev_dataSet = graphData.prev_plot && buildDataSet(graphData.prev_plot, false, this.ctx, METRIC_LABELS[this.metric], true)\n    // const combinedDataSets = comparison.enabled && prev_dataSet ? [...dataSet, ...prev_dataSet] : dataSet;\n\n    const graphData = this.graphData;\n\n    return new Chart(this.ctx!, {\n      type: 'line',\n      data: {\n        labels: this.graphData.labels,\n        datasets: dataSet,\n      },\n      options: {\n        animation: false,\n        plugins: {\n          legend: { display: false },\n          tooltip: {\n            enabled: false,\n            mode: 'index',\n            intersect: false,\n            position: 'average',\n            external: this.graphTooltip(\n              this.graphData,\n              graphEl,\n              this.$$('#chartjs-tooltip')\n            ),\n          },\n        },\n        responsive: true,\n        onResize: this.updateWindowDimensions,\n        elements: { line: { tension: 0 }, point: { radius: 0 } },\n        //@ts-ignore\n        onClick: this.onClick.bind(this),\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              //@ts-ignore\n              callback: numberFormatter,\n              maxTicksLimit: 8,\n              color: this.darkTheme ? 'rgb(243, 244, 246)' : undefined,\n            },\n            grid: {\n              //@ts-ignore\n              zeroLineColor: 'transparent',\n              drawBorder: false,\n            },\n          },\n          x: {\n            grid: { display: false },\n            ticks: {\n              maxTicksLimit: 8,\n              callback: function (val, _index, _ticks) {\n                return dateFormatter(graphData.interval)(\n                  this.getLabelForValue(val as number)\n                );\n              },\n\n              color: this.darkTheme ? 'rgb(243, 244, 246)' : undefined,\n            },\n          },\n        },\n        interaction: {\n          mode: 'index',\n          intersect: false,\n        },\n      },\n    });\n  }\n\n  override renderHeader() {\n    return html` <h1>${this.t(this.chartTitle)}</h1>`;\n  }\n}\n"]}