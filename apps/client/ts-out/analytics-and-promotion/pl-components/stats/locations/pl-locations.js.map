{"version":3,"file":"pl-locations.js","sourceRoot":"","sources":["../../../../../src/analytics-and-promotion/pl-components/stats/locations/pl-locations.ts"],"names":[],"mappings":"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","sourcesContent":["import { customElement, property } from 'lit/decorators.js';\nimport { html, nothing } from 'lit';\n\nimport * as storage from '../../util/storage.js';\nimport * as url from '../../util/url.js';\nimport * as api from '../../api.js';\nimport '../reports/pl-list-report.js';\n\nimport './pl-countries-map.js';\n\nimport { apiPath, sitePath } from '../../util/url.js';\nimport { PlausibleBaseElementWithState } from '../../pl-base-element-with-state.js';\n\n@customElement('pl-locations')\nexport class PlausableLocations extends PlausibleBaseElementWithState {\n  @property({ type: String })\n  tabKey!: string;\n\n  @property({ type: String })\n  storedTab: string | undefined;\n\n  @property({ type: String })\n  mode: string | undefined;\n\n  countriesRestoreMode: string | undefined;\n\n override connectedCallback() {\n    super.connectedCallback();\n    this.tabKey = `pageTab__${this.site.domain}`;\n    this.mode = this.storedTab || 'map';\n    if (this.timer) this.timer.onTick(this.renderCountries.bind(this));\n\n  }\n\n  setMode(mode: string) {\n    storage.setItem(this.tabKey, mode);\n    this.mode = mode;\n  }\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    if (changedProperties.get('query')) {\n      const isRemovingFilter = (filterName: string) => {\n        return (\n          //@ts-ignore\n          changedProperties.get('query').filters[filterName] &&\n          //@ts-ignore\n          !this.query.filters[filterName]\n        );\n      };\n\n      if (this.mode === 'cities' && isRemovingFilter('region')) {\n        this.setMode('regions');\n      }\n\n      if (this.mode === 'regions' && isRemovingFilter('country')) {\n        this.setMode(this.countriesRestoreMode || 'countries');\n      }\n    }\n  }\n\n  onCountryFilter(mode: string) {\n    this.countriesRestoreMode = mode;\n    this.setMode('regions');\n  }\n\n  onRegionFilter() {\n    this.setMode('cities');\n  }\n\n  renderCountries() {\n    const fetchData = () => {\n      return api\n        .get(\n          this.proxyUrl,\n          apiPath(this.site, '/countries'),\n          this.query,\n          { limit: 9 }\n        )\n        .then(res => {\n          return res.map((row: any) =>\n            Object.assign({}, row, { percentage: undefined })\n          );\n        });\n    };\n\n    const renderIcon = (country: PlausibleCountryData) => {\n      return html`<span class=\"mr-1\">${country.flag}</span>`;\n    };\n\n    return html`\n      <pl-list-report\n        .fetchDataFunction=${fetchData}\n        .filter=${{ country: 'code', country_name: 'name' }}\n        @click=${() => this.onCountryFilter('countries')}\n        .keyLabel=${this.t(\"Country\")}\n        .detailsLink=${sitePath(this.site, '/countries')}\n        .query=${this.query}\n        .timer=${this.timer}\n        .renderIcon=${renderIcon}\n        color=\"bg-orange-50\"\n      ></pl-list-report>\n    `;\n  }\n\n  renderRegions() {\n    const fetchData = () => {\n      return api.get(\n        this.proxyUrl,\n        apiPath(this.site, '/regions'),\n        this.query,\n        { limit: 9 }\n      );\n    };\n\n    const renderIcon = (region: PlausibleRegionData) => {\n      return html`<span class=\"mr-1\">export${region.country_flag}</span>`;\n    };\n\n    return html`\n      <pl-list-report\n        .fetchDataFunction=${fetchData}\n        .filter=${{ region: 'code', region_name: 'name' }}\n        @click=${this.onRegionFilter}\n        .keyLabel=${this.t(\"Region\")}\n        .detailsLink=${sitePath(this.site, '/regions')}\n        .query=${this.query}\n        .renderIcon=${renderIcon}\n        color=\"bg-orange-50\"\n      ></pl-list-report>\n    `;\n  }\n\n  renderCities() {\n    const fetchData = () => {\n      return api.get(this.proxyUrl, apiPath(this.site, '/cities'), this.query, {\n        limit: 9,\n      });\n    };\n\n    const renderIcon = (city: PlausibleCityData) => {\n      return html`<span class=\"mr-1\">{city.country_flag}</span>`;\n    };\n\n    return html`\n      <pl-list-report\n        .fetchDataFunction=${fetchData}\n        .filter=${{ city: 'code', city_name: 'name' }}\n        .keyLabel=${this.t(\"City\")}\n        .detailsLink=${sitePath(this.site, '/cities')}\n        .query=${this.query}\n        .renderIcon=${renderIcon}\n        color=\"bg-orange-50\"\n      ></pl-list-report>\n    `;\n  }\n\n  get labelFor() {\n    return {\n      countries: 'Countries',\n      regions: 'Regions',\n      cities: 'Cities',\n    };\n  }\n\n  renderContent() {\n    switch (this.mode) {\n      case 'cities':\n        return this.renderCities();\n      case 'regions':\n        return this.renderRegions();\n      case 'countries':\n        return this.renderCountries();\n      case 'map':\n      default:\n        return html`<pl-countries-map\n          @click=${() => this.onCountryFilter('map')}\n          .site=${this.site}\n          .query=${this.query}\n          .timer=${this.timer}\n          .proxyUrl=${this.proxyUrl}\n        ></pl-countries-map>`;\n    }\n  }\n\n  renderPill(name: string, mode: string) {\n    const isActive = this.mode === mode;\n\n    if (isActive) {\n      return html`\n        <li\n          class=\"inline-block h-5 text-indigo-700 dark:text-indigo-500 font-bold active-prop-heading\"\n        >\n          ${this.t(name)}\n        </li>\n      `;\n    } else {\n      return html`\n        <li\n          class=\"hover:text-indigo-600 cursor-pointer\"\n          @click=${() => this.setMode(mode)}\n        >\n          ${this.t(name)}\n        </li>\n      `;\n    }\n  }\n\n  override render() {\n    return html`\n      <div class=\"stats-item flex flex-col w-full mt-6 stats-item--has-header\">\n        <div\n          class=\"stats-item-header flex flex-col flex-grow bg-white dark:bg-gray-825 shadow-xl rounded p-4 relative\"\n        >\n          <div class=\"w-full flex justify-between\">\n            <h3 class=\"font-bold dark:text-gray-100\">\n              ${\n                //@ts-ignore\n                this.t(this.labelFor[this.mode]) || this.t('Locations')\n              }\n            </h3>\n            <ul\n              class=\"flex font-medium text-xs text-gray-500 dark:text-gray-400 space-x-2\"\n            >\n              ${this.renderPill('Map', 'map')}\n              ${this.renderPill('Countries', 'countries')}\n              ${this.renderPill('Regions', 'regions')}\n              ${this.renderPill('Cities', 'cities')}\n            </ul>\n          </div>\n          ${this.renderContent()}\n        </div>\n      </div>\n    `;\n  }\n}\n"]}