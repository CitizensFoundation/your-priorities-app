{"version":3,"file":"pl-countries-map.js","sourceRoot":"","sources":["../../../../../src/analytics-and-promotion/pl-components/stats/locations/pl-countries-map.ts"],"names":[],"mappings":"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","sourcesContent":["import { customElement, property } from 'lit/decorators.js';\nimport { html, nothing } from 'lit';\n\nimport * as storage from '../../util/storage.js';\nimport * as url from '../../util/url.js';\nimport * as api from '../../api.js';\nimport '../reports/pl-list-report.js';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson-client';\n\nimport { apiPath, sitePath } from '../../util/url.js';\nimport { PlausibleBaseElementWithState } from '../../pl-base-element-with-state.js';\nimport numberFormatter from '../../util/number-formatter.js';\nimport { navigateToQuery } from '../../query.js';\nimport { BrowserHistory } from '../../util/history.js';\n\ninterface TopoJSONCountries {\n  type: string;\n  geometries: Array<{\n    type: string;\n    id: string;\n    properties: {\n      name: string;\n    };\n  }>;\n}\n\ninterface WorldAtlas {\n  objects: {\n    countries: TopoJSONCountries;\n  };\n}\n\n@customElement('pl-countries-map')\nexport class PlausableCountriesMap extends PlausibleBaseElementWithState {\n  @property({ type: Array })\n  countries: PlausibleCountryData[] | undefined;\n\n  @property({ type: Boolean })\n  loading = true;\n\n  @property({ type: Boolean })\n  darkTheme = false;\n\n  @property({ type: Object })\n  history: BrowserHistory | undefined;\n\n  @property({ type: Object })\n  map: any;\n\n  defaultFill: string = \"#038bff\";\n\n  constructor() {\n    super();\n    this.resizeMap = this.resizeMap.bind(this);\n    this.drawMap = this.drawMap.bind(this);\n    this.getDataset = this.getDataset.bind(this);\n    this.darkTheme =\n      document!.querySelector('html')!.classList.contains('dark') || false;\n  }\n\n override connectedCallback(): void {\n    super.connectedCallback();\n    if (this.timer) this.timer.onTick(this.updateCountries.bind(this));\n  }\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    if (changedProperties.get('query')) {\n      this.loading = true;\n      this.countries = undefined;\n      this.fetchCountries();\n    }\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    window.removeEventListener('resize', this.resizeMap);\n  }\n\n  override firstUpdated() {\n    this.fetchCountries();\n    window.addEventListener('resize', this.resizeMap);\n  }\n\n  getDataset() {\n    const a = false;\n    const dataset = {};\n\n    if (this.countries) {\n      var onlyValues = this.countries.map(function (obj: PlausibleCountryData) {\n        return obj.visitors;\n      });\n      var maxValue = Math.max.apply(null, onlyValues);\n\n      // eslint-disable-next-line no-undef @ts-ignore\n      //@ts-ignore\n      const paletteScale = d3.scaleLinear()\n      .domain([0, maxValue])\n      //@ts-ignore\n      .range([this.darkTheme ? '#2e3954' : '#f3ebff', this.darkTheme ? '#6366f1' : '#a779e9']);\n\n      this.countries.forEach(function (item) {\n        //@ts-ignore\n        dataset[item.alpha_3] = {\n          numberOfThings: item.visitors,\n          fillColor: paletteScale(item.visitors),\n        };\n      });\n    }\n\n    return dataset;\n}\n\n  updateCountries() {\n    this.fetchCountries().then(() => {\n      // Assuming `this.countries` is updated by `fetchCountries`\n      const dataset = this.getDataset();\n\n      // Select all country paths and update their colors\n      d3.select(this.$$('#map-container')).selectAll('path.country')\n        .attr('fill', d => {\n          // Assuming `d.id` is the country identifier that matches keys in your dataset\n          //@ts-ignore\n          const countryData = dataset[d.id];\n          return countryData ? countryData.fillColor : this.defaultFill;\n        });\n    });\n  }\n\n  fetchCountries() {\n    return api.get(\n      this.proxyUrl,\n        `/api/stats/${encodeURIComponent(this.site.domain)}/countries`,\n        this.query,\n        { limit: 300 }\n      )\n      .then(async (res) => {\n        this.loading = false;\n        this.countries = res;\n        await this.updateComplete;\n        this.drawMap();\n      });\n  }\n\n  resizeMap() {\n    this.map && this.map.resize();\n  }\n\n  drawMap(): void {\n    const dataset: Record<string, { fillColor: string }> = this.getDataset();\n    const label: string = this.query.period === 'realtime' ? this.t('Current visitors') : this.t('Visitors');\n    const defaultFill: string = this.darkTheme ? '#2d3747' : '#f8fafc';\n    const highlightFill: string = this.darkTheme ? '#374151' : '#F5F5F5';\n    const borderColor: string = this.darkTheme ? '#1f2937' : '#dae1e7';\n    const highlightBorderColor: string = this.darkTheme ? '#4f46e5' : '#a779e9';\n\n    // Fetch the TopoJSON file for the world countries\n    d3.json<WorldAtlas>('/topo/world.json').then((world: any) => {\n      const countries: any = (topojson.feature(world, world.objects.countries) as any).features;\n      //@ts-ignore\n      const communityion: d3.GeoCommunityion = d3.geoMercator();\n      //@ts-ignore\n      const pathGenerator: d3.GeoPath = d3.geoPath().communityion(communityion);\n\n      const svg: d3.Selection<SVGSVGElement, unknown, null, undefined> = d3.select(this.$$('#map-container')).append('svg');\n\n      svg.selectAll('path')\n        .data(countries)\n        .enter()\n        .append('path')\n        .attr('d', (d: any) => pathGenerator(d))\n        .attr('class', 'country')\n        .attr('fill', (d: any) => dataset[d.id]?.fillColor ?? defaultFill)\n        .attr('stroke', borderColor)\n        .on('mouseover', (event: MouseEvent, d: any) => {\n          d3.select(event.target as SVGPathElement)\n            .attr('fill', dataset[d.id]?.fillColor ?? highlightFill)\n            .attr('stroke', highlightBorderColor);\n          // Show tooltip (implement tooltip logic here)\n        })\n        .on('mouseout', (event: MouseEvent, d: any) => {\n          d3.select(event.target as SVGPathElement)\n            .attr('fill', dataset[d.id]?.fillColor ?? defaultFill)\n            .attr('stroke', borderColor);\n          // Hide tooltip\n        })\n        .on('click', (d: any) => {\n          const country = this.countries?.find(c => c.alpha_3 === d.id);\n          if (country) {\n            this.onClick();\n            //@ts-ignore\n            navigateToQuery(this.history!, this.query, {\n              //@ts-ignore\n              country: country.code,\n              //@ts-ignore\n              country_name: country.name,\n            });\n          }\n        });\n    });\n  }\n\n  onClick() {\n\n  }\n\n  geolocationDbNotice() {\n    if (this.site.isDbip) {\n      return html`\n        <span class=\"text-xs text-gray-500 absolute bottom-4 right-3\"\n          >IP Geolocation by\n          <a\n            target=\"_blank\"\n            href=\"https://db-ip.com\"\n            rel=\"noreferrer\"\n            class=\"text-indigo-600\"\n            >DB-IP</a\n          ></span\n        >\n      `;\n    }\n\n    return null;\n  }\n\n  renderBody() {\n    if (this.countries) {\n      return html`\n        <div\n          class=\"mx-auto mt-4\"\n          style=\"overflow: hidden; width: 100%; max-width: 475px; height: 335px\"\n          id=\"map-container\"\n        ></div>\n        <pl-more-link\n          .site=${this.site}\n          .list=${this.countries}\n          endpoint=\"countries\"\n        ></pl-more-link>\n        ${this.geolocationDbNotice()}\n      `;\n    }\n\n    return null;\n  }\n\n  override render() {\n    return html`\n      ${this.loading\n        ? html`<div class=\"mx-auto my-32 loading\"><div></div></div>`\n        : nothing}\n      <pl-fade-in .show=${!this.loading}> ${this.renderBody()} </pl-fade-in>\n    `;\n  }\n}\n"]}