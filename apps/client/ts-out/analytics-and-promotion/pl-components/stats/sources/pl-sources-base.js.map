{"version":3,"file":"pl-sources-base.js","sourceRoot":"","sources":["../../../../../src/analytics-and-promotion/pl-components/stats/sources/pl-sources-base.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, css, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { PlausibleBaseElement } from '../../pl-base-element';\nimport { PlausibleBaseElementWithState } from '../../pl-base-element-with-state';\nimport { ChevronDownIcon } from '../../pl-icons';\nimport * as storage from '../../util/storage.js';\n\nexport const UTM_TAGS = {\n  utm_medium: {\n    label: 'UTM Medium',\n    shortLabel: 'UTM Medium',\n    endpoint: 'utm_mediums',\n  },\n  utm_source: {\n    label: 'UTM Source',\n    shortLabel: 'UTM Source',\n    endpoint: 'utm_sources',\n  },\n  utm_campaign: {\n    label: 'UTM Campaign',\n    shortLabel: 'UTM Campai',\n    endpoint: 'utm_campaigns',\n  },\n  utm_content: {\n    label: 'UTM Content',\n    shortLabel: 'UTM Conten',\n    endpoint: 'utm_contents',\n  },\n  utm_term: {\n    label: 'UTM Term',\n    shortLabel: 'UTM Term',\n    endpoint: 'utm_terms',\n  },\n} as PlausibleUtmTagsData;\n\nexport class PlausibleSourcesBase extends PlausibleBaseElementWithState {\n  @property({ type: String })\n  tab!: PlausibleSourcesTabOptions;\n\n  @property({ type: Array })\n  referrers: PlausibleReferrerData[] | undefined;\n\n  @property({ type: Boolean })\n  loading = false;\n\n  @property({ type: Boolean })\n  open = false;\n\n  @property({ type: Boolean })\n  alwaysShowNoRef = false\n\n  fetchReferrers() {}\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    if (changedProperties.has('tab')) {\n      this.fire('tab-changed', this.tab);\n    }\n\n    if (changedProperties.has('tab') || changedProperties.get('query')) {\n      this.fetchReferrers();\n    }\n  }\n\n  toggleOpen() {\n    this.open = !this.open;\n  }\n\n  get label() {\n    if (this.query.period === 'realtime') {\n      return this.t('Current visitors');\n    }\n\n    if (this.showConversionRate) {\n      return this.t('Conversions');\n    }\n\n    return this.t('Visitors');\n  }\n\n  get showConversionRate() {\n    return !!this.query.filters?.goal;\n  }\n\n  get showNoRef() {\n    return this.alwaysShowNoRef || this.query.period === 'realtime';\n  }\n\n  setTab(tab: PlausibleSourcesTabOptions) {\n    this.tab = tab;\n    this.open = false;\n  }\n\n  faviconUrl(referrer: string) {\n    if (this.proxyFaviconBaseUrl) {\n      return `${this.proxyFaviconBaseUrl}${encodeURIComponent(referrer)}`;\n    } else {\n      return `/favicon/sources/${encodeURIComponent(referrer)}`;\n    }\n  }\n  static override get styles() {\n    return [...super.styles,css`\n\n    `];\n  }\n\n  setAllTab() {\n    this.fire('tab-changed', 'all');\n    this.open = false;\n  }\n\n  renderTabs() {\n    const activeClass =\n      'inline-block h-5 text-indigo-700 dark:text-indigo-500 font-bold active-prop-heading truncate text-left';\n    const defaultClass =\n      'hover:text-indigo-600 cursor-pointer truncate text-left';\n    const dropdownOptions = [\n      'utm_medium',\n      'utm_source',\n      'utm_campaign',\n      'utm_term',\n      'utm_content',\n    ];\n    let buttonText = UTM_TAGS[this.tab]\n      ? this.t(UTM_TAGS[this.tab].label)\n      : this.t('UTM');\n\n    return html`\n      <div\n        class=\"flex text-xs font-medium text-gray-500 dark:text-gray-400 space-x-2\"\n      >\n        <div\n          class=${this.tab === 'all' ? activeClass : defaultClass}\n          @click=${this.setAllTab}\n        >\n          ${this.t(\"All\")}\n        </div>\n\n        <div class=\"relative inline-block text-left\">\n          <div>\n            <div\n              class=\"inline-flex justify-between focus:outline-none\"\n              @click=\"${this.toggleOpen}\"\n            >\n              <span\n                style=\"width: ${buttonText == \"UTM\" ? \"1.8rem\" : \"4.5rem\"}\"\n                class=\"${this.tab.startsWith('utm_')\n                  ? activeClass\n                  : defaultClass}\"\n                >${buttonText}</span\n              >\n              <div class=\"-mr-1 ml-px h-4 w-4\" aria-hidden=\"true\">\n                ${ChevronDownIcon}\n              </div>\n            </div>\n          </div>\n\n          <div\n            ?hidden=\"${!this.open}\"\n            class=\"text-left origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5 focus:outline-none z-10\"\n          >\n            <div class=\"py-1\">\n              ${dropdownOptions.map(\n                (option: any) => html`<span\n                  @click=\"${() => this.setTab(option)}\"\n                  class=\"text-gray-700 dark:text-gray-200 block px-4 py-2 text-sm ${this.tab === option ? 'font-bold' : ''}\"\n                >\n                  ${this.t(UTM_TAGS[option].label)}\n                </span>`\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n"]}