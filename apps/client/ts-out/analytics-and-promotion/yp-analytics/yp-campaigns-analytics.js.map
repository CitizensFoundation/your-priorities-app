{"version":3,"file":"yp-campaigns-analytics.js","sourceRoot":"","sources":["../../../src/analytics-and-promotion/yp-analytics/yp-campaigns-analytics.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, css, html } from 'lit';\nimport { property, customElement, query } from 'lit/decorators.js';\nimport { YpBaseElementWithLogin } from '../../common/yp-base-element-with-login';\n\nimport { YpCampaignApi } from '../yp-promotion/YpCampaignApi.js';\nimport { PlausibleBaseElementWithState } from '../pl-components/pl-base-element-with-state';\nimport * as api from '../pl-components/api.js';\nimport { UpdateModeEnum } from 'chart.js';\n\nimport './yp-campaign-analysis.js';\nimport { YpCampaignAnalysis } from './yp-campaign-analysis.js';\nimport { PlausibleGoalGraph } from '../pl-components/stats/graph/pl-goal-graph';\nimport structuredClone from '@ungap/structured-clone';\n\n@customElement('yp-campaigns-analytics')\nexport class YpCampaignsAnalytics extends PlausibleBaseElementWithState {\n  @property({ type: String })\n  collectionType!: string;\n\n  @property({ type: Number })\n  collectionId!: number;\n\n  @property({ type: Object })\n  collection: YpCollectionData | undefined;\n\n  @property({ type: Array })\n  campaigns: YpCampaignAnalyticsData[] | undefined;\n\n  @property({ type: Array })\n  foundCampaigns: YpCampaignAnalyticsData[] | undefined;\n\n  @property({ type: Boolean })\n  noData = false;\n\n  campaignApi: YpCampaignApi = new YpCampaignApi();\n\n override connectedCallback() {\n    super.connectedCallback();\n    if (this.timer) this.timer.onTick(this.getCampaigns.bind(this));\n  }\n  static override get styles() {\n    return [\n      css`\n        .mainContainer {\n          width: 1000px;\n          margin-top: 32px;\n          min-height: 310px;\n        }\n\n        @media (max-width: 1100px) {\n          .mainContainer {\n            width: 100%;\n            max-width: calc(100vw - 80px);\n          }\n        }\n\n        .textInfo {\n          margin-top: 32px;\n          text-align: center;\n          padding: 16px;\n        }\n\n        .smallContainer {\n          min-height: 60px;\n          height: 60px;\n        }\n      `,\n    ];\n  }\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    super.updated(changedProperties);\n    if (changedProperties.has('query')) {\n      this.foundCampaigns = undefined;\n      this.getCampaigns();\n    }\n  }\n\n  async getCampaigns() {\n    this.campaigns = await this.campaignApi.getCampaigns(\n      this.collectionType,\n      this.collectionId\n    );\n\n    const utmContents = await api.get(\n      this.proxyUrl,\n      `/api/stats/${encodeURIComponent(this.site!.domain!)}/utm_contents`,\n      this.query\n    );\n\n    if (utmContents && utmContents.length > 0) {\n      const campaignIds = utmContents.map((c: any) => {\n        if (!isNaN(c.name))\n          return parseInt(c.name);\n        else\n          return c.name || '';\n      });\n\n      if (campaignIds.length > 0) {\n        const utmMediums = await api.get(\n          this.proxyUrl,\n          `/api/stats/${encodeURIComponent(this.site!.domain!)}/utm_mediums`,\n          this.query\n        );\n\n        if (utmMediums && utmMediums.length > 0) {\n          const foundCampaigns = this.campaigns?.filter(c => {\n            return campaignIds.includes(c.id);\n          });\n\n          if (foundCampaigns && foundCampaigns.length > 0) {\n            for (let c = 0; c < foundCampaigns.length; c++) {\n              foundCampaigns[c] = await this.getSourceData(\n                foundCampaigns[c],\n                utmMediums\n              );\n            }\n          }\n\n          this.foundCampaigns = foundCampaigns;\n        }\n      }\n    }\n\n    if (!this.foundCampaigns) {\n      this.foundCampaigns = [];\n    }\n  }\n\n  async getSourceData(campaign: YpCampaignAnalyticsData, utmMediums: any) {\n    const query = structuredClone(this.query);\n\n    const avilableMediums = utmMediums.map((m: any) => {\n      return m.name.toLowerCase();\n    });\n\n    const mediumsToSearch = campaign.configuration.mediums.filter(m => {\n      return avilableMediums.includes(m.utm_medium);\n    });\n\n    query.filters['utm_content'] = `${campaign.id}`;\n\n    for (let m = 0; m < mediumsToSearch.length; m++) {\n      const medium = mediumsToSearch[m] as YpCampaignAnalyticsMediumData;\n      query.filters['utm_medium'] = medium.utm_medium;\n\n      const topStatsData = (await api.get(\n        this.proxyUrl,\n        `/api/stats/${encodeURIComponent(this.site!.domain!)}/top-stats`,\n        query\n      )) as PlausibleTopStatsData;\n\n      /*const goalGraph = new PlausibleGoalGraph();\n\n      goalGraph.query = query;\n      goalGraph.site = this.site;\n      goalGraph.proxyUrl = this.proxyUrl;\n      goalGraph.method = \"aggregate\";\n      debugger;\n      goalGraph.events = [\n        'endorse_up - completed',\n        'endorse_down - completed',\n        'pointHelpful - completed',\n        'pointNotHelpful - completed',\n        'post.ratings - add',\n      ];\n\n      const endorseGoalData = await goalGraph.fetchGraphData() as PlausibleAggregateResultsData;\n\n      goalGraph.events = [\n        'newPost - completed',\n        'newPointAgainst - completed',\n        'newPointFor - completed',\n      ];\n\n      const newContentGoalData = await goalGraph.fetchGraphData() as PlausibleAggregateResultsData;\n*/\n      medium.topStats = [\n        topStatsData.top_stats[0],\n        topStatsData.top_stats[1],\n //       { name: this.t(\"Visitors new content\"), value: newContentGoalData.results.visitors.value },\n //       { name: this.t(\"Visitors endorsing\"), value: endorseGoalData.results.visitors.value },\n      ];\n    }\n\n    campaign.configuration.mediums = mediumsToSearch;\n\n    return campaign;\n  }\n\n  renderCampaign(campaign: YpCampaignAnalyticsData) {\n    return html`<yp-campaign-analysis\n      .campaignApi=\"${this.campaignApi}\"\n      .collectionType=\"${this.collectionType}\"\n      .collection=\"${this.collection}\"\n      .collectionId=\"${this.collectionId}\"\n      .campaign=\"${campaign}\"\n    ></yp-campaign-analysis>`;\n  }\n\n  override render() {\n    if (this.foundCampaigns && this.foundCampaigns.length > 0) {\n      return html`\n        <div class=\"layout vertical start mainContainer\">\n          <div class=\"layout vertical\">\n            ${this.foundCampaigns?.map(campaign =>\n              this.renderCampaign(campaign)\n            )}\n          </div>\n        </div>\n      `;\n    } else if (this.foundCampaigns) {\n      return html`\n        <div\n          class=\"layout horizontal center-center mainContainer smallContainer\"\n        >\n          <div class=\"textInfo\">${this.t('No campaigns found')}</div>\n        </div>\n      `;\n    } else {\n      return html` <div class=\"layout horizontal center-center mainContainer\">\n        <div class=\"layout horizontal center-center\">\n          <div class=\"textInfo\">${this.t('Loading...')}</div>\n        </div>\n      </div>`;\n    }\n  }\n}\n"]}