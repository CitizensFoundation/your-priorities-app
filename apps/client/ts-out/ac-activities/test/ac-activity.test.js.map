{"version":3,"file":"ac-activity.test.js","sourceRoot":"","sources":["../../../src/ac-activities/test/ac-activity.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAGnE,OAAO,mBAAmB,CAAC;AAC3B,OAAO,EAAE,aAAa,EAAE,MAAM,gCAAgC,CAAC;AAE/D,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,IAAI,OAAmB,CAAC;IACxB,IAAI,SAAa,CAAC;IAElB,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,SAAS,GAAG,aAAa,CAAC,YAAY,EAAE,CAAC;QACzC,MAAM,aAAa,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,QAAQ,GAAG;YACf,IAAI,EAAE,mBAAmB;YACzB,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACpC,SAAS,EAAE,CAAC;YACZ,KAAK,EAAE,aAAa,CAAC,QAAQ,EAAE;YAC/B,IAAI,EAAE,aAAa,CAAC,OAAO,EAAE;YAC7B,IAAI,EAAE,aAAa,CAAC,OAAO,EAAE;SACZ,CAAA;QAEnB,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA;QACxB,aAAa,CAAC,kBAAkB,EAAE;;qBAErB,QAAQ;;;KAGxB,CAAC,CAAC;QACH,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,QAAQ,CAAC;QACT,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { html, fixture, expect, aTimeout } from '@open-wc/testing';\n\nimport { AcActivity } from '../ac-activity.js';\nimport '../ac-activity.js';\nimport { YpTestHelpers } from '../../common/test/setup-app.js';\n\ndescribe('AcActivity', () => {\n  let element: AcActivity;\n  let fetchMock:any;\n\n  before(async () => {\n    fetchMock = YpTestHelpers.getFetchMock();\n    await YpTestHelpers.setupApp();\n  });\n\n  beforeEach(async () => {\n    const activity = {\n      type: 'activity.post.new',\n      created_at: new Date().toISOString(),\n      domain_id: 2,\n      Point: YpTestHelpers.getPoint(),\n      Post: YpTestHelpers.getPost(),\n      User: YpTestHelpers.getUser(),\n    } as AcActivityData\n\n    element = await fixture(html`\n      ${YpTestHelpers.renderCommonHeader()}\n      <ac-activity\n        .activity=\"${activity}\">\n      </ac-activity\n      >\n    `);\n    await aTimeout(100);\n  });\n\n  it('passes the a11y audit', async () => {\n    debugger;\n    await expect(element).shadowDom.to.be.accessible();\n  });\n});\n"]}