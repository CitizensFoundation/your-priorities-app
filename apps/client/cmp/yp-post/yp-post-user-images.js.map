{"version":3,"file":"yp-post-user-images.js","sourceRoot":"","sources":["../../src/yp-post/yp-post-user-images.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACzC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAE7D,OAAO,yCAAyC,CAAC;AACjD,OAAO,8BAA8B,CAAC;AAK/B,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,aAAa;IAOxC,OAAO,CAAC,iBAAyD;QACxE,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAEjC,IAAI,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;YAClC,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;IACH,CAAC;IAED,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;OAWF;SACF,CAAC;IACJ,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,IAAI;YACT,CAAC,CAAC,IAAI,CAAA;mDACmC,IAAI,CAAC,SAAS;mBAC9C,IAAI,CAAC,CAAC,CAAC,oBAAoB,CAAC;;;gBAG/B,IAAI,CAAC,MAAM;gBACX,CAAC,CAAC,IAAI,CAAA;sBACA,IAAI,CAAC,MAAM,CAAC,GAAG,CACf,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAA;;mCAEF,IAAI,CAAC,IAAI;oCACR,KAAK;sCACH,IAAI,CAAC,QAAQ;;uBAE5B,CACF;mBACF;gBACH,CAAC,CAAC,OAAO;aACZ;YACH,CAAC,CAAC,OAAO;;KAEd,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,QAAQ;QACZ,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,IAAI,CAAC,MAAM,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC7D,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC1C,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACvD,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;YACtC,CAAC;QACH,CAAC;IACH,CAAC;IAED,YAAY;QACV,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,SAAS;QACP,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QACnD,MAAM,CAAC,UAAU,CAAC,cAAc,CAC9B,eAAe,EACf,CAAC,MAA2B,EAAE,EAAE;YAC9B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACpE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,IAAK,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACjE,CAAC,CACF,CAAC;IACJ,CAAC;CACF,CAAA;AApFC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;gDACa;AAGvC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;8CACE;AALlB,gBAAgB;IAD5B,aAAa,CAAC,qBAAqB,CAAC;GACxB,gBAAgB,CAsF5B","sourcesContent":["import { html, css, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\nimport { YpBaseElement } from \"../common/yp-base-element.js\";\n\nimport \"@material/web/button/outlined-button.js\";\nimport \"./yp-post-user-image-card.js\";\n\nimport { YpPostUserImageEdit } from \"./yp-post-user-image-edit.js\";\n\n@customElement(\"yp-post-user-images\")\nexport class YpPostUserImages extends YpBaseElement {\n  @property({ type: Array })\n  images: Array<YpImageData> | undefined;\n\n  @property({ type: Object })\n  post: YpPostData | undefined;\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>) {\n    super.updated(changedProperties);\n\n    if (changedProperties.has(\"post\")) {\n      this._postChanged();\n    }\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        md-outlined-button {\n          margin-top: 32px;\n          margin-bottom: 8px;\n          width: 242px;\n        }\n\n        yp-post-user-image-card {\n          margin-top: 32px;\n          margin-bottom: 32px;\n        }\n      `,\n    ];\n  }\n\n  override render() {\n    return html`\n      <div class=\"layout vertical center-center\">\n        ${this.post\n          ? html`\n              <md-outlined-button raised @click=\"${this._newImage}\"\n                >${this.t(\"posts.newUserImage\")}</md-outlined-button\n              >\n\n              ${this.images\n                ? html`\n                    ${this.images.map(\n                      (image) => html`\n                        <yp-post-user-image-card\n                          .post=\"${this.post}\"\n                          .image=\"${image}\"\n                          @refresh=\"${this._refresh}\"\n                        ></yp-post-user-image-card>\n                      `\n                    )}\n                  `\n                : nothing}\n            `\n          : nothing}\n      </div>\n    `;\n  }\n\n  async _refresh() {\n    if (this.post) {\n      this.images = await window.serverApi.getImages(this.post.id);\n      if (this.images && this.images.length > 0) {\n        this.fire(\"yp-post-image-count\", this.images.length);\n      } else {\n        this.fire(\"yp-post-image-count\", 0);\n      }\n    }\n  }\n\n  _postChanged() {\n    this._refresh();\n  }\n\n  _newImage() {\n    window.appGlobals.activity(\"open\", \"newUserImage\");\n    window.appDialogs.getDialogAsync(\n      \"userImageEdit\",\n      (dialog: YpPostUserImageEdit) => {\n        dialog.setup(this.post!, undefined, true, this._refresh.bind(this));\n        dialog.open(true, { postId: this.post!.id, userImages: true });\n      }\n    );\n  }\n}\n"]}