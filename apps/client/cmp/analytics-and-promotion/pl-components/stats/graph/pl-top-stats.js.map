{"version":3,"file":"pl-top-stats.js","sourceRoot":"","sources":["../../../../../src/analytics-and-promotion/pl-components/stats/graph/pl-top-stats.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, css, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\n\nimport { navigateToQuery, generateQueryString } from '../../query.js';\nimport numberFormatter, {\n  durationFormatter,\n} from '../../util/number-formatter.js';\nimport { METRIC_MAPPING, METRIC_LABELS } from './pl-visitors-graph.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { PlausibleStyles } from '../../plausibleStyles.js';\nimport { PlausibleBaseElement } from '../../pl-base-element.js';\n\n@customElement('pl-top-stats')\nexport class PlausibleTopStats extends PlausibleBaseElement {\n  @property({ type: Boolean })\n  disabled = false;\n\n  @property({ type: Object })\n  query!: PlausibleQueryData;\n\n  @property({ type: Object })\n  updateMetric!: Function;\n\n  @property({ type: Object })\n  history!: any;\n\n  @property({ type: String })\n  classsName!: string;\n\n  @property({ type: Object })\n  to!: PlausibleQueryData;\n\n  @property({ type: String })\n  metric!: string;\n\n  @property({ type: Object })\n  topStatData: PlausibleTopStatsData | undefined;\n\n  static override get styles() {\n    return [\n      ...super.styles,\n    ];\n  }\n\n\n  renderComparison(name: string, comparison: number) {\n    const formattedComparison = numberFormatter(Math.abs(comparison));\n\n    if (comparison > 0) {\n      const color = name === 'Bounce rate' ? 'text-red-400' : 'text-green-500';\n      return html`<span class=\"text-xs dark:text-gray-100\"\n        ><span class=\"${color + ' font-bold'}\">&uarr;</span\n        >${formattedComparison}%</span\n      >`;\n    } else if (comparison < 0) {\n      const color = name === 'Bounce rate' ? 'text-green-500' : 'text-red-400';\n      return html`<span class=\"text-xs dark:text-gray-100\"\n        ><span class=\"${color + ' font-bold'}\">&darr;</span>\n        ${formattedComparison}%</span\n      >`;\n    } else if (comparison === 0) {\n      return html`<span class=\"text-xs text-gray-700 dark:text-gray-300\"\n        >&#12336; N/A</span\n      >`;\n    } else {\n      return nothing;\n    }\n  }\n\n  topStatNumberShort(stat: PlausibleStatData) {\n    if (['visit duration', 'time on page'].includes(stat.name.toLowerCase())) {\n      return durationFormatter(stat.value);\n    } else if (\n      ['bounce rate', 'conversion rate'].includes(stat.name.toLowerCase())\n    ) {\n      return stat.value + '%';\n    } else {\n      return numberFormatter(stat.value);\n    }\n  }\n\n  topStatTooltip(stat: PlausibleStatData) {\n    if (\n      [\n        'visit duration',\n        'time on page',\n        'bounce rate',\n        'conversion rate',\n      ].includes(stat.name.toLowerCase())\n    ) {\n      return null;\n    } else {\n      let name = stat.name.toLowerCase();\n      name = stat.value === 1 ? name.slice(0, -1) : name;\n      return stat.value.toLocaleString() + ' ' + name;\n    }\n  }\n\n  titleFor(stat: PlausibleStatData) {\n    if (this.metric === METRIC_MAPPING[stat.name]) {\n      return `Hide ${METRIC_LABELS[\n        METRIC_MAPPING[stat.name]\n      ].toLowerCase()} from graph`;\n    } else {\n      return `Show ${METRIC_LABELS[\n        METRIC_MAPPING[stat.name]\n      ].toLowerCase()} on graph`;\n    }\n  }\n\n  renderStat(stat: PlausibleStatData) {\n    return html` <div\n      class=\"flex items-center justify-between my-1 whitespace-nowrap\"\n    >\n      <b\n        class=\"mr-4 text-xl md:text-2xl dark:text-gray-100\"\n        tooltip=\"${ifDefined(\n          this.topStatTooltip(stat) === null\n            ? undefined\n            : this.topStatTooltip(stat)\n        )}\"\n        >${this.topStatNumberShort(stat)}</b\n      >\n      ${this.renderComparison(stat.name, stat.change!)}\n    </div>`;\n  }\n\n  override render() {\n    const stats =\n      this.topStatData &&\n      this.topStatData.top_stats.map((stat, index) => {\n        let border = index > 0 ? 'lg:border-l border-gray-300' : '';\n        border = index % 2 === 0 ? border + ' border-r lg:border-r-0' : border;\n        const isClickable =\n          Object.keys(METRIC_MAPPING).includes(stat.name) &&\n          !(this.query.filters!.goal && stat.name === 'Unique visitors');\n        const isSelected = this.metric === METRIC_MAPPING[stat.name];\n        const [statDisplayName, statExtraName] = stat.name.split(/(\\(.+\\))/g);\n        const translatedName = this.t(statDisplayName);\n\n        return html`\n          ${isClickable\n            ? html`\n                <div\n                  class=\"${`px-4 md:px-6 w-1/2 my-4 lg:w-auto group cursor-pointer select-none ${border}`}\"\n                  @click=\"${() => {\n                    this.updateMetric(METRIC_MAPPING[stat.name]);\n                  }}\"\n                  tabindex=\"0\"\n                  .title=\"${this.titleFor(stat)}\"\n                >\n                  <div\n                    class=\"${`text-xs font-bold tracking-wide text-gray-500 uppercase dark:text-gray-400 whitespace-nowrap flex w-content\n                  ${\n                    isSelected\n                      ? `text-indigo-700 dark:text-indigo-500\n                        border-indigo-700 dark:border-indigo-500`\n                      : `group-hover:text-indigo-700\n                        dark:group-hover:text-indigo-500`\n                  }`}\"\n                  >\n                    ${translatedName}\n                  </div>\n                  <span class=\"hidden sm:inline-block ml-1\"\n                    >${statExtraName}</span\n                  >\n                  ${this.renderStat(stat)}\n                </div>\n              `\n            : html`\n                <div class=${`px-4 md:px-6 w-1/2 my-4 lg:w-auto ${border}`}>\n                  <div\n                    class=\"text-xs font-bold tracking-wide text-gray-500 uppercase dark:text-gray-400 whitespace-nowrap flex\"\n                  >\n                    ${stat.name}\n                  </div>\n                  ${this.renderStat(stat)}\n                </div>\n              `}\n        `;\n      });\n\n    if (this.query && this.query.period === 'realtime') {\n      stats!.push(\n        html`<div\n          key=\"dot\"\n          class=\"block pulsating-circle\"\n          .style=${{ left: '125px', top: '52px' }}\n        ></div>`\n      );\n    }\n\n    return stats;\n  }\n}\n"]}