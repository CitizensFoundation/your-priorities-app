{"version":3,"file":"filter.js","sourceRoot":"","sources":["../../../../src/analytics-and-promotion/pl-components/util/filter.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { parseQuery, formattedFilters } from '../query.js';\nimport * as api from '../api.js'\nimport {apiPath, siteBasePath} from './url.js';\n\nexport const FILTER_GROUPS = {\n  'page': ['page', 'entry_page', 'exit_page'],\n  'source': ['source', 'referrer'],\n  'location': ['country', 'region', 'city'],\n  'screen': ['screen'],\n  'browser': ['browser', 'browser_version'],\n  'os': ['os', 'os_version'],\n  'utm': ['utm_medium', 'utm_source', 'utm_campaign', 'utm_term', 'utm_content'],\n  'goal': ['goal'],\n  'props': ['prop_key', 'prop_value']\n} as Record<string, string[]>;\n\nexport function getFormState(filterGroup: string, query: PlausibleQueryData) {\n  if (filterGroup === 'props') {\n    const propsObject = query.filters['props']\n    const entries = propsObject && Object.entries(propsObject)\n\n    if (entries && entries.length == 1) {\n      const propKey = entries[0][0]\n      const propValue = valueWithoutPrefix(entries[0][1])\n\n      return {\n        'prop_key': {name: propKey, value: propKey, type: FILTER_TYPES.is},\n        'prop_value': {name: propValue, value: propValue, type: toFilterType(entries[0][1])}\n      }\n    }\n  }\n\n  return FILTER_GROUPS[filterGroup].reduce((result, filter) => {\n    // @ts-ignore\n    const rawFilterValue = query.filters[filter] || ''\n    const type = toFilterType(rawFilterValue)\n    const filterValue = valueWithoutPrefix(rawFilterValue)\n\n    let filterName = filterValue\n\n    if (filter === 'country' && filterValue !== '') {\n      filterName = (new URLSearchParams(window.location.search)).get('country_name') as string\n    }\n    if (filter === 'region' && filterValue !== '') {\n      filterName = (new URLSearchParams(window.location.search)).get('region_name') as string\n    }\n    if (filter === 'city' && filterValue !== '') {\n      filterName = (new URLSearchParams(window.location.search)).get('city_name') as string\n    }\n    return Object.assign(result, {[filter]: {name: filterName, value: filterValue, type}})\n  }, {})\n}\n\nconst FILTER_TYPES = {\n  isNot: 'is not',\n  contains: 'contains',\n  is: 'is'\n};\n\nconst FILTER_PREFIXES = {\n  [FILTER_TYPES.isNot]: '!',\n  [FILTER_TYPES.contains]: '~',\n  [FILTER_TYPES.is]: ''\n};\n\nexport function toFilterType(value: string) {\n  return Object.keys(FILTER_PREFIXES)\n    .find(type => FILTER_PREFIXES[type] === value[0]) || FILTER_TYPES.is;\n}\n\nexport function valueWithoutPrefix(value: string) {\n  return [FILTER_TYPES.isNot, FILTER_TYPES.contains].includes(toFilterType(value))\n    ? value.substring(1)\n    : value;\n}\n\nexport function toFilterQuery(value:string, type:string) {\n  const prefix = FILTER_PREFIXES[type];\n  return prefix + value.trim();\n}\n\nexport function supportsContains(filterName: string) {\n  return ['page', 'entry_page', 'exit_page'].includes(filterName)\n}\n\nexport function supportsIsNot(filterName: string) {\n  return !['goal', 'prop_key'].includes(filterName)\n}\n\nexport function withIndefiniteArticle(word: string) {\n  if (word.startsWith('UTM')) {\n    return `a ${  word}`\n  } if (['a', 'e', 'i', 'o', 'u'].some((vowel) => word.toLowerCase().startsWith(vowel))) {\n    return `an ${  word}`\n  }\n    return `a ${  word}`\n\n}\n\nexport function formatFilterGroup(filterGroup: string) {\n  if (filterGroup === 'utm') {\n    return 'UTM tags'\n  } else if (filterGroup === 'location') {\n    return 'Location'\n  } else if (filterGroup === 'props') {\n    return 'Property'\n  } else {\n    //@ts-ignore\n    return this.t(formattedFilters[filterGroup])\n  }\n}\n\nexport function filterGroupForFilter(filter: string) {\n  const map = Object.entries(FILTER_GROUPS).reduce((filterToGroupMap, [group, filtersInGroup]) => {\n    const filtersToAdd = {}\n    filtersInGroup.forEach((filterInGroup) => {\n      //@ts-ignore\n      filtersToAdd[filterInGroup] = group\n    })\n    return { ...filterToGroupMap, ...filtersToAdd}\n  }, {})\n\n\n    //@ts-ignore\n    return map[filter] || filter\n}"]}