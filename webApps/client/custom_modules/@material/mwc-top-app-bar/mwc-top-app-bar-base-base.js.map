{"version":3,"file":"mwc-top-app-bar-base-base.js","sourceRoot":"","sources":["mwc-top-app-bar-base-base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {addHasRemoveClass, BaseElement} from '@material/mwc-base/base-element.js';\nimport {supportsPassiveEventListener} from '@material/mwc-base/utils.js';\nimport {MDCTopAppBarAdapter} from '@material/top-app-bar/adapter.js';\nimport {strings} from '@material/top-app-bar/constants.js';\nimport MDCTopAppBarBaseFoundation from '@material/top-app-bar/foundation.js';\nimport {html} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nexport const passiveEventOptionsIfSupported =\n    supportsPassiveEventListener ? {passive: true} : undefined;\n\ninterface ClassInfo {\n  [key: string]: boolean;\n}\n\nexport abstract class TopAppBarBaseBase extends BaseElement {\n  protected abstract override mdcFoundation: MDCTopAppBarBaseFoundation;\n\n  protected abstract override mdcFoundationClass:\n      typeof MDCTopAppBarBaseFoundation;\n\n  @query('.mdc-top-app-bar') protected mdcRoot!: HTMLElement;\n\n  // _actionItemsSlot should have type HTMLSlotElement, but when TypeScript's\n  // emitDecoratorMetadata is enabled, the HTMLSlotElement constructor will\n  // be emitted into the runtime, which will cause an \"HTMLSlotElement is\n  // undefined\" error in browsers that don't define it (e.g. IE11).\n  @query('slot[name=\"actionItems\"]') protected _actionItemsSlot!: HTMLElement;\n\n  protected _scrollTarget!: HTMLElement|Window;\n\n  @property({type: Boolean}) centerTitle = false;\n\n  @property({type: Object})\n  get scrollTarget() {\n    return this._scrollTarget || window;\n  }\n\n  set scrollTarget(value) {\n    this.unregisterScrollListener();\n    const old = this.scrollTarget;\n    this._scrollTarget = value;\n    this.updateRootPosition();\n    this.requestUpdate('scrollTarget', old);\n    this.registerScrollListener();\n  }\n\n  protected updateRootPosition() {\n    if (this.mdcRoot) {\n      const windowScroller = this.scrollTarget === window;\n      // we add support for top-app-bar's tied to an element scroller.\n      this.mdcRoot.style.position = windowScroller ? '' : 'absolute';\n    }\n  }\n\n  /**\n   * classMap map for classes on the bar\n   */\n  protected abstract barClasses(): ClassInfo;\n\n  /**\n   * classMap map for classes on the content slot\n   */\n  protected abstract contentClasses(): ClassInfo;\n\n  protected override render() {\n    // clang-format off\n    let title = html`<span class=\"mdc-top-app-bar__title\"><slot name=\"title\"></slot></span>`;\n    if (this.centerTitle) {\n      title = html`<section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-center\">${title}</section>`;\n    }\n    // clang-format on\n    return html`\n      <header class=\"mdc-top-app-bar ${classMap(this.barClasses())}\">\n      <div class=\"mdc-top-app-bar__row\">\n        <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-start\" id=\"navigation\">\n          <slot name=\"navigationIcon\"\n            @click=${this.handleNavigationClick}></slot>\n          ${this.centerTitle ? null : title}\n        </section>\n        ${this.centerTitle ? title : null}\n        <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-end\" id=\"actions\" role=\"toolbar\">\n          <slot name=\"actionItems\"></slot>\n        </section>\n      </div>\n    </header>\n    <div class=\"${classMap(this.contentClasses())}\">\n      <slot></slot>\n    </div>\n    `;\n  }\n\n  protected createAdapter(): MDCTopAppBarAdapter {\n    return {\n      ...addHasRemoveClass(this.mdcRoot),\n      setStyle: (property: string, value: string) =>\n          this.mdcRoot.style.setProperty(property, value),\n      getTopAppBarHeight: () => this.mdcRoot.clientHeight,\n      notifyNavigationIconClicked: () => {\n        this.dispatchEvent(new Event(\n            strings.NAVIGATION_EVENT, {bubbles: true, cancelable: true}));\n      },\n      getViewportScrollY: () => this.scrollTarget instanceof Window ?\n          this.scrollTarget.pageYOffset :\n          this.scrollTarget.scrollTop,\n      getTotalActionItems: () => (this._actionItemsSlot as HTMLSlotElement)\n                                     .assignedNodes({flatten: true})\n                                     .length,\n    };\n  }\n\n  protected handleTargetScroll = () => {\n    this.mdcFoundation.handleTargetScroll();\n  };\n\n  protected handleNavigationClick = () => {\n    this.mdcFoundation.handleNavigationClick();\n  };\n\n  protected registerListeners() {\n    this.registerScrollListener();\n  }\n\n  protected unregisterListeners() {\n    this.unregisterScrollListener();\n  }\n\n  protected registerScrollListener() {\n    this.scrollTarget.addEventListener(\n        'scroll', this.handleTargetScroll, passiveEventOptionsIfSupported);\n  }\n\n  protected unregisterScrollListener() {\n    this.scrollTarget.removeEventListener('scroll', this.handleTargetScroll);\n  }\n\n  protected override firstUpdated() {\n    super.firstUpdated();\n    this.updateRootPosition();\n    this.registerListeners();\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.unregisterListeners();\n  }\n}\n"]}