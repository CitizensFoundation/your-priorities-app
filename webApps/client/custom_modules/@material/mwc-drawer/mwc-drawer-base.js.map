{"version":3,"file":"mwc-drawer-base.js","sourceRoot":"","sources":["mwc-drawer-base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\n// Note this blocking-elements import is not redundant with the one below,\n// because we need to ensure we import this module at runtime for its\n// side-effects. See\n// https://github.com/Microsoft/TypeScript/wiki/FAQ#why-are-imports-being-elided-in-my-emit.\nimport 'blocking-elements';\nimport 'wicg-inert';\n\nimport {MDCDrawerAdapter} from '@material/drawer/adapter.js';\nimport {strings} from '@material/drawer/constants.js';\nimport MDCDismissibleDrawerFoundation from '@material/drawer/dismissible/foundation.js';\nimport MDCModalDrawerFoundation from '@material/drawer/modal/foundation.js';\nimport {addHasRemoveClass, BaseElement} from '@material/mwc-base/base-element.js';\nimport {observer} from '@material/mwc-base/observer.js';\nimport {DocumentWithBlockingElements} from 'blocking-elements';\nimport {html, PropertyValues} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\ninterface InertableHTMLElement extends HTMLElement {\n  inert?: boolean;\n}\n\nconst blockingElements =\n    (document as DocumentWithBlockingElements).$blockingElements;\n\nexport class DrawerBase extends BaseElement {\n  @query('.mdc-drawer') protected mdcRoot!: HTMLElement;\n\n  @query('.mdc-drawer-app-content') protected appContent!: InertableHTMLElement;\n\n  protected mdcFoundation!: MDCDismissibleDrawerFoundation;\n\n  protected get mdcFoundationClass() {\n    return this.type === 'modal' ? MDCModalDrawerFoundation :\n                                   MDCDismissibleDrawerFoundation;\n  }\n\n  protected createAdapter(): MDCDrawerAdapter {\n    return {\n      ...addHasRemoveClass(this.mdcRoot),\n      elementHasClass: (element: HTMLElement, className: string) =>\n          element.classList.contains(className),\n      saveFocus: () => {\n        // Note, casting to avoid cumbersome runtime check.\n        this._previousFocus =\n            (this.getRootNode() as ShadowRoot).activeElement as HTMLElement;\n      },\n      restoreFocus: () => {\n        const previousFocus = this._previousFocus && this._previousFocus.focus;\n        if (previousFocus) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this._previousFocus!.focus();\n        }\n      },\n      notifyClose: () => {\n        this.open = false;\n        this.dispatchEvent(\n            new Event(strings.CLOSE_EVENT, {bubbles: true, cancelable: true}));\n      },\n      notifyOpen: () => {\n        this.open = true;\n        this.dispatchEvent(\n            new Event(strings.OPEN_EVENT, {bubbles: true, cancelable: true}));\n      },\n      focusActiveNavigationItem:\n          () => { /* TODO(sorvell): Implement list focusing integration. */ },\n      trapFocus: () => {\n        blockingElements.push(this);\n        this.appContent.inert = true;\n      },\n      releaseFocus: () => {\n        blockingElements.remove(this);\n        this.appContent.inert = false;\n      },\n    };\n  }\n\n  protected _previousFocus: HTMLElement|null = null;\n\n  protected _handleScrimClick() {\n    if (this.mdcFoundation instanceof MDCModalDrawerFoundation) {\n      this.mdcFoundation.handleScrimClick();\n    }\n  }\n\n  @observer(function(this: DrawerBase, value: boolean) {\n    if (this.type === '') {\n      return;\n    }\n    if (value) {\n      this.mdcFoundation.open();\n    } else {\n      this.mdcFoundation.close();\n    }\n  })\n  @property({type: Boolean, reflect: true})\n  open = false;\n\n  @property({type: Boolean}) hasHeader = false;\n\n  @property({reflect: true}) type = '';\n\n  protected override render() {\n    const dismissible = this.type === 'dismissible' || this.type === 'modal';\n    const modal = this.type === 'modal';\n    const header = this.hasHeader ? html`\n      <div class=\"mdc-drawer__header\">\n        <h3 class=\"mdc-drawer__title\"><slot name=\"title\"></slot></h3>\n        <h6 class=\"mdc-drawer__subtitle\"><slot name=\"subtitle\"></slot></h6>\n        <slot name=\"header\"></slot>\n      </div>\n      ` :\n                                    '';\n    const classes = {\n      'mdc-drawer--dismissible': dismissible,\n      'mdc-drawer--modal': modal,\n    };\n\n    return html`\n      <aside class=\"mdc-drawer ${classMap(classes)}\">\n        ${header}\n        <div class=\"mdc-drawer__content\"><slot></slot></div>\n      </aside>\n      ${\n        modal ? html`<div class=\"mdc-drawer-scrim\"\n                          @click=\"${this._handleScrimClick}\"></div>` :\n                ''}\n      <div class=\"mdc-drawer-app-content\">\n        <slot name=\"appContent\"></slot>\n      </div>\n      `;\n  }\n\n  // note, we avoid calling `super.firstUpdated()` to control when\n  // `createFoundation()` is called.\n  protected override firstUpdated() {\n    this.mdcRoot.addEventListener(\n        'keydown', (e) => this.mdcFoundation.handleKeydown(e));\n    this.mdcRoot.addEventListener(\n        'transitionend', (e) => this.mdcFoundation.handleTransitionEnd(e));\n  }\n\n  protected override updated(changedProperties: PropertyValues) {\n    if (changedProperties.has('type')) {\n      this.createFoundation();\n    }\n  }\n}\n"]}