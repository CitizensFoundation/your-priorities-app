{"version":3,"file":"pl-visitors-graph.js","sourceRoot":"","sources":["../../../../../src/analytics-and-promotion/pl-components/stats/graph/pl-visitors-graph.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, css, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\n\nimport Chart from 'chart.js/auto';\nimport { navigateToQuery } from '../../query';\nimport numberFormatter, {\n  durationFormatter,\n} from '../../util/number-formatter.js';\nimport * as api from '../../api.js';\nimport * as storage from '../../util/storage.js';\nimport { GraphTooltip, buildDataSet, dateFormatter } from './graph-util.js';\nimport * as url from '../../util/url.js';\nimport './pl-top-stats.js';\nimport './pl-line-graph.js';\nimport { PlausibleStyles } from '../../plausibleStyles';\nimport { PlausibleBaseElement } from '../../pl-base-element';\nimport { PlausibleBaseElementWithState } from '../../pl-base-element-with-state';\n\n@customElement('pl-visitors-graph')\nexport class PlausibleVisitorsGraph extends PlausibleBaseElementWithState {\n  @property({ type: Object })\n  history!: any;\n\n  @property({ type: String })\n  metric!: string;\n\n  @property({ type: Object })\n  topStatData: PlausibleTopStatsData | undefined | null;\n\n  @property({ type: Object })\n  graphData: any;\n\n  // The current-visitors API does not support filtering by custom properties\n  // this is a workaround\n  @property({ type: Boolean })\n  useTopStatsForCurrentVisitors = false;\n\n  constructor() {\n    super();\n  }\n\n  static override get styles() {\n    return [...super.styles];\n  }\n\n override connectedCallback(): void {\n    super.connectedCallback();\n\n    this.metric = storage.getItem(`metric__${this.site.domain}`) || 'visitors';\n\n    this.updateMetric = this.updateMetric.bind(this);\n    this.fetchGraphData = this.fetchGraphData.bind(this);\n    this.fetchTopStatData = this.fetchTopStatData.bind(this);\n  }\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    super.updated(changedProperties);\n\n    if (changedProperties.get('query')) {\n      this.fetchGraphData();\n      this.fetchTopStatData();\n      //TODO: move this logic out of the updated call\n      const savedMetric = storage.getItem(`metric__${this.site.domain}`);\n      const topStatLabels =\n        this.topStatData &&\n        this.topStatData.top_stats\n          .map(({ name }) => METRIC_MAPPING[name])\n          .filter(name => name);\n      const prevTopStatLabels =\n        changedProperties.get('topStatData') &&\n        (changedProperties.get('topStatData') as PlausibleTopStatsData).top_stats\n          .map(({ name }) => METRIC_MAPPING[name])\n          .filter(name => name);\n      if (topStatLabels && `${topStatLabels}` !== `${prevTopStatLabels}`) {\n        if (!topStatLabels.includes(savedMetric!) && savedMetric !== '') {\n          if (this.query!.filters!.goal && this.metric !== 'conversions') {\n            this.metric = 'conversions';\n          } else {\n            this.metric = topStatLabels[0];\n          }\n        } else {\n          this.metric = savedMetric!;\n        }\n      }\n    } else if (changedProperties.get('metric')) {\n      this.fetchGraphData();\n    }\n  }\n\n  override firstUpdated() {\n    this.fetchGraphData();\n    this.fetchTopStatData();\n    if (this.timer) {\n      this.timer.onTick(this.fetchGraphData);\n      this.timer.onTick(this.fetchTopStatData);\n    }\n  }\n\n  updateMetric(newMetric: string) {\n    if (newMetric === this.metric) {\n      storage.setItem(`metric__${this.site.domain}`, '');\n      //this.metric = '';\n      //this.graphData = undefined;\n    } else {\n      storage.setItem(`metric__${this.site.domain}`, newMetric);\n      this.metric = newMetric;\n    }\n  }\n\n  ///api/stats/localhost/sources?period=day&date=2022-08-14&filters=%7B%7D&with_imported=true&show_noref=false\n  ///api/stats/localhost/sources?period=day&date=2022-08-14&filters=%7B%7D&with_imported=true&show_noref=false\n\n  fetchGraphData() {\n    if (this.metric) {\n      api\n        .get(\n          this.proxyUrl,\n          `/api/stats/${encodeURIComponent(this.site!.domain!)}/main-graph`,\n          this.query,\n          { metric: this.metric || 'none' }\n        )\n        .then(res => {\n          this.graphData = res;\n        });\n    }\n  }\n\n  fetchTopStatData() {\n    api\n      .get(\n        this.proxyUrl,\n        `/api/stats/${encodeURIComponent(this.site!.domain!)}/top-stats`,\n        this.query\n      )\n      .then(res => {\n        if (\n          this.useTopStatsForCurrentVisitors &&\n          this.query.period == 'realtime'\n        ) {\n          res.top_stats[0] = {\n            name: res.top_stats[0].name,\n            value: res.top_stats[1].value,\n          };\n        }\n        this.topStatData = res;\n      });\n  }\n\n  renderInner() {\n    const theme =\n      document.querySelector('html')!.classList.contains('dark') || false;\n\n    return html`\n      <pl-line-graph\n        .graphData=\"${this.graphData}\"\n        .topStatData=\"${this.topStatData}\"\n        .site=\"${this.site}\"\n        .query=\"${this.query}\"\n        .darkTheme=\"${theme}\"\n        .metric=\"${this.metric!}\"\n        .updateMetric=\"${this.updateMetric}\"\n      ></pl-line-graph>\n    `;\n  }\n\n  override render() {\n    return html`\n    <div class=\"graph-inner\">\n      <div\n        class=\"${\n          this.topStatData && !this.graphData\n            ? 'pt-52 sm:pt-56 md:pt-60'\n            : this.metric\n            ? 'pt-32 sm:pt-36 md:pt-48'\n            : 'pt-16 sm:pt-14 md:pt-18 lg:pt-5'\n        } mx-auto ${this.topStatData ? '' : 'loading'}\"\n      >\n        <div></div>\n      </div>\n    </div>\n  ${this.topStatData ? this.renderInner() : nothing}\n</div>\n\n`;\n  }\n}\n\nexport const METRIC_MAPPING: Record<string, string> = {\n  'Unique visitors (last 30 min)': 'visitors',\n  'Pageviews (last 30 min)': 'pageviews',\n  'Unique visitors': 'visitors',\n  'Visit duration': 'visit_duration',\n  'Total pageviews': 'pageviews',\n  'Bounce rate': 'bounce_rate',\n  'Unique conversions': 'conversions',\n  // 'Time on Page': 'time',\n  // 'Conversion rate': 'conversion_rate',\n  // 'Total conversions': 't_conversions',\n};\n\nexport const METRIC_LABELS: Record<string, string> = {\n  visitors: 'Visitors',\n  pageviews: 'Pageviews',\n  bounce_rate: 'Bounce Rate',\n  visit_duration: 'Visit Duration',\n  conversions: 'Converted Visitors',\n  // 'time': 'Time on Page',\n  // 'conversion_rate': 'Conversion Rate',\n  // 't_conversions': 'Total Conversions'\n};\n\nexport const METRIC_FORMATTER: Record<string, any> = {\n  visitors: numberFormatter,\n  pageviews: numberFormatter,\n  bounce_rate: (number: number) => `${number}%`,\n  visit_duration: durationFormatter,\n  conversions: numberFormatter,\n  // 'time': durationFormatter,\n  // 'conversion_rate': (number) => (`${Math.max(number, 100)}%`),\n  // 't_conversions': numberFormatter\n};\n\n//const LineGraphWithRouter = withRouter(LineGraph)\n"]}