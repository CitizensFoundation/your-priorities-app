import { nothing, TemplateResult } from "lit";
import "@material/web/select/outlined-select.js";
import "@material/web/select/select-option.js";
import "@material/web/checkbox/checkbox.js";
import "@material/web/textfield/filled-text-field.js";
import "@material/web/radio/radio.js";
import "./yp-simple-html-editor.js";
import { YpBaseElement } from "../common/yp-base-element.js";
export declare class YpStructuredQuestionEdit extends YpBaseElement {
    question: YpStructuredQuestionData;
    index: number | undefined;
    hideQuestionIndex: boolean;
    formName: string | undefined;
    dontFocusFirstQuestion: boolean;
    useSmallFont: boolean;
    longFocus: boolean;
    isLastRating: boolean;
    isFirstRating: boolean;
    isFromNewPost: boolean;
    structuredAnswers: Array<YpStructuredAnswer> | undefined;
    debounceTimeMs: number;
    disabled: boolean;
    radioKeypress: boolean;
    debunceChangeEventTimer: ReturnType<typeof setTimeout> | undefined;
    updated(changedProperties: Map<string | number | symbol, unknown>): void;
    static get styles(): any[];
    get value(): any;
    set value(value: any);
    setAnswerAfterUpdate(value: any): Promise<void>;
    renderTextField(skipLabel?: boolean): TemplateResult<1>;
    renderTextFieldLong(): TemplateResult<1>;
    renderTextArea(skipLabel?: boolean): TemplateResult<1>;
    renderTextAreaLong(): TemplateResult<1>;
    renderTextHeader(): TemplateResult<1>;
    renderTextDescription(): TemplateResult<1>;
    renderSeperator(): TemplateResult<1>;
    renderRadioButton(radioButton: YpRadioButtonData, buttonIndex: number): TemplateResult<1>;
    renderRadios(): TemplateResult<1> | typeof nothing;
    renderCheckbox(text: string, buttonIndex: number, useTopLevelId?: boolean): TemplateResult<1>;
    renderCheckboxes(): TemplateResult<1> | typeof nothing;
    renderDropdown(): TemplateResult<1>;
    _dropDownChanged(): void;
    render(): TemplateResult | undefined | {};
    setLongUnFocus(): void;
    setLongFocus(): void;
    get isNumberSubType(): boolean;
    _keyPressed(event: KeyboardEvent): void;
    setRadioEventType(): void;
    _sendDebouncedChange(event: CustomEvent): void;
    _debounceChangeEvent(event: any): void;
    get textWithIndex(): string;
    _getRadioClass(): "layout vertical wrap lessBottomMargin" | "layout vertical wrap" | "layout vertical";
    get textWithLinks(): string;
    _resizeScrollerIfNeeded(): void;
    checkValidity(): boolean;
    get isInputField(): boolean | "" | undefined;
    focus(): void;
    cleanValue(value: string): string;
    checkRadioButtonValidity(): boolean;
    getAnswer(suppressNotFoundError?: boolean): YpStructuredAnswer | undefined;
    setAnswer(value: string): void;
    hide(): void;
    show(): void;
    _checkboxChanged(event: CustomEvent): void;
    _radioChanged(event: CustomEvent): void;
    _structuredAnsweredChanged(): void;
    connectedCallback(): void;
}
//# sourceMappingURL=yp-structured-question-edit.d.ts.map