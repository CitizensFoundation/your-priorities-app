{"version":3,"file":"y-drawer.js","sourceRoot":"","sources":["../../src/yp-app/y-drawer.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAA6B,MAAM,KAAK,CAAC;AACvE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAGrD,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,UAAU;IAsDtC;QACE,KAAK,EAAE,CAAC;QArDV,SAAI,GAAY,KAAK,CAAC;QAGtB,aAAQ,GAAqB,MAAM,CAAC;QAGpC,qBAAgB,GAAY,IAAI,CAAC;QAgD/B,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzD,CAAC;IAEQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACtE,CAAC;IAEQ,oBAAoB;QAC3B,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACzE,CAAC;IAEO,iBAAiB,CAAC,KAAiB;QACzC,MAAM,IAAI,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;QAClC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;YAC5D,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC;IACH,CAAC;IAEO,aAAa,CAAC,KAAoB;QACxC,IAAI,KAAK,CAAC,GAAG,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACxC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC;IACH,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;;KAKV,CAAC;IACJ,CAAC;;AA/Ee,eAAM,GAAc,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0CtC,AA1CqB,CA0CpB;AAlDF;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;sCACrB;AAGtB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;0CACS;AAGpC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;kDACV;AARtB,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CA0FpB","sourcesContent":["import { LitElement, html, css, CSSResult, TemplateResult } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\n@customElement('yp-drawer')\nexport class YpDrawer extends LitElement {\n  @property({ type: Boolean, reflect: true })\n  open: boolean = false;\n\n  @property({ type: String })\n  position: 'left' | 'right' = 'left';\n\n  @property({ type: Boolean, reflect: true })\n  transparentScrim: boolean = true;\n\n  static override styles: CSSResult = css`\n    :host {\n      --drawer-width: 256px;\n      --scrim-background: rgba(0, 0, 0, 0.5);\n      --scrim-transparent: rgba(0, 0, 0, 0);\n    }\n    .drawer-content {\n      width: var(--drawer-width);\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      background-color: white;\n      z-index: 2;\n      transform: translateX(-100%);\n      transition: transform 0.3s ease;\n    }\n    :host([position='right']) .drawer-content {\n      right: 0;\n      transform: translateX(100%);\n    }\n    :host([open]) .drawer-content {\n      transform: translateX(0);\n    }\n    .scrim {\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: var(--scrim-background);\n      z-index: 1;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.3s ease;\n    }\n    :host([open][transparentScrim]) .scrim {\n      background-color: var(--scrim-transparent);\n    }\n    :host([open]) .scrim {\n      opacity: 1;\n      pointer-events: auto;\n    }\n  `;\n\n  constructor() {\n    super();\n    this.addEventListener('click', this._handleScrimClick);\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    document.addEventListener('keydown', this._handleEscKey.bind(this));\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    document.removeEventListener('keydown', this._handleEscKey.bind(this));\n  }\n\n  private _handleScrimClick(event: MouseEvent): void {\n    const path = event.composedPath();\n    if (path.includes(this.shadowRoot!.querySelector('.scrim'))) {\n      this.open = false;\n    }\n  }\n\n  private _handleEscKey(event: KeyboardEvent): void {\n    if (event.key === 'Escape' && this.open) {\n      this.open = false;\n    }\n  }\n\n  override render(): TemplateResult {\n    return html`\n      <div class=\"scrim\"></div>\n      <div class=\"drawer-content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n"]}