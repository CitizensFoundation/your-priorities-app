{"version":3,"file":"yp-drawer.js","sourceRoot":"","sources":["../../src/yp-app/yp-drawer.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAc,IAAI,EAAE,GAAG,EAA6B,MAAM,KAAK,CAAC;AACvE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAGnD,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,aAAa;IAApC;;QAKL,aAAQ,GAAqB,MAAM,CAAC;QAGpC,qBAAgB,GAAY,IAAI,CAAC;IA0HnC,CAAC;IAxHC,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAmEF;SACF,CAAC;IACJ,CAAC;IAEQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzD,CAAC;IAEQ,oBAAoB;QAC3B,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC5D,CAAC;IAEQ,OAAO,CAAC,iBAAyD;QACxE,IAAI,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;YAClC,IAAI,IAAI,CAAC,IAAI,KAAG,IAAI,EAAE,CAAC;gBACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;gBACnB,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;YACzB,CAAC;iBAAM,IAAI,IAAI,CAAC,IAAI,KAAG,KAAK,EAAE,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACpB,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;YACzB,CAAC;QACH,CAAC;IACH,CAAC;IAEO,iBAAiB,CAAC,KAAiB;QACzC,MAAM,KAAK,GAAG,IAAI,CAAC,UAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACvD,MAAM,IAAI,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;QAClC,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YAClC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC;IACH,CAAC;IAEO,aAAa,CAAC,KAAoB;QACxC,IAAI,KAAK,CAAC,GAAG,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACxC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC;IACH,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;;KAKV,CAAC;IACJ,CAAC;CACF,CAAA;AAhIC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;sCACjB;AAG1B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;0CACS;AAGpC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;kDACV;AARtB,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CAkIpB","sourcesContent":["import { LitElement, html, css, CSSResult, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\nimport { YpBaseElement } from \"../common/yp-base-element\";\n\n@customElement(\"yp-drawer\")\nexport class YpDrawer extends YpBaseElement {\n  @property({ type: Boolean, reflect: true })\n  open: boolean | undefined;\n\n  @property({ type: String })\n  position: \"left\" | \"right\" = \"left\";\n\n  @property({ type: Boolean, reflect: true })\n  transparentScrim: boolean = true;\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        :host {\n          --drawer-width: 256px;\n          --drawer-background-color: var(\n            --md-sys-color-surface-container-lowest\n          ); /* Fallback to white if custom property is not defined */\n          --scrim-background: rgba(0, 0, 0, 0.5);\n          --scrim-transparent: rgba(0, 0, 0, 0);\n          height: 100%;\n        }\n        .drawer-content {\n          width: var(--drawer-width);\n          height: 100%;\n          position: fixed;\n          opacity: 0;\n          top: 0;\n          bottom: 0;\n          overflow-y: auto;\n          transform: translateX(-100%);\n          background-color: var(--md-sys-color-surface-container);\n          z-index: 2;\n          transition: opacity 0.3s ease, transform 0.3s ease;\n        }\n\n        :host([position=\"left\"]) .drawer-content {\n          left: 0;\n          right: auto;\n          transform: translateX(-100%); /* Start off-screen to the left */\n        }\n\n        :host([position=\"right\"]) .drawer-content {\n          right: 0;\n          transform: translateX(100%); /* Start off-screen to the right */\n          overflow-y: initial;\n        }\n\n        :host([open]) .drawer-content {\n          transform: translateX(0); /* Slide in */\n          opacity: 1; /* Fade in */\n          transition: opacity 0.3s ease, transform 0.3s ease; /* Apply transitions */\n        }\n        .scrim {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: transparent;\n          z-index: 2;\n          opacity: 0;\n          pointer-events: none;\n          visibility: hidden;\n        }\n\n        :host([open]) .scrim {\n          background-color: var(--scrim-transparent);\n          visibility: visible;\n        }\n\n        :host([open][transparentScrim]) .scrim {\n          background-color: var(--scrim-transparent);\n        }\n\n        :host([open]) .scrim {\n          opacity: 1;\n          pointer-events: auto;\n        }\n      `,\n    ];\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    document.addEventListener(\"keydown\", this._handleEscKey.bind(this));\n    this.addEventListener(\"click\", this._handleScrimClick);\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    document.removeEventListener(\"keydown\", this._handleEscKey.bind(this));\n    this.removeEventListener(\"click\", this._handleScrimClick);\n  }\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    if (changedProperties.has(\"open\")) {\n      if (this.open===true) {\n        this.fire(\"opened\")\n        console.error(\"opened\")\n      } else if (this.open===false) {\n        this.fire(\"closed\");\n        console.error(\"closed\")\n      }\n    }\n  }\n\n  private _handleScrimClick(event: MouseEvent): void {\n    const scrim = this.shadowRoot!.querySelector(\".scrim\");\n    const path = event.composedPath();\n    if (scrim && path.includes(scrim)) {\n      this.open = false;\n    }\n  }\n\n  private _handleEscKey(event: KeyboardEvent): void {\n    if (event.key === \"Escape\" && this.open) {\n      this.open = false;\n    }\n  }\n\n  override render(): TemplateResult {\n    return html`\n      <div class=\"scrim\"></div>\n      <div class=\"drawer-content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n"]}