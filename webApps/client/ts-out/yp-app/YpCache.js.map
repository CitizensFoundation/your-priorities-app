{"version":3,"file":"YpCache.js","sourceRoot":"","sources":["../../src/yp-app/YpCache.ts"],"names":[],"mappings":"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","sourcesContent":["import { YpCodeBase } from '../common/YpCodeBaseclass.js';\n\nexport class YpCache extends YpCodeBase {\n  cachedActivityItem: AcActivityData | undefined;\n\n  cachedPostItem: YpPostData | undefined;\n\n  backToDomainCommunityItems: Record<number, YpCommunityData | undefined> = {};\n\n  backToCommunityGroupItems: Record<number, YpGroupData | undefined> = {};\n\n  communityItemsCache: Record<number, YpCommunityData> = {};\n\n  groupItemsCache: Record<number, YpGroupData> = {};\n\n  postItemsCache: Record<number, YpPostData> = {};\n\n  currentPostListForGroup: Record<number, Array<YpPostData>> = {};\n\n  postCountsForGroup: Record<number, number> = {};\n\n  setPostCountsForGroup(groupId: number, postCount: number) {\n    this.postCountsForGroup[groupId] = postCount;\n  }\n\n  getPostCountsForGroup(groupId: number) {\n    return this.postCountsForGroup[groupId];\n  }\n\n  setCurrentPostListForGroup(groupId: number, posts: Array<YpPostData>) {\n    this.currentPostListForGroup[groupId] = posts;\n  }\n\n  getPostPositionInTheGroupList(groupId: number, postId: number) {\n    const posts = this.currentPostListForGroup[groupId];\n    if (posts) {\n      for (let i = 0; i < posts.length; i++) {\n        if (posts[i].id === postId) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  }\n\n  getPreviousPostInGroupList(groupId: number, postId: number) {\n    const posts = this.currentPostListForGroup[groupId];\n    if (posts) {\n      for (let i = 0; i < posts.length; i++) {\n        if (posts[i].id === postId) {\n          if (i > 0) {\n            return posts[i - 1];\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  getNextPostInGroupList(groupId: number, postId: number) {\n    const posts = this.currentPostListForGroup[groupId];\n    if (posts) {\n      for (let i = 0; i < posts.length; i++) {\n        if (posts[i].id === postId) {\n          if (i < posts.length - 1) {\n            return posts[i + 1];\n          }\n        }\n      }\n    }\n    return undefined\n  }\n\n  autoTranslateCache: Record<string, string[] | string> = {};\n\n  addPostsToCacheLater(posts: Array<YpPostData>) {\n    const laterTimeoutMs = Math.floor(Math.random() * 500) + 250;\n    setTimeout(() => {\n      this.addPostsToCache(posts);\n    }, laterTimeoutMs);\n  }\n\n  addPostsToCache(posts: Array<YpPostData>) {\n    if (posts) {\n      for (let i = 0; i < posts.length; i++) {\n        if (!this.postItemsCache[posts[i].id]) {\n          this.postItemsCache[posts[i].id] = posts[i];\n        }\n      }\n    } else {\n      console.error('No posts for cache');\n    }\n  }\n\n  getPostFromCache(postId: number) {\n    return this.postItemsCache[postId];\n  }\n\n  updatePostInCache(post: YpPostData) {\n    this.postItemsCache[post.id] = post;\n  }\n}\n"]}