{"version":3,"file":"yp-app-top-bar.js","sourceRoot":"","sources":["../../src/yp-app/yp-app-top-bar.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAA6B,MAAM,KAAK,CAAC;AACvE,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAGxC,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,UAAU;IAwBzC;QACE,KAAK,EAAE,CAAC;QAHF,gBAAW,GAAW,CAAC,CAAC,CAAC,yCAAyC;IAI1E,CAAC;IAEQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAClE,CAAC;IAEQ,oBAAoB;QAC3B,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,KAAK,CAAC,oBAAoB,EAAE,CAAC;IAC/B,CAAC;IAEO,YAAY;QAClB,MAAM,cAAc,GAAW,MAAM,CAAC,OAAO,CAAC;QAC9C,MAAM,MAAM,GACV,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,cAAc,CAAC,CAAC;QAEjD,IAAI,MAAM,EAAE,CAAC;YACX,IAAI,cAAc,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBACtC,mCAAmC;gBACnC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAC5D,sBAAsB,CACvB,EAAE,CAAC;YACN,CAAC;iBAAM,CAAC;gBACN,iCAAiC;gBACjC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;YACzB,CAAC;QACH,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;IACpC,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;KAMV,CAAC;IACJ,CAAC;;AAjEe,kBAAM,GAAc,GAAG,CAAA;;;;;;;;;;;;;;;;;;;GAmBtC,AAnBqB,CAmBpB;AApBS,WAAW;IADvB,aAAa,CAAC,gBAAgB,CAAC;GACnB,WAAW,CAmEvB","sourcesContent":["import { LitElement, html, css, CSSResult, TemplateResult } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"yp-top-app-bar\")\nexport class YpTopAppBar extends LitElement {\n  static override styles: CSSResult = css`\n    :host {\n      --top-app-bar-height: 64px; /* Standard height for top app bars */\n    }\n    .top-app-bar {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      height: var(--top-app-bar-height);\n      padding: 0 16px;\n      background-color: #6200ee; /* Example color */\n      color: white;\n      position: fixed; /* Make it overlay content */\n      top: 0;\n      left: 0;\n      right: 0;\n      transition: top 0.3s; /* Smooth transition for sliding effect */\n      z-index: 100; /* Ensure it's above other content */\n    }\n  `;\n\n  private lastScrollY: number = 0; // Keep track of the last scroll position\n\n  constructor() {\n    super();\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    window.addEventListener(\"scroll\", this.handleScroll.bind(this));\n  }\n\n  override disconnectedCallback(): void {\n    window.removeEventListener(\"scroll\", this.handleScroll.bind(this));\n    super.disconnectedCallback();\n  }\n\n  private handleScroll(): void {\n    const currentScrollY: number = window.scrollY;\n    const appBar: HTMLElement | null | undefined =\n      this.shadowRoot?.querySelector(\".top-app-bar\");\n\n    if (appBar) {\n      if (currentScrollY > this.lastScrollY) {\n        // Scrolling down, hide the app bar\n        appBar.style.top = `-${getComputedStyle(this).getPropertyValue(\n          \"--top-app-bar-height\"\n        )}`;\n      } else {\n        // Scrolling up, show the app bar\n        appBar.style.top = \"0\";\n      }\n    }\n\n    this.lastScrollY = currentScrollY;\n  }\n\n  override render(): TemplateResult {\n    return html`\n      <div class=\"top-app-bar\">\n        <slot name=\"navigation\"></slot>\n        <span class=\"title\"><slot name=\"title\"></slot></span>\n        <slot name=\"actions\"></slot>\n      </div>\n    `;\n  }\n}\n"]}