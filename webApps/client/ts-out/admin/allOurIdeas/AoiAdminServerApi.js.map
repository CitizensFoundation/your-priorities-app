{"version":3,"file":"AoiAdminServerApi.js","sourceRoot":"","sources":["../../../src/admin/allOurIdeas/AoiAdminServerApi.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAE1D,MAAM,OAAO,iBAAkB,SAAQ,WAAW;IAChD,YAAY,UAAkB,kBAAkB;QAC9C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;IAC7B,CAAC;IAEM,KAAK,CAAC,UAAU,CACrB,WAAmB,EACnB,UAAkB;QAElB,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,YAAY,UAAU,eAAe,CAC1C,CAAC;IAClC,CAAC;IAEM,KAAK,CAAC,sBAAsB,CACjC,WAAmB,EACnB,KAAe,EACf,YAAoB;QAEpB,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,YAAY,EAC9C;YACE,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACnB,KAAK,EAAE,KAAK;gBACZ,QAAQ,EAAE,YAAY;aACvB,CAAC;SACH,EACD,IAAI,EACJ,SAAS,EACT,IAAI,CACL,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,kBAAkB,CAC7B,QAAgB,EAChB,WAAmB,EACnB,gBAAwB,EACxB,YAAsB;QAEtB,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,gBAAgB,EAClD;YACE,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACnB,YAAY;gBACZ,gBAAgB;gBAChB,QAAQ;aACT,CAAC;SACH,EACD,IAAI,EACJ,SAAS,EACT,IAAI,CACL,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAC3B,OAAe,EACf,QAAgB;QAEhB,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,YAAY,QAAQ,eAAe,EACjE;YACE,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;SACzB,EACD,IAAI,EACJ,SAAS,EACT,IAAI,CACL,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { YpServerApi } from \"../../common/YpServerApi.js\";\n\nexport class AoiAdminServerApi extends YpServerApi {\n  constructor(urlPath: string = \"/api/allOurIdeas\") {\n    super();\n    this.baseUrlPath = urlPath;\n  }\n\n  public async getChoices(\n    communityId: number,\n    questionId: number\n  ): Promise<AoiChoiceData[]> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `/${communityId}/choices/${questionId}?showAll=true`,\n    ) as unknown as AoiChoiceData[];\n  }\n\n  public async submitIdeasForCreation(\n    communityId: number,\n    ideas: string[],\n    questionName: string\n  ): Promise<AoiEarlData> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `/${communityId}/questions`,\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          ideas: ideas,\n          question: questionName\n        }),\n      },\n      true,\n      undefined,\n      true\n    );\n  }\n\n  public async startGenerateIdeas(\n    question: string,\n    communityId: number,\n    wsClientSocketId: string,\n    currentIdeas: string[]\n  ): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `/${communityId}/generateIdeas`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({\n          currentIdeas,\n          wsClientSocketId,\n          question\n        }),\n      },\n      true,\n      undefined,\n      true\n    );\n  }\n\n  public async toggleIdeaActive(\n    groupId: number,\n    choiceId: number,\n  ): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `/${groupId}/choices/${choiceId}/toggleActive`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({}),\n      },\n      true,\n      undefined,\n      true\n    );\n  }\n}\n"]}