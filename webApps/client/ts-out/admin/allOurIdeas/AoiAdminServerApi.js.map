{"version":3,"file":"AoiAdminServerApi.js","sourceRoot":"","sources":["../../../src/admin/allOurIdeas/AoiAdminServerApi.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAE1D,MAAM,OAAO,iBAAkB,SAAQ,WAAW;IAChD,YAAY,UAAkB,kBAAkB;QAC9C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;IAC7B,CAAC;IAEM,KAAK,CAAC,UAAU,CACrB,QAA4B,EAC5B,WAA+B,EAC/B,UAAkB;QAElB,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW;YACd,IAAI,QAAQ,IAAI,WAAW,YAAY,UAAU,GAC/C,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAChC,eAAe,CACY,CAAC;IAClC,CAAC;IAEM,KAAK,CAAC,sBAAsB,CACjC,QAA4B,EAC5B,WAA+B,EAC/B,KAAe,EACf,YAAoB;QAEpB,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW;YACd,IAAI,QAAQ,IAAI,WAAW,aACzB,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAChC,EAAE,EACJ;YACE,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACnB,KAAK,EAAE,KAAK;gBACZ,QAAQ,EAAE,YAAY;aACvB,CAAC;SACH,EACD,IAAI,EACJ,SAAS,EACT,IAAI,CACL,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,kBAAkB,CAC7B,QAAgB,EAChB,QAA4B,EAC5B,WAA+B,EAC/B,gBAAwB,EACxB,YAAsB;QAEtB,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW;YACd,IAAI,QAAQ,IAAI,WAAW,iBACzB,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAChC,EAAE,EACJ;YACE,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACnB,YAAY;gBACZ,gBAAgB;gBAChB,QAAQ;aACT,CAAC;SACH,EACD,IAAI,EACJ,SAAS,EACT,IAAI,CACL,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,YAAY,CACvB,QAA4B,EAC5B,WAA+B,EAC/B,UAAkB,EAClB,QAAgB,EAChB,UAAiC;QAEjC,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW;YACd,IACE,QAAQ,IAAI,WACd,cAAc,UAAU,YAAY,QAAQ,GAC1C,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAChC,EAAE,EACJ;YACE,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACnB,IAAI,EAAE,UAAU;aACjB,CAAC;SACH,EACD,IAAI,EACJ,SAAS,EACT,IAAI,CACL,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAC5B,OAAe,EACf,UAAkB,EAClB,QAAgB,EAChB,UAAiC;QAEjC,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW;YACd,IAAI,OAAO,cAAc,UAAU,YAAY,QAAQ,eAAe,EACxE;YACE,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACnB,IAAI,EAAE,UAAU;aACjB,CAAC;SACH,EACD,IAAI,EACJ,SAAS,EACT,IAAI,CACL,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,YAAY,CACvB,QAA4B,EAC5B,WAA+B,EAC/B,UAAkB,EAClB,QAAgB,EAChB,MAAe;QAEf,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW;YACd,IACE,QAAQ,IAAI,WACd,cAAc,UAAU,YAAY,QAAQ,UAC1C,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAChC,EAAE,EACJ;YACE,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACnB,MAAM;aACP,CAAC;SACH,EACD,IAAI,EACJ,SAAS,EACT,IAAI,CACL,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,UAAU,CACrB,QAA4B,EAC5B,WAA+B,EAC/B,UAAkB,EAClB,IAAY;QAEZ,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW;YACd,IAAI,QAAQ,IAAI,WAAW,cAAc,UAAU,QACjD,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAChC,EAAE,EACJ;YACE,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACnB,IAAI;aACL,CAAC;SACH,EACD,IAAI,EACJ,SAAS,EACT,IAAI,CACL,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAC3B,OAAe,EACf,QAAgB;QAEhB,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,YAAY,QAAQ,eAAe,EACjE;YACE,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;SACzB,EACD,IAAI,EACJ,SAAS,EACT,IAAI,CACL,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { YpServerApi } from \"../../common/YpServerApi.js\";\n\nexport class AoiAdminServerApi extends YpServerApi {\n  constructor(urlPath: string = \"/api/allOurIdeas\") {\n    super();\n    this.baseUrlPath = urlPath;\n  }\n\n  public async getChoices(\n    domainId: number | undefined,\n    communityId: number | undefined,\n    questionId: number\n  ): Promise<AoiChoiceData[]> {\n    return this.fetchWrapper(\n      this.baseUrlPath +\n        `/${domainId || communityId}/choices/${questionId}${\n          domainId ? \"/throughDomain\" : \"\"\n        }?showAll=true`\n    ) as unknown as AoiChoiceData[];\n  }\n\n  public async submitIdeasForCreation(\n    domainId: number | undefined,\n    communityId: number | undefined,\n    ideas: string[],\n    questionName: string\n  ): Promise<AoiEarlData> {\n    return this.fetchWrapper(\n      this.baseUrlPath +\n        `/${domainId || communityId}/questions${\n          domainId ? \"/throughDomain\" : \"\"\n        }`,\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          ideas: ideas,\n          question: questionName,\n        }),\n      },\n      true,\n      undefined,\n      true\n    );\n  }\n\n  public async startGenerateIdeas(\n    question: string,\n    domainId: number | undefined,\n    communityId: number | undefined,\n    wsClientSocketId: string,\n    currentIdeas: string[]\n  ): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath +\n        `/${domainId || communityId}/generateIdeas${\n          domainId ? \"/throughDomain\" : \"\"\n        }`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({\n          currentIdeas,\n          wsClientSocketId,\n          question,\n        }),\n      },\n      true,\n      undefined,\n      true\n    );\n  }\n\n  public async updateChoice(\n    domainId: number | undefined,\n    communityId: number | undefined,\n    questionId: number,\n    choiceId: number,\n    choiceData: AoiAnswerToVoteOnData\n  ): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath +\n        `/${\n          domainId || communityId\n        }/questions/${questionId}/choices/${choiceId}${\n          domainId ? \"/throughDomain\" : \"\"\n        }`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({\n          data: choiceData,\n        }),\n      },\n      true,\n      undefined,\n      true\n    );\n  }\n\n  public async updateGroupChoice(\n    groupId: number,\n    questionId: number,\n    choiceId: number,\n    choiceData: AoiAnswerToVoteOnData\n  ): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath +\n        `/${groupId}/questions/${questionId}/choices/${choiceId}/throughGroup`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({\n          data: choiceData,\n        }),\n      },\n      true,\n      undefined,\n      true\n    );\n  }\n\n  public async updateActive(\n    domainId: number | undefined,\n    communityId: number | undefined,\n    questionId: number,\n    choiceId: number,\n    active: boolean\n  ): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath +\n        `/${\n          domainId || communityId\n        }/questions/${questionId}/choices/${choiceId}/active${\n          domainId ? \"/throughDomain\" : \"\"\n        }`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({\n          active,\n        }),\n      },\n      true,\n      undefined,\n      true\n    );\n  }\n\n  public async updateName(\n    domainId: number | undefined,\n    communityId: number | undefined,\n    questionId: number,\n    name: string\n  ): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath +\n        `/${domainId || communityId}/questions/${questionId}/name${\n          domainId ? \"/throughDomain\" : \"\"\n        }`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({\n          name,\n        }),\n      },\n      true,\n      undefined,\n      true\n    );\n  }\n\n  public async toggleIdeaActive(\n    groupId: number,\n    choiceId: number\n  ): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `/${groupId}/choices/${choiceId}/toggleActive`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({}),\n      },\n      true,\n      undefined,\n      true\n    );\n  }\n}\n"]}