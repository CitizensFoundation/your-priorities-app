{"version":3,"file":"aoiGenerateAiLogos.js","sourceRoot":"","sources":["../../../src/admin/allOurIdeas/aoiGenerateAiLogos.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { customElement } from \"lit/decorators.js\";\nimport { YpGenerateAiImage } from \"../../common/yp-generate-ai-image.js\";\n\n@customElement(\"aoi-generate-ai-logos\")\nexport class AoiGenerateAiLogos extends YpGenerateAiImage {\n  override imageType: YpAiGenerateImageTypes = \"icon\";\n\n  hexColor = \"#01049c\";\n  hexToRgb(hex: string): { r: number; g: number; b: number } {\n    if (hex.startsWith(\"#\")) {\n      hex = hex.slice(1);\n    }\n\n    const r = parseInt(hex.slice(0, 2), 16);\n    const g = parseInt(hex.slice(2, 4), 16);\n    const b = parseInt(hex.slice(4, 6), 16);\n\n    return { r, g, b };\n  }\n\n  rgbToHsl(r: number, g: number, b: number): { h: number; s: number; l: number } {\n    r /= 255, g /= 255, b /= 255;\n    const max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h, s, l = (max + min) / 2;\n\n    if (max === min) {\n      h = s = 0;\n    } else {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n      }\n      h! /= 6;\n    }\n\n    return { h: h! * 360, s: s * 100, l: l * 100 };\n  }\n\n  hslToHex(h: number, s: number, l: number): string {\n    s /= 100;\n    l /= 100;\n\n    let c = (1 - Math.abs(2 * l - 1)) * s,\n        x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n        m = l - c / 2,\n        r: string | number = 0,\n        g: string | number = 0,\n        b: string | number = 0;\n\n    if (h >= 0 && h < 60) {\n      r = c; g = x; b = 0;\n    } else if (h >= 60 && h < 120) {\n      r = x; g = c; b = 0;\n    } else if (h >= 120 && h < 180) {\n      r = 0; g = c; b = x;\n    } else if (h >= 180 && h < 240) {\n      r = 0; g = x; b = c;\n    } else if (h >= 240 && h < 300) {\n      r = x; g = 0; b = c;\n    } else if (h >= 300 && h < 360) {\n      r = c; g = 0; b = x;\n    }\n    r = Math.round((r + m) * 255).toString(16) as any;\n    g = Math.round((g + m) * 255).toString(16) as any;\n    b = Math.round((b + m) * 255).toString(16) as any;\n\n    if ((r as string).length === 1)\n      r = \"0\" + r;\n    if ((g as string).length === 1)\n      g = \"0\" + g;\n    if ((b as string).length === 1)\n      b = \"0\" + b;\n\n    return `#${r}${g}${b}`;\n  }\n\n  getComplementaryColor(hex: string): string {\n    const { r, g, b } = this.hexToRgb(hex);\n    const { h, s, l } = this.rgbToHsl(r, g, b);\n    const complementaryHue = (h + 180) % 360;\n    return this.hslToHex(complementaryHue, s, l);\n  }\n\n  hexToColorDescription(hex: string): string {\n    // Remove '#' if it's present\n    if (hex.startsWith(\"#\")) {\n        hex = hex.slice(1);\n    }\n\n    // Parse the hex string into RGB\n    const r = parseInt(hex.slice(0, 2), 16);\n    const g = parseInt(hex.slice(2, 4), 16);\n    const b = parseInt(hex.slice(4, 6), 16);\n\n    // Determine the dominant color(s)\n    const maxVal = Math.max(r, g, b);\n    const isRedDominant = r === maxVal;\n    const isGreenDominant = g === maxVal;\n    const isBlueDominant = b === maxVal;\n\n    // Generate a description\n    let description = '';\n\n    if (isRedDominant && isGreenDominant && isBlueDominant) {\n        description = 'gray';\n    } else if (isRedDominant && isGreenDominant) {\n        description = 'yello';\n    } else if (isRedDominant && isBlueDominant) {\n        description = 'purple';\n    } else if (isGreenDominant && isBlueDominant) {\n        description = 'cyan';\n    } else if (isRedDominant) {\n        description = 'red';\n    } else if (isGreenDominant) {\n        description = 'green';\n    } else if (isBlueDominant) {\n        description = 'blue';\n    }\n\n    // Adjust for lightness/darkness\n    if (maxVal > 200) {\n        description = 'light ' + description;\n    } else if (maxVal < 55) {\n        description = 'dark ' + description;\n    }\n\n    return description;\n}\n\noverride get finalPrompt() {\n  const highlightColorHex = this.getComplementaryColor(this.hexColor);\n  return `\n    Create very simple tiny icon to represent this text in very simplified terms, choose one element to illustrate: ${this.name}\n\n    Use a color scheme based on ${this.hexToColorDescription(this.hexColor)} with highlights in ${this.hexToColorDescription(highlightColorHex)}\n  `;\n}\n\n  async generateImage() {\n    return new Promise<object>((resolve, reject) => {\n      const onGotImage = (details: any) => {\n        this.removeEventListener(\"got-image\", onGotImage);\n        this.removeEventListener(\"image-generation-error\", onImageGenerationError);\n        console.error(\"Got image\", details.detail);\n        resolve(details.detail);\n      };\n\n      const onImageGenerationError = (details: any) => {\n        this.removeEventListener(\"got-image\", onGotImage);\n        this.removeEventListener(\"image-generation-error\", onImageGenerationError);\n        reject(details.detail);\n      };\n\n      this.addEventListener(\"got-image\", onGotImage);\n      this.addEventListener(\"image-generation-error\", onImageGenerationError);\n\n      this.submit().catch(error => {\n        this.removeEventListener(\"got-image\", onGotImage);\n        this.removeEventListener(\"image-generation-error\", onImageGenerationError);\n        reject(error);\n      });\n    });\n  }\n\n  async generateIcon(answer: string, hexColor: string) {\n    this.name = answer;\n    this.hexColor = hexColor;\n    return await this.generateImage();\n  }\n}\n"]}