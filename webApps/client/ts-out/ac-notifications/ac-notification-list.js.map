{"version":3,"file":"ac-notification-list.js","sourceRoot":"","sources":["../../src/ac-notifications/ac-notification-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, css, nothing } from \"lit\";\nimport { property, customElement } from \"lit/decorators.js\";\n\nimport { LitVirtualizer } from \"@lit-labs/virtualizer\";\nimport { FlowLayout } from \"@lit-labs/virtualizer/layouts/flow\";\n\nimport \"@material/web/button/text-button.js\";\n\nimport \"../yp-user/yp-user-info.js\";\n\nimport \"../common/languages/yp-language-selector.js\";\n\nimport \"./ac-notification-list-post.js\";\nimport \"./ac-notification-list-point.js\";\nimport \"./ac-notification-list-general-item.js\";\n\nimport { YpFormattingHelpers } from \"../common/YpFormattingHelpers.js\";\nimport { YpBaseElementWithLogin } from \"../common/yp-base-element-with-login.js\";\nimport { AcNotificationToast } from \"./ac-notification-toast.js\";\nimport { YpUserEdit } from \"../yp-user/yp-user-edit.js\";\nimport { YpConfirmationDialog } from \"../yp-dialog-container/yp-confirmation-dialog.js\";\n\n@customElement(\"ac-notification-list\")\nexport class AcNotificationList extends YpBaseElementWithLogin {\n  @property({ type: Array })\n  notifications: Array<AcNotificationData> | undefined;\n\n  @property({ type: Number })\n  notificationGetTTL = 5000;\n\n  @property({ type: Object })\n  oldestProcessedNotificationAt: Date | undefined;\n\n  @property({ type: Object })\n  latestProcessedNotificationAt: Date | undefined;\n\n  @property({ type: String })\n  url = \"/api/notifications\";\n\n  @property({ type: Object })\n  user: YpUserData | undefined;\n\n  @property({ type: Boolean })\n  firstReponse = false;\n\n  @property({ type: Number })\n  timer: ReturnType<typeof setTimeout> | undefined;\n\n  @property({ type: Number })\n  unViewedCount = 0;\n\n  @property({ type: Boolean })\n  moreToLoad = false;\n\n  @property({ type: Boolean })\n  opened = false;\n\n  @property({ type: String })\n  route: string | undefined;\n\n  lastFetchStartedAt: number | undefined;\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>) {\n    super.updated(changedProperties);\n\n    if (changedProperties.has(\"user\")) {\n      this._userChanged();\n    }\n\n    if (changedProperties.has(\"open\")) {\n      this._openedChanged();\n    }\n\n    if (changedProperties.has(\"loggedInUser\")) {\n      this._loggedInUserChanged();\n    }\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        lit-virtualizer {\n          flex: 1 1 auto;\n        }\n\n        p {\n          text-align: left;\n        }\n\n        .notificationItem {\n          margin-bottom: 8px;\n          padding-bottom: 8px;\n        }\n\n        .unViewedCount {\n          padding-top: 8px;\n          font-size: 14px;\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n\n        #material {\n          z-index: 300;\n          margin: 0 !important;\n          padding: 8px;\n          height: 100vh;\n          overflow-x: scroll;\n          background-color: var(--md-sys-color-surface-container-high);\n          color: var(--md-sys-color-on-surface);\n        }\n\n        .notificationHeader {\n          font-size: 18px;\n          padding-top: 8px;\n        }\n\n        #notificationsList {\n          width: 100% !important;\n          overflow: hidden;\n        }\n\n        :focus {\n        }\n\n        .overflowSettings {\n          overflow-x: hidden;\n          max-width: 255px !important;\n        }\n\n        .notificationHeader {\n          margin-bottom: 2px;\n        }\n\n        yp-language-selector {\n          margin: 16px;\n        }\n\n        .themeSelection {\n          margin-top: 16px;\n        }\n      `,\n    ];\n  }\n\n  renderNotification(notification: AcNotificationData) {\n    switch (notification.type) {\n      case \"postNotification\":\n      case \"notification.post.new\":\n      case \"notification.post.endorsement\":\n        return html`\n          <ac-notification-list-post\n            class=\"notificationItem\"\n            .notification=\"${notification}\"\n          ></ac-notification-list-post>\n        `;\n      case \"pointNotification\":\n      case \"notification.point.new\":\n      case \"notification.point.quality\":\n        return html`\n          <ac-notification-list-point\n            class=\"notificationItem\"\n            .notification=\"${notification}\"\n          ></ac-notification-list-point>\n        `;\n      case \"notification.post.status.change\":\n        return html`\n          <ac-notification-list-post\n            class=\"notificationItem\"\n            .notification=\"${notification}\"\n          ></ac-notification-list-post>\n        `;\n      case \"notification.point.newsStory\":\n        return html`\n          <ac-notification-list-general-item\n            icon=\"face\"\n            .notification=\"${notification}\"\n            .shortText=\"${notification.AcActivities[0].Point!.content}\"\n          >\n          </ac-notification-list-general-item>\n        `;\n      case \"notification.point.comment\":\n        return html`\n          <ac-notification-list-general-item\n            icon=\"chat_bubble_outline\"\n            .notification=\"${notification}\"\n            .shortText=\"${notification.AcActivities[0].Point!.content}\"\n          ></ac-notification-list-general-item>\n        `;\n      case \"notification.generalUserNotification\":\n        return html`\n          <ac-notification-list-general-item\n            icon=\"language\"\n            .notification=\"${notification}\"\n            .shortText=\"${this._getNotificationTypeAndName(\n              notification.AcActivities[0].object?.type,\n              notification.AcActivities[0].object?.name\n            )}\"\n          ></ac-notification-list-general-item>\n        `;\n      default:\n        return nothing;\n    }\n  }\n\n  override render() {\n    return html`\n      <div id=\"material\" class=\"oversflowSettings\">\n        ${this.loggedInUser\n          ? html`\n              <yp-user-info\n                @open-user-edit=\"${this._openEdit}\"\n                .user=\"${this.loggedInUser}\"\n              ></yp-user-info>\n              <div class=\"layout horizontal center-center themeSelection\">\n                ${this.renderThemeToggle()}\n              </div>\n              <div class=\"languageSelector layout vertical self-start\">\n                <yp-language-selector\n                  class=\"languageSelector\"\n                ></yp-language-selector>\n              </div>\n              <div\n                class=\"notificationHeader layout horizontal center-center\"\n                ?hidden=\"${!this.notificationsLength}\"\n              >\n                ${this.t(\"notifications\")}\n              </div>\n              <div\n                ?hidden=\"${!this.unViewedCount}\"\n                class=\"unViewedCount layout vertical center-center\"\n              >\n                <div>${this.unViewedCount} ${this.t(\"unviewed\")}</div>\n                <md-text-button\n                  @click=\"${this._markAllAsViewed}\"\n                  .label=\"${this.t(\"notificationMarkAllViewed\")}\"\n                ></md-text-button>\n              </div>\n\n              ${this.notifications\n                ? html`\n                    <lit-virtualizer\n                      .items=${this.notifications}\n                      .scrollTarget=\"${window}\"\n                      id=\"activitiesList\"\n                      scrollOffset=\"300\"\n                      .renderItem=${this.renderNotification}\n                      @rangeChanged=${this.scrollEvent}\n                    ></lit-virtualizer>\n                  `\n                : nothing}\n            `\n          : html``}\n      </div>\n    `;\n  }\n\n  scrollEvent(event: { last: number }) {\n    //TODO: Check this logic\n\n    if (\n      this.notifications &&\n      !this.moreToLoad &&\n      event.last != -1 &&\n      event.last < this.notifications.length &&\n      event.last + 5 >= this.notifications.length\n    ) {\n      this.moreToLoad = true;\n      this._loadMoreData();\n    }\n  }\n\n  get notificationsLength() {\n    if (this.notifications) {\n      return this.notifications.length;\n    } else {\n      return 0;\n    }\n  }\n\n  _openedChanged() {\n    if (this.opened) {\n      setTimeout(() => {\n        this.markCurrentAsViewed();\n      }, 25);\n    }\n  }\n\n  _getNotificationTypeAndName(\n    theType: string | undefined,\n    name: string | undefined\n  ) {\n    return theType ? this.t(theType) + \" \" + (name ? name : \"\") : \"\";\n  }\n\n  _openEdit() {\n    window.appDialogs.getDialogAsync(\"userEdit\", (dialog: YpUserEdit) => {\n      dialog.setup(this.loggedInUser!, false, undefined);\n      dialog.open(false, { userId: this.loggedInUser!.id });\n    });\n  }\n\n  _clearScrollThreshold() {\n    //TODO: See if this is needed\n    //this.$$('#threshold').clearTriggers();\n  }\n\n  _markAllAsViewed() {\n    window.appDialogs.getDialogAsync(\n      \"confirmationDialog\",\n      (dialog: YpConfirmationDialog) => {\n        dialog.open(\n          this.t(\"notificationConfirmMarkAllViewed\"),\n          this._reallyMarkAllAsViewed.bind(this)\n        );\n      }\n    );\n  }\n\n  async _reallyMarkAllAsViewed() {\n    await window.serverApi.setNotificationsAllAsViewed();\n    this._handleUnViewedCount(0);\n    this._setAllLocalCurrentAsViewed();\n  }\n\n  _handleUnViewedCount(unViewedCount: number) {\n    this.unViewedCount = unViewedCount;\n    this.fire(\"yp-set-number-of-un-viewed-notifications\", {\n      count: unViewedCount,\n    });\n  }\n\n  markCurrentAsViewed() {\n    this._markAsViewed(this.notifications!);\n  }\n\n  _markAsViewed(notifications: Array<AcNotificationData>) {\n    const marked: Array<number> = [];\n    if (notifications) {\n      notifications.forEach(function (notification) {\n        if (!notification.viewed) {\n          marked.push(notification.id);\n        }\n      });\n    }\n    if (marked.length > 0) {\n      this._setAsViewed({ viewedIds: marked });\n    }\n  }\n\n  async _setAsViewed(body: { viewedIds: Array<number> }) {\n    const setAsViewResponse = (await window.serverApi.setNotificationsAsViewed(\n      body\n    )) as AcNotificationsSetAsViewedResponse;\n    this._handleUnViewedCount(setAsViewResponse.unViewedCount);\n    const viewedIds = setAsViewResponse.viewedIds;\n    if (this.notifications) {\n      this.notifications.forEach((notification, index, theArray) => {\n        if (viewedIds.indexOf(notification.id) > -1) {\n          theArray[index].viewed = true;\n        }\n      });\n    }\n  }\n\n  _setAllLocalCurrentAsViewed() {\n    if (this.notifications) {\n      this.notifications.forEach(function (notification, index, theArray) {\n        theArray[index].viewed = true;\n      });\n    }\n  }\n\n  //TODO: Add a way to detect an error through the Fetch API so we can implement this\n  _newNotificationsError(event: CustomEvent) {\n    console.error(\"Error in getting new notifications\");\n    if (navigator.onLine) {\n      this.cancelTimer();\n    } else {\n      this._startTimer();\n    }\n\n    if (event.detail && event.detail.status && event.detail.status == 401) {\n      window.appUser.checkLogin();\n    }\n  }\n\n  async _getNotifications(\n    options: AcNotificationsDateFetchOptions | undefined = undefined\n  ) {\n    let url = this.url;\n\n    if (options && options.oldestProcessedNotificationAt) {\n      url += \"?beforeDate=\" + options.oldestProcessedNotificationAt;\n    } else if (options && options.latestProcessedNotificationAt) {\n      url += \"?afterDate=\" + options.latestProcessedNotificationAt;\n    }\n    return (await window.serverApi.getAcNotifications(\n      url\n    )) as AcNotificationsResponse;\n  }\n\n  _processNotifications(notificationsResponse: AcNotificationsResponse) {\n    if (notificationsResponse.oldestProcessedNotificationAt) {\n      this.oldestProcessedNotificationAt =\n        notificationsResponse.oldestProcessedNotificationAt;\n    }\n\n    if (!this.notifications) {\n      this.notifications = notificationsResponse.notifications;\n    } else {\n      notificationsResponse.notifications.forEach((notification) => {\n        this.notifications?.push(notification);\n      });\n    }\n\n    this._finalizeAfterResponse(notificationsResponse.notifications);\n\n    if (this.firstReponse) {\n      this.firstReponse = false;\n      this.loadNewData();\n    } else {\n      if (this.opened) {\n        this._markAsViewed(notificationsResponse.notifications);\n      }\n    }\n\n    this._handleUnViewedCount(notificationsResponse.unViewedCount);\n  }\n\n  async _userChanged() {\n    if (this.loggedInUser) {\n      this._processNotifications(await this._getNotifications());\n    } else {\n      this.cancelTimer();\n    }\n  }\n\n  _loggedInUserChanged() {\n    if (!this.loggedInUser) {\n      this.cancelTimer();\n    }\n  }\n\n  cancelTimer() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = undefined;\n    }\n  }\n\n  _notificationType(notification: AcNotificationData, type: string) {\n    if (notification.type == type) {\n      return true;\n    } else if (type == \"postNotification\") {\n      return (\n        [\"notification.post.new\", \"notification.post.endorsement\"].indexOf(\n          notification.type\n        ) > -1\n      );\n    } else if (type == \"pointNotification\") {\n      return (\n        [\"notification.point.new\", \"notification.point.quality\"].indexOf(\n          notification.type\n        ) > -1\n      );\n    } else if (type == \"system\") {\n      return false;\n    } else {\n      return false;\n    }\n  }\n\n  _startTimer() {\n    this.cancelTimer();\n    if (this.loggedInUser) {\n      this.timer = setTimeout(() => {\n        this.loadNewData();\n        this.lastFetchStartedAt = Date.now();\n      }, this.notificationGetTTL);\n    }\n  }\n\n  _sendReloadPointsEvents(notifications: Array<AcNotificationData>) {\n    notifications.forEach((notification) => {\n      if (notification.type == \"notification.point.new\") {\n        const activityUser = notification.AcActivities[0].User;\n        if (\n          window.appUser.user &&\n          activityUser &&\n          window.appUser.user.id != activityUser.id\n        ) {\n          this.fireGlobal(\"yp-update-points-for-post\", {\n            postId: notification.AcActivities[0].Post!.id,\n          });\n        }\n      }\n    });\n  }\n\n  _loadNewNotificationsResponse(\n    notificationsResponse: AcNotificationsResponse\n  ) {\n    const notifications = notificationsResponse.notifications;\n\n    notifications.forEach((notification) => {\n      this._removeOldIfExists(notification);\n      if (notification.type == \"notification.point.new\") {\n        // ...\n      }\n    });\n\n    notifications.forEach((notification) => {\n      this.notifications?.unshift(notification);\n    });\n\n    this._finalizeAfterResponse(notifications);\n\n    this._startTimer();\n\n    this._displayToast(notifications);\n    this._sendReloadPointsEvents(notifications);\n\n    if (this.opened) {\n      this._markAsViewed(notifications);\n    }\n\n    this._handleUnViewedCount(notificationsResponse.unViewedCount);\n\n    //TODO: See if we need to do this\n    //this.$$(\"#list\").fire(\"iron-resize\");\n\n    if (this.lastFetchStartedAt) {\n      const duration = Date.now() - this.lastFetchStartedAt;\n      if (duration > 1000) {\n        console.warn(\"Setting notificationGetTTL = 60000\");\n        this.notificationGetTTL = 60000;\n      } else if (duration > 10000) {\n        console.warn(\"Setting notificationGetTTL = 60000*5\");\n        this.notificationGetTTL = 60000 * 5;\n      }\n    }\n  }\n\n  _removeOldIfExists(notification: AcNotificationData) {\n    this.notifications!.forEach((oldNotification, index) => {\n      if (oldNotification.id == notification.id) {\n        this.notifications?.splice(index, 1);\n      }\n    });\n  }\n\n  _getNotificationText(notification: AcNotificationData) {\n    let ideaName, object;\n    if (notification.AcActivities[0].Post) {\n      ideaName =\n        YpFormattingHelpers.truncate(\n          notification.AcActivities[0].Post.name,\n          30\n        ) + \": \";\n    }\n    if (notification.AcActivities[0].object) {\n      object = notification.AcActivities[0].object;\n    }\n    if (notification.type === \"notification.post.new\") {\n      return ideaName + this.t(\"post.new\");\n    } else if (notification.type === \"notification.post.endorsement\") {\n      if (\n        notification.AcActivities[0].type === \"activity.post.endorsement.new\"\n      ) {\n        return ideaName + this.t(\"endorsedYourPost\");\n      } else {\n        return ideaName + this.t(\"opposedYourPost\");\n      }\n    } else if (notification.type === \"notification.point.new\") {\n      if (notification.AcActivities[0].Point!.value > 0) {\n        return ideaName + this.t(\"point.forAdded\");\n      } else {\n        return ideaName + this.t(\"point.againstAdded\");\n      }\n    } else if (notification.type === \"notification.point.quality\") {\n      if (notification.AcActivities[0].type === \"activity.point.helpful.new\") {\n        return ideaName + this.t(\"upVotedPoint\");\n      } else {\n        return ideaName + this.t(\"downVotedPoint\");\n      }\n    } else if (\n      notification.type == \"notification.generalUserNotification\" &&\n      object\n    ) {\n      return this.t(object.type) + \" \" + object.name;\n    } else {\n      return \"\";\n    }\n  }\n\n  _displayToast(notifications: Array<AcNotificationData>) {\n    const notMyNotifications = notifications.filter((notification) => {\n      const activityUser = notification.AcActivities[0].User;\n      return (\n        window.appUser.user &&\n        activityUser &&\n        window.appUser.user.id != activityUser.id &&\n        notification.type !== \"notification.generalUserNotification\"\n      );\n    });\n\n    if (notMyNotifications && notMyNotifications.length > 0) {\n      const activityUser = notMyNotifications[0].AcActivities[0].User;\n      window.appDialogs.getDialogAsync(\n        \"notificationToast\",\n        (dialog: AcNotificationToast) => {\n          dialog.openDialog(\n            activityUser,\n            this._getNotificationText(notMyNotifications[0]) || \"\",\n            notMyNotifications[0].type ===\n              \"notification.generalUserNotification\"\n          );\n        }\n      );\n    }\n  }\n\n  _finalizeAfterResponse(notifications: Array<AcNotificationData>) {\n    if (notifications.length > 0) {\n      if (\n        !this.latestProcessedNotificationAt ||\n        this.latestProcessedNotificationAt < notifications[0].updated_at\n      ) {\n        this.latestProcessedNotificationAt = notifications[0].updated_at;\n      }\n      this.moreToLoad = true;\n    }\n\n    setTimeout(() => {\n      //TODO: See if needed\n      if (this.$$(\"#list\")) {\n        //this.$$(\"#list\").fire('iron-resize');\n      }\n    }, 100);\n  }\n\n  async _loadMoreData() {\n    this._clearScrollThreshold();\n    if (this.oldestProcessedNotificationAt) {\n      this.moreToLoad = false;\n      this._processNotifications(\n        await this._getNotifications({\n          oldestProcessedNotificationAt: this.oldestProcessedNotificationAt,\n        })\n      );\n    }\n  }\n\n  async loadNewData() {\n    if (this.latestProcessedNotificationAt) {\n      this._loadNewNotificationsResponse(\n        await this._getNotifications({\n          latestProcessedNotificationAt: this.latestProcessedNotificationAt,\n        })\n      );\n    } else if (!this.latestProcessedNotificationAt) {\n      this._loadNewNotificationsResponse(await this._getNotifications());\n    }\n  }\n}\n"]}