{"version":3,"file":"yp-emoji-dialog.js","sourceRoot":"","sources":["../../src/common/yp-emoji-dialog.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAChC,OAAO,EAAE,QAAQ,EAAS,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAEnE,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AACrD,yDAAyD;AACzD,6CAA6C;AAC7C,OAAO,sBAAsB,CAAC;AAE9B,OAAO,gCAAgC,CAAC;AAIjC,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,aAAa;IAMrC,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;IAC5B,CAAC;IAEQ,oBAAoB;QAC3B,KAAK,CAAC,oBAAoB,EAAE,CAAC;IAC/B,CAAC;IAED,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,GAAG,CAAA;;;;;OAKF;SACF,CAAC;IACJ,CAAC;IAED,WAAW;QACR,IAAI,CAAC,EAAE,CAAC,cAAc,CAAc,CAAC,IAAI,GAAG,KAAK,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC7B,CAAC;IAED,IAAI,CAAC,OAAoB,EAAE,WAA6B;QACtD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACpB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAc,CAAC,IAAI,GAAG,IAAI,CAAC;QACpD,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;IAED,UAAU,CAAC,CAAc;QACvB,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7B,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;QAChC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;YAC9C,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;YAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,KAAK;gBACpB,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAChC,KAAK,GAAG,SAAS,CAAC,MAAM,EACxB,KAAK,GAAG,SAAS,CAAC,MAAM,CACzB,CAAC;QACJ,CAAC;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEkB,MAAM;QACvB,OAAO,IAAI,CAAA;6CAC8B,IAAI,CAAC,WAAW;;;;4BAIjC,IAAI,CAAC,UAAU;;;;oCAIP,IAAI,CAAC,WAAW;eACrC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;;;;KAIzB,CAAC;IACJ,CAAC;CACF,CAAA;AAzEC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;kDACe;AAF/B,aAAa;IADzB,aAAa,CAAC,iBAAiB,CAAC;GACpB,aAAa,CA2EzB","sourcesContent":["import { css, html } from \"lit\";\nimport { property, query, customElement } from \"lit/decorators.js\";\n\nimport { YpBaseElement } from \"./yp-base-element.js\";\n//import insertTextAtCursor from 'insert-text-at-cursor';\n//TODO: See if we need to load this one lader\nimport \"emoji-picker-element\";\n\nimport \"@material/web/dialog/dialog.js\";\nimport { MdDialog } from \"@material/web/dialog/dialog.js\";\n\n@customElement(\"yp-emoji-dialog\")\nexport class YpEmojiDialog extends YpBaseElement {\n  @property({ type: Object })\n  inputTarget: HTMLInputElement | undefined;\n\n  trigger: HTMLElement | undefined;\n\n  override connectedCallback() {\n    super.connectedCallback();\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n  }\n\n  static override get styles() {\n    return [\n      css`\n        emoji-picker {\n          --background: var(--md-sys-color-lowest-surface);\n          --border-color: var(--md-sys-color-lowest-surface);\n        }\n      `,\n    ];\n  }\n\n  closeDialog() {\n    (this.$$(\"#emojiDialog\") as MdDialog).open = false;\n    this.fire(\"dialog-closed\");\n  }\n\n  open(trigger: HTMLElement, inputTarget: HTMLInputElement) {\n    this.trigger = trigger;\n    this.inputTarget = inputTarget;\n    if (this.inputTarget) {\n      (this.$$(\"#emojiDialog\") as MdDialog).open = true;\n    } else {\n      console.error(\"No input target for emoji dialog\");\n    }\n  }\n\n  emojiClick(e: CustomEvent) {\n    const emoji = e.detail.emoji;\n    const emojiText = emoji.unicode;\n    if (this.inputTarget) {\n      const start = this.inputTarget.selectionStart;\n      const end = this.inputTarget.selectionEnd;\n      const text = this.inputTarget.value;\n      this.inputTarget.value =\n        text.substring(0, start || 0) + emojiText + text.substring(end || 0);\n      this.inputTarget.focus();\n      this.inputTarget.setSelectionRange(\n        start + emojiText.length,\n        start + emojiText.length\n      );\n    }\n    this.closeDialog();\n  }\n\n  protected override render(): unknown {\n    return html`\n      <md-dialog id=\"emojiDialog\" @closed=\"${this.closeDialog}\">\n        <div slot=\"content\">\n          <emoji-picker\n            id=\"emojiPicker\"\n            @emoji-click=\"${this.emojiClick}\"\n          ></emoji-picker>\n        </div>\n        <div slot=\"actions\">\n          <md-text-button @click=\"${this.closeDialog}\"\n            >${this.t(\"close\")}</md-text-button\n          >\n        </div>\n      </md-dialog>\n    `;\n  }\n}\n"]}