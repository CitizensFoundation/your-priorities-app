{"version":3,"file":"yp-emoji-dialog.js","sourceRoot":"","sources":["../../src/common/yp-emoji-dialog.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html } from 'lit';\nimport { property, query, customElement } from 'lit/decorators.js';\nimport { createPicker, EmojiPicker, EmojiSelection } from 'picmo';\nimport { createPopup, PopupPickerController } from '@picmo/popup-picker';\nimport { TwemojiRenderer } from '@picmo/renderer-twemoji';\nimport { YpBaseElement } from './yp-base-element.js';\n//import insertTextAtCursor from 'insert-text-at-cursor';\n\n//TODO: Load this one later emoji-button is 256KB!\n@customElement('yp-emoji-dialog')\nexport class YpEmojiDialog extends YpBaseElement {\n  @property({ type: Object })\n  inputTarget: HTMLInputElement | undefined;\n\n  picker: PopupPickerController | undefined;\n  trigger: HTMLElement | undefined;\n\n  override connectedCallback() {\n    super.connectedCallback();\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removePicker();\n    this.trigger = undefined;\n  }\n\n  createPicker() {\n    this.picker = createPopup(\n      {\n        i18n: this.i18nStrings,\n        renderer: new TwemojiRenderer(),\n      },\n      {\n        referenceElement: this.trigger,\n        position: 'bottom-start',\n      }\n    );\n\n    this.picker.addEventListener('emoji:select', this.pickEmoji.bind(this));\n    setTimeout(() => {\n      this.picker?.open();\n    })\n  }\n\n  removePicker() {\n    this.picker?.removeEventListener('emoji:select', this.pickEmoji.bind(this));\n    this.picker?.destroy();\n    this.picker = undefined;\n  }\n\n  static override get styles() {\n    return [\n      css`[hidden] { display: none !important; }`\n    ]\n  }\n\n  pickEmoji(selection: EmojiSelection) {\n    if (this.inputTarget) {\n      //TODO: Get this or something like it working\n      //insertTextAtCursor(this.inputTarget, selection.emoji as string);\n      let value = '';\n      if (this.inputTarget.value) value = this.inputTarget.value;\n      this.inputTarget.value = `${value}${selection.emoji}`;\n      setTimeout(() => {\n        this.inputTarget!.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n          behavior: 'smooth',\n        });\n        //TODO: Scroll to the right place in the input box\n        this.inputTarget!.focus();\n        this.inputTarget!.dispatchEvent(new CustomEvent('change'));\n        this.inputTarget = undefined;\n        this.trigger = undefined;\n        this.removePicker();\n      });\n    } else {\n      console.error('No input target for emojis');\n    }\n  }\n\n  open(trigger: HTMLElement, inputTarget: HTMLInputElement) {\n    this.trigger = trigger;\n    this.inputTarget = inputTarget;\n    this.createPicker();\n  }\n\n  get i18nStrings() {\n    //TODO: Finish localizing this\n    return {\n      'categories.activities': 'Activities',\n      'categories.animals-nature': 'Animals & Nature',\n      'categories.custom': 'Custom',\n      'categories.flags': 'Flags',\n      'categories.food-drink': 'Food & Drink',\n      'categories.objects': 'Objects',\n      'categories.people-body': 'People & Body',\n      'categories.recents': 'Recently Used',\n      'categories.smileys-emotion': 'Smileys & Emotion',\n      'categories.symbols': 'Symbols',\n      'categories.travel-places': 'Travel & Places',\n\n      // Shown if there is an error creating or accessing the local emoji database.\n      'error.load': 'Failed to load emojis',\n\n      // Messages for the Recents category.\n      'recents.clear': 'Clear recent emojis',\n      'recents.none': \"You haven't selected any emojis yet.\",\n\n      // A retry button shown on the error view.\n      retry: 'Try again',\n\n      // Tooltip/title for the clear search button in the search field.\n      'search.clear': 'Clear search',\n\n      // Shown when there is an error searching the emoji database.\n      'search.error': 'Failed to search emojis',\n\n      // Shown when no emojis match the search query.\n      'search.notFound': 'No results found',\n\n      // Placeholder for the search field.\n      search: 'Search emojis...',\n    };\n  }\n}\n"]}