{"version":3,"file":"YpServerApiBase.js","sourceRoot":"","sources":["../../src/common/YpServerApiBase.ts"],"names":[],"mappings":"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","sourcesContent":["import { YpCodeBase } from \"./YpCodeBaseclass.js\";\n\nexport class YpServerApiBase extends YpCodeBase {\n  protected baseUrlPath = \"/api\";\n\n  static transformCollectionTypeToApi(type: string): string {\n    let transformedApiType;\n\n    switch (type) {\n      case \"domain\":\n        transformedApiType = \"domains\";\n        break;\n      case \"community\":\n        transformedApiType = \"communities\";\n        break;\n      case \"group\":\n        transformedApiType = \"groups\";\n        break;\n      case \"post\":\n        transformedApiType = \"posts\";\n        break;\n      case \"user\":\n        transformedApiType = \"users\";\n        break;\n      default:\n        transformedApiType = \"\";\n        console.error(`Cant find collection type transform for ${type}`);\n    }\n\n    return transformedApiType;\n  }\n\n  protected async fetchWrapper(\n    url: string,\n    options: RequestInit = {},\n    showUserError = true,\n    errorId: string | undefined = undefined,\n    throwError: boolean = false\n  ) {\n    if (!options.headers) {\n      options.headers = {\n        \"Content-Type\": \"application/json\",\n      };\n    }\n    if (\n      !navigator.onLine &&\n      options.method === \"POST\" &&\n      window.fetch !== undefined\n    ) {\n      window.appGlobals.offline.sendWhenOnlineNext({\n        body: options.body,\n        method: options.method,\n        params: {},\n        url: url,\n      });\n      throw new Error(\"offlineSendLater\");\n    } else if (\n      !navigator.onLine &&\n      [\"POST\", \"PUT\", \"DELETE\"].indexOf(options.method!) > -1\n    ) {\n      this.showToast(this.t(\"youAreOfflineCantSend\"));\n      throw new Error(\"offlineSendLater\");\n    } else {\n      const response = await fetch(url, options);\n      return await this.handleResponse(\n        response,\n        showUserError,\n        errorId,\n        throwError\n      );\n    }\n  }\n\n  //TODO: Handle 401\n  /*\n\n  _error: function (event) {\n        this._setActive(false);\n        if (!navigator.onLine) {\n          this._showToast(this.t('youAreOffline'));\n          event.stopPropagation();\n        } else {\n          if (this.dispatchError) {\n            event.stopPropagation();\n            if (event.detail.request.xhr.response && event.detail.request.xhr.response.error) {\n              this.fire(\"error\", event.detail.request.xhr.response.error);\n            } else if (event.detail.request.xhr.response && event.detail.request.xhr.response.message) {\n              this.fire(\"error\", event.detail.request.xhr.response.message);\n            } else if (event.detail.request.xhr.statusText) {\n              this.fire(\"error\", event.detail.request.xhr.statusText);\n            } else {\n              this.fire(\"error\", event.detail.error);\n            }\n          } else if (event.detail.error && event.detail.error.message &&\n            this._is401(event.detail.error.message) && !window.appUser.user &&\n            this.retryMethodAfter401Login) {\n            window.appUser.loginFor401(this.retryMethodAfter401Login);\n          } else if (this.useDialog && !this.disableUserError) {\n            this.showErrorDialog(event.detail.error);\n          }\n        }\n      },\n\n  */\n  protected async handleResponse(\n    response: Response,\n    showUserError: boolean,\n    errorId: string | undefined = undefined,\n    throwError = false\n  ) {\n    if (response.ok) {\n      let responseJson = null;\n      try {\n        responseJson = await response.json();\n      } catch (error) {\n        if (response.status === 200 || response.statusText === \"OK\") {\n          // Do nothing\n        } else {\n          this.fireGlobal(\"yp-network-error\", {\n            response: response,\n            jsonError: error,\n            showUserError,\n            errorId,\n          });\n\n          if (throwError) {\n            throw error;\n          }\n        }\n      }\n      if (responseJson !== null) {\n        return responseJson;\n      } else {\n        return true;\n      }\n    } else {\n      this.fireGlobal(\"yp-network-error\", {\n        response: response,\n        showUserError,\n        errorId,\n      });\n\n      if (throwError) {\n        throw response.statusText;\n      }\n      return null;\n    }\n  }\n}\n"]}