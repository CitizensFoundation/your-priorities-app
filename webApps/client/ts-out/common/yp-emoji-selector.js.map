{"version":3,"file":"yp-emoji-selector.js","sourceRoot":"","sources":["../../src/common/yp-emoji-selector.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AACrD,yDAAyD;AAEzD,OAAO,yCAAyC,CAAC;AACjD,OAAO,sBAAsB,CAAC;AAE9B,kDAAkD;AAE3C,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,aAAa;IAA3C;;QAKL,SAAI,GAAY,KAAK,CAAC;IA0BxB,CAAC;IAxBU,MAAM;QACb,OAAO,IAAI,CAAA;;kBAEG,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC;;kBAElB,IAAI,CAAC,YAAY;;;QAG3B,IAAI,CAAC,IAAI;YACT,CAAC,CAAC,IAAI,CAAA;8BACgB,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;4BAC3B,IAAI,CAAC,WAAW;8BACd;YACtB,CAAC,CAAC,IAAI,CAAA,EAAE;KACX,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,MAAM,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,CAAgB,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,MAAM,IAAI,CAAC,cAAc,CAAC;QAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAQ,CAAC;QACtD,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAY,CAAC,CAAC;IAC/C,CAAC;CACF,CAAA;AA7BC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;oDACe;AAG1C;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;6CACN;AALX,eAAe;IAD3B,aAAa,CAAC,mBAAmB,CAAC;GACtB,eAAe,CA+B3B","sourcesContent":["import { html } from \"lit\";\nimport { property, customElement } from \"lit/decorators.js\";\nimport { YpBaseElement } from \"./yp-base-element.js\";\n//import insertTextAtCursor from 'insert-text-at-cursor';\n\nimport \"@material/web/iconbutton/icon-button.js\";\nimport \"./yp-emoji-dialog.js\";\n\n//TODO: Load this one later emoji-button is 256KB!\n@customElement(\"yp-emoji-selector\")\nexport class YpEmojiSelector extends YpBaseElement {\n  @property({ type: Object })\n  inputTarget: HTMLInputElement | undefined;\n\n  @property({ type: Boolean })\n  open: boolean = false;\n\n  override render() {\n    return html`\n      <md-icon-button\n        .label=\"${this.t(\"addEmoji\")}\"\n        id=\"trigger\"\n        @click=\"${this.togglePicker}\"\n        ><md-icon>sentiment_satisfied_alt</md-icon></md-icon-button\n      >\n      ${this.open\n        ? html`<yp-emoji-dialog\n            @dialog-closed=\"${() => (this.open = false)}\"\n            .inputTarget=\"${this.inputTarget}\"\n          ></yp-emoji-dialog>`\n        : html``}\n    `;\n  }\n\n  async togglePicker() {\n    const trigger = this.$$(\"#trigger\") as HTMLElement;\n    this.open = true;\n    await this.updateComplete;\n    const emojiDialog = this.$$(\"yp-emoji-dialog\") as any;\n    emojiDialog.open(trigger, this.inputTarget!);\n  }\n}\n"]}