{"version":3,"file":"iso6391.js","sourceRoot":"","sources":["../../../src/common/languages/iso6391.ts"],"names":[],"mappings":"AAAA,+GAA+G;AAC/G,OAAO,EAAC,cAAc,EAAC,MAAM,mBAAmB,CAAC;AAQjD,MAAM,SAAS,GAA6B,EAAE,CAAC;AAC/C,MAAM,iBAAiB,GAA6B,EAAE,CAAC;AACvD,MAAM,cAAc,GAAa,EAAE,CAAC;AACpC,MAAM,cAAc,GAAa,EAAE,CAAC;AACpC,MAAM,qBAAqB,GAAa,EAAE,CAAC;AAE3C,KAAK,MAAM,IAAI,IAAI,cAAc,EAAE,CAAC;IAClC,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;IAClD,MAAM,QAAQ,GAAa,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;IACtD,SAAS,CAAC,IAAI,CAAC,GAAG,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,iBAAiB,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,QAAQ,CAAC;IACjH,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACzC,CAAC;AAED,MAAM,OAAO,OAAO;IAClB,MAAM,CAAC,YAAY,CAAC,QAAkB,EAAE;QACtC,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CACtB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;YACpB,CAAC,CAAC,EAAE,GAAG,SAAS,CAAC,IAAI,CAAC,EAAE;YACxB,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,CACvC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,IAAY;QACzB,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IACjE,CAAC;IAED,MAAM,CAAC,WAAW;QAChB,OAAO,CAAC,GAAG,cAAc,CAAC,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,IAAY;QAC/B,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;IACvE,CAAC;IAED,MAAM,CAAC,iBAAiB;QACtB,OAAO,CAAC,GAAG,qBAAqB,CAAC,CAAC;IACpC,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,IAAY;QACzB,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1B,OAAO,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC;YAC3C,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI;YAC9B,CAAC,CAAC,EAAE,CAAC;IACT,CAAC;IAED,MAAM,CAAC,WAAW;QAChB,OAAO,CAAC,GAAG,cAAc,CAAC,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC1B,OAAO,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;CACF","sourcesContent":["// Assuming data.js exports a record with language codes as keys and objects with name and nativeName as values\nimport {LANGUAGES_LIST} from './languageData.js';\n\ninterface Language {\n  code: string;\n  name: string;\n  nativeName: string;\n}\n\nconst LANGUAGES: Record<string, Language> = {};\nconst LANGUAGES_BY_NAME: Record<string, Language> = {};\nconst LANGUAGE_CODES: string[] = [];\nconst LANGUAGE_NAMES: string[] = [];\nconst LANGUAGE_NATIVE_NAMES: string[] = [];\n\nfor (const code in LANGUAGES_LIST) {\n  const { name, nativeName } = LANGUAGES_LIST[code];\n  const language: Language = { code, name, nativeName };\n  LANGUAGES[code] = LANGUAGES_BY_NAME[name.toLowerCase()] = LANGUAGES_BY_NAME[nativeName.toLowerCase()] = language;\n  LANGUAGE_CODES.push(code);\n  LANGUAGE_NAMES.push(name);\n  LANGUAGE_NATIVE_NAMES.push(nativeName);\n}\n\nexport class ISO6391 {\n  static getLanguages(codes: string[] = []): Language[] {\n    return codes.map(code =>\n      ISO6391.validate(code)\n        ? { ...LANGUAGES[code] }\n        : { code, name: '', nativeName: '' }\n    );\n  }\n\n  static getName(code: string): string {\n    return ISO6391.validate(code) ? LANGUAGES_LIST[code].name : '';\n  }\n\n  static getAllNames(): string[] {\n    return [...LANGUAGE_NAMES];\n  }\n\n  static getNativeName(code: string): string {\n    return ISO6391.validate(code) ? LANGUAGES_LIST[code].nativeName : '';\n  }\n\n  static getAllNativeNames(): string[] {\n    return [...LANGUAGE_NATIVE_NAMES];\n  }\n\n  static getCode(name: string): string {\n    name = name.toLowerCase();\n    return LANGUAGES_BY_NAME.hasOwnProperty(name)\n      ? LANGUAGES_BY_NAME[name].code\n      : '';\n  }\n\n  static getAllCodes(): string[] {\n    return [...LANGUAGE_CODES];\n  }\n\n  static validate(code: string): boolean {\n    return LANGUAGES_LIST.hasOwnProperty(code);\n  }\n}\n"]}