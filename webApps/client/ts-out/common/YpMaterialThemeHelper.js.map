{"version":3,"file":"YpMaterialThemeHelper.js","sourceRoot":"","sources":["../../src/common/YpMaterialThemeHelper.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {\n  MaterialDynamicColors,\n  argbFromHex,\n  hexFromArgb,\n  Hct,\n  SchemeTonalSpot,\n  DynamicColor,\n  DynamicScheme,\n  SchemeFidelity,\n  SchemeVibrant,\n  SchemeExpressive,\n  SchemeNeutral,\n  SchemeMonochrome,\n  SchemeContent,\n  Scheme as MatScheme,\n  TonalPalette,\n} from '@material/material-color-utilities';\n\nfunction generateMaterialColors(scheme: DynamicScheme): {\n  [key: string]: DynamicColor;\n} {\n  return {\n    'highest-surface': MaterialDynamicColors.highestSurface(scheme),\n    background: MaterialDynamicColors.background,\n    'on-background': MaterialDynamicColors.onBackground,\n    surface: MaterialDynamicColors.surface,\n    'surface-dim': MaterialDynamicColors.surfaceDim,\n    'surface-bright': MaterialDynamicColors.surfaceBright,\n    'surface-container-lowest': MaterialDynamicColors.surfaceContainerLowest,\n    'surface-container-low': MaterialDynamicColors.surfaceContainerLow,\n    'surface-container': MaterialDynamicColors.surfaceContainer,\n    'surface-container-high': MaterialDynamicColors.surfaceContainerHigh,\n    'surface-container-highest': MaterialDynamicColors.surfaceContainerHighest,\n    'on-surface': MaterialDynamicColors.onSurface,\n    'surface-variant': MaterialDynamicColors.surfaceVariant,\n    'on-surface-variant': MaterialDynamicColors.onSurfaceVariant,\n    'inverse-surface': MaterialDynamicColors.inverseSurface,\n    'inverse-on-surface': MaterialDynamicColors.inverseOnSurface,\n    outline: MaterialDynamicColors.outline,\n    'outline-variant': MaterialDynamicColors.outlineVariant,\n    shadow: MaterialDynamicColors.shadow,\n    scrim: MaterialDynamicColors.scrim,\n    'surface-tint': MaterialDynamicColors.surfaceTint,\n    primary: MaterialDynamicColors.primary,\n    'on-primary': MaterialDynamicColors.onPrimary,\n    'primary-container': MaterialDynamicColors.primaryContainer,\n    'on-primary-container': MaterialDynamicColors.onPrimaryContainer,\n    'inverse-primary': MaterialDynamicColors.inversePrimary,\n    'inverse-on-primary': MaterialDynamicColors.primary,\n    secondary: MaterialDynamicColors.secondary,\n    'on-secondary': MaterialDynamicColors.onSecondary,\n    'secondary-container': MaterialDynamicColors.secondaryContainer,\n    'on-secondary-container': MaterialDynamicColors.onSecondaryContainer,\n    tertiary: MaterialDynamicColors.tertiary,\n    'on-tertiary': MaterialDynamicColors.onTertiary,\n    'tertiary-container': MaterialDynamicColors.tertiaryContainer,\n    'on-tertiary-container': MaterialDynamicColors.onTertiaryContainer,\n    error: MaterialDynamicColors.error,\n    'on-error': MaterialDynamicColors.onError,\n    'error-container': MaterialDynamicColors.errorContainer,\n    'on-error-container': MaterialDynamicColors.onErrorContainer,\n  };\n}\n\n/**\n * Convert a hex value to a hct truple\n */\nexport function hctFromHex(value: string) {\n  const hct = Hct.fromInt(argbFromHex(value));\n  return hct;\n}\n\n/**\n * Convert a hct truple to a hex value\n */\nexport function hexFromHct(hue: number, chroma: number, tone: number) {\n  const hct = Hct.from(hue, chroma, tone);\n  const value = hct.toInt();\n  return hexFromArgb(value);\n}\n\n/*\nexport declare enum Variant {\n    MONOCHROME = 0,\n    NEUTRAL = 1,\n    TONAL_SPOT = 2,\n    VIBRANT = 3,\n    EXPRESSIVE = 4,\n    FIDELITY = 5,\n    CONTENT = 6,\n    RAINBOW = 7,\n    FRUIT_SALAD = 8\n}\n\ninterface DynamicSchemeOptions {\n    sourceColorArgb: number;\n    variant: Variant;\n    contrastLevel: number;\n    isDark: boolean;\n    primaryPalette: TonalPalette;\n    secondaryPalette: TonalPalette;\n    tertiaryPalette: TonalPalette;\n    neutralPalette: TonalPalette;\n    neutralVariantPalette: TonalPalette;\n}\n\n*/\n\nconst variantIndexMap = {\n  \"monochrome\": 0,\n  \"neutral\": 1,\n  \"tonalSpot\": 2,\n  \"vibrant\": 3,\n  \"expressive\": 4,\n  \"fidelity\": 5,\n  \"content\": 6,\n  \"rainbow\": 7,\n  \"fruitSalad\": 8\n};\n\nexport function themeFromSourceColorWithContrast(\n    color: string|{primary: string, secondary: string, tertiary: string, neutral: string, neutralVariant: string},\n    variant: MaterialDynamicVariants | undefined,\n    isDark: boolean,\n    scheme: MaterialColorScheme,\n    contrast: number\n) {\n  if (typeof color !== 'string' && scheme !== 'dynamic' || typeof color !== 'object' && scheme === 'dynamic') {\n    throw new Error('color / scheme type mismatch');\n  }\n  /* import and use other schemas from m-c-u for the scheme you want, but this is the \"default\"\n     https://github.com/material-foundation/material-color-utilities/tree/main/typescript/scheme\n   */\n  let colorScheme: MatScheme;\n  let variantIndex;\n  if (variant) {\n    variantIndex = variantIndexMap[variant!];\n  }\n  if (scheme === 'tonal') {\n    //@ts-ignore\n    colorScheme = new SchemeTonalSpot(\n      //@ts-ignore\n      Hct.fromInt(argbFromHex(color)),\n      isDark,\n      contrast\n    );\n  }\n  else if (scheme === 'fidelity') {\n    //@ts-ignore\n    colorScheme = new SchemeFidelity(\n      //@ts-ignore\n      Hct.fromInt(argbFromHex(color)),\n      isDark,\n      contrast\n    );\n  } else if (scheme === 'vibrant') {\n    //@ts-ignore\n    colorScheme = new SchemeVibrant(\n      //@ts-ignore\n      Hct.fromInt(argbFromHex(color)),\n      isDark,\n      contrast\n    );\n  } else if (scheme === 'expressive') {\n    //@ts-ignore\n    colorScheme = new SchemeExpressive(\n      //@ts-ignore\n      Hct.fromInt(argbFromHex(color)),\n      isDark,\n      contrast\n    );\n  } else if (scheme === 'content') {\n    //@ts-ignore\n    colorScheme = new SchemeContent(\n      //@ts-ignore\n      Hct.fromInt(argbFromHex(color)),\n      isDark,\n      contrast\n    );\n  } else if (scheme === 'neutral') {\n    //@ts-ignore\n    colorScheme = new SchemeNeutral(\n      //@ts-ignore\n      Hct.fromInt(argbFromHex(color)),\n      isDark,\n      contrast\n    );\n  } else if (scheme === 'monochrome') {\n    //@ts-ignore\n    colorScheme = new SchemeMonochrome(\n      //@ts-ignore\n      Hct.fromInt(argbFromHex(color)),\n      isDark,\n      contrast\n    );\n  } else if (scheme === 'dynamic' && typeof color === 'object') {\n    console.log(color);\n    const primary = Hct.fromInt(argbFromHex(color.primary));\n    const secondary = Hct.fromInt(argbFromHex(color.secondary));\n    const tertiary = Hct.fromInt(argbFromHex(color.tertiary));\n    const neutral = Hct.fromInt(argbFromHex(color.neutral));\n    const neutralVariant = Hct.fromInt(argbFromHex(color.neutralVariant));\n    console.log(color.primary);\n    //@ts-ignore\n    colorScheme = new DynamicScheme({\n      sourceColorArgb: argbFromHex(color.primary),\n      variant: variantIndex===undefined ? 5 : variantIndex, // Variant.FIDELITY https://github.com/material-foundation/material-color-utilities/blob/main/typescript/scheme/variant.ts\n      contrastLevel: contrast,\n      isDark,\n      primaryPalette: TonalPalette.fromHueAndChroma(\n          primary.hue, primary.chroma),\n      secondaryPalette: TonalPalette.fromHueAndChroma(\n          secondary.hue, secondary.chroma),\n      tertiaryPalette: TonalPalette.fromHueAndChroma(\n          tertiary.hue, tertiary.chroma),\n      neutralPalette: TonalPalette.fromHueAndChroma(\n          neutral.hue, neutral.chroma),\n      neutralVariantPalette: TonalPalette.fromHueAndChroma(\n        neutralVariant.hue, neutralVariant.chroma),\n    });\n  }\n\n  return themeFromScheme(colorScheme!);\n}\n\nexport function themeFromScheme(colorScheme: MatScheme) {\n  //@ts-ignore\n  const colors = generateMaterialColors(colorScheme);\n  const theme: { [key: string]: string } = {};\n\n  for (const [key, value] of Object.entries(colors)) {\n    //@ts-ignore\n    theme[key] = hexFromArgb(value.getArgb(colorScheme));\n  }\n\n  return theme;\n}\n\nexport function applyThemeWithContrast(\n  doc: DocumentOrShadowRoot,\n  theme: {[name: string]: string},\n  ssName = 'material-theme'\n) {\n  let styleString = ':root{';\n  for (const [key, value] of Object.entries(theme)) {\n    styleString += `--md-sys-color-${key}:${value};`;\n  }\n  styleString += '}';\n\n  applyThemeString(doc, styleString, ssName);\n}\n\nexport function applyThemeString(doc: DocumentOrShadowRoot, themeString: string, ssName: string) {\n  try {\n    // The replace method is part of CSSStyleSheet, so if it's callable, CSSStyleSheet should be constructible.\n    const isCSSSheetConstructible = new CSSStyleSheet().replace instanceof Function;\n\n    if (isCSSSheetConstructible) {\n      // Cast window to any to bypass TypeScript's strict typing\n      let ss = (window as any)[ssName] as CSSStyleSheet | undefined;\n\n      if (!ss) {\n        ss = new CSSStyleSheet();\n        // Again, cast to bypass TypeScript's strict typing\n        (doc as Document).adoptedStyleSheets = [...(doc as Document).adoptedStyleSheets, ss];\n        (window as any)[ssName] = ss;\n      }\n\n      ss.replace(themeString).catch(console.error);\n    }\n  } catch (error) {\n    // Fallback to using a style element\n    if (doc instanceof Document && doc.head) {\n      let style = doc.createElement('style');\n      style.setAttribute('id', ssName);\n      style.textContent = themeString;\n      doc.head.appendChild(style);\n    } else {\n      console.error('The provided document does not have a head element.', error);\n    }\n  }\n}"]}