{"version":3,"file":"yp-streaming-llm-base.js","sourceRoot":"","sources":["../../src/yp-chatbots/yp-streaming-llm-base.ts"],"names":[],"mappings":"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","sourcesContent":["import { property } from \"lit/decorators.js\";\nimport { YpBaseElement } from \"../common/yp-base-element.js\";\n\nexport abstract class YpStreamingLlmBase extends YpBaseElement {\n  @property({ type: Array })\n  chatLog: YpAssistantMessage[] = [];\n\n  @property({ type: String })\n  wsClientId!: string;\n\n  @property({ type: Number })\n  webSocketsErrorCount = 0;\n\n  @property({ type: String })\n  wsEndpoint!: string;\n\n  @property({ type: String })\n  scrollElementSelector = \"#chat-messages\";\n\n  @property({ type: Boolean })\n  useMainWindowScroll = false;\n\n  @property({ type: Boolean })\n  userScrolled = false;\n\n  @property({ type: String })\n  currentFollowUpQuestions: string = \"\";\n\n  @property({ type: Boolean })\n  programmaticScroll = false;\n\n  @property({ type: Boolean })\n  disableAutoScroll = false;\n\n  @property({ type: Number })\n  scrollStart: number = 0;\n\n  @property({ type: String })\n  serverMemoryId: string | undefined;\n\n  @property({ type: Number })\n  defaultDevWsPort = 4242;\n\n  ws!: WebSocket;\n\n  disableWebsockets = false;\n  wsManuallyClosed = false;\n\n  reconnectDelay = 1000;\n  reconnectionAttempts = 1;\n\n  reconnectTimer: number | undefined;\n\n  constructor() {\n    super();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    if (!this.disableWebsockets) {\n      this.initWebSockets();\n    }\n  }\n\n  private initWebSockets() {\n    let storedClientId = localStorage.getItem(\"ypWsClientId\") || \"\";\n\n    const protocol = window.location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n    const port = protocol === \"wss:\" ? 443 : this.defaultDevWsPort;\n    const endpoint = `${protocol}//${window.location.hostname}${\n      port ? \":\" + port : \"\"\n    }/${!storedClientId ? \"\" : \"?clientId=\" + storedClientId}`;\n\n    this.ws = new WebSocket(endpoint);\n    console.log(\"Attempting to connect to\", endpoint);\n\n    this.ws.onopen = () => {\n      console.log(\"WebSocket open\");\n    };\n\n    this.ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n\n      // If the server reaffirms/overrides our clientId, store it\n      if (data.clientId) {\n        console.log(\"Received clientId from server:\", data.clientId);\n        localStorage.setItem(\"ypWsClientId\", data.clientId);\n        storedClientId = data.clientId;\n      }\n\n      this.wsClientId = storedClientId;\n\n      this.onMessage(event);\n    };\n\n    this.ws.onclose = (ev) => {\n      console.warn(\"WebSocket closed:\", ev.reason);\n      this.scheduleReconnect();\n    };\n\n    this.ws.onerror = (err) => {\n      console.error(\"WebSocket error:\", err);\n      // Still close or schedule reconnect\n      this.scheduleReconnect();\n    };\n  }\n\n  private scheduleReconnect() {\n    if (this.reconnectTimer) window.clearTimeout(this.reconnectTimer);\n    this.reconnectTimer = window.setTimeout(() => {\n      console.log(\"Reconnecting...\");\n      this.initWebSockets();\n      // Possibly apply exponential backoff if you like:\n      this.reconnectDelay = Math.min(\n        this.reconnectDelay * this.reconnectionAttempts,\n        30000\n      );\n      this.reconnectionAttempts++;\n    }, this.reconnectDelay);\n  }\n\n  public sendMessage(action: string, payload: any) {\n    console.info(\"Sending message\");\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(\n        JSON.stringify({\n          clientId: this.wsClientId,\n          action,\n          payload,\n        })\n      );\n    } else {\n      console.error(\"WebSocket not open; cannot send message\");\n    }\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n\n    console.info(\n      \"Disconnected callback called, clearing heartbeat intervals and reconnect timer\"\n    );\n\n    if (this.reconnectTimer) clearTimeout(this.reconnectTimer);\n\n    if (this.ws) {\n      this.wsManuallyClosed = true;\n      this.ws.close();\n    }\n  }\n\n  async onMessage(event: MessageEvent) {\n    const data = JSON.parse(event.data);\n\n    // Then handle your normal \"assistant\"/\"user\" messages\n    switch (data.sender) {\n      case \"assistant\":\n        this.addChatBotElement(data);\n        break;\n      case \"user\":\n        this.addChatUserElement(data);\n        break;\n    }\n\n    // If it's not any of these streaming or heartbeat messages, scroll\n    if (\n      data.type !== \"stream_followup\" &&\n      data.type !== \"voice_input\" &&\n      data.type !== \"updated_workflow\" &&\n      data.type !== \"heartbeat_ack\" && // you already handled that\n      data.type !== \"hiddenContextMessage\"\n    ) {\n      this.scrollDown();\n    }\n  }\n\n  scrollDown() {\n    if (this.disableAutoScroll) {\n      return;\n    }\n\n    if (\n      !this.userScrolled &&\n      (this.$$(this.scrollElementSelector) || this.useMainWindowScroll)\n    ) {\n      this.programmaticScroll = true;\n      let element;\n      if (this.useMainWindowScroll) {\n        element = window.document.documentElement;\n      } else if (this.$$(this.scrollElementSelector)) {\n        element = this.$$(this.scrollElementSelector)!;\n      }\n\n      if (\n        element?.tagName === \"INPUT\" ||\n        element?.tagName === \"TEXTAREA\" ||\n        element?.tagName === \"MD-OUTLINED-TEXT-FIELD\"\n      ) {\n        // Move the cursor to the end of the text\n        (element as HTMLInputElement).selectionStart = (\n          element as HTMLInputElement\n        ).selectionEnd = (element as HTMLInputElement).value.length;\n        element.scrollTop = element.scrollHeight - 100;\n      } else {\n        // For non-text field elements, use scrollTop and scrollHeight to scroll\n        element!.scrollTop = element!.scrollHeight;\n      }\n\n      setTimeout(() => {\n        this.programmaticScroll = false;\n      }, 100);\n    } else {\n      console.error(\"User scrolled, not scrolling down\");\n    }\n  }\n\n  handleScroll() {\n    if (this.disableAutoScroll) {\n      return;\n    }\n\n    if (\n      this.programmaticScroll ||\n      (!this.$$(this.scrollElementSelector) && !this.useMainWindowScroll)\n    ) {\n      return;\n    }\n\n    let currentScrollTop = 0;\n    if (this.$$(this.scrollElementSelector)) {\n      currentScrollTop = this.$$(this.scrollElementSelector)!.scrollTop;\n    } else if (this.useMainWindowScroll) {\n      currentScrollTop = window.scrollY;\n    }\n\n    if (this.scrollStart === 0) {\n      // Initial scroll\n      this.scrollStart = currentScrollTop;\n    }\n\n    const threshold = 10;\n\n    let atBottom;\n\n    if (this.useMainWindowScroll) {\n      atBottom =\n        this.$$(this.scrollElementSelector)!.scrollHeight -\n          currentScrollTop -\n          this.$$(this.scrollElementSelector)!.clientHeight <=\n        threshold;\n    } else if (this.$$(this.scrollElementSelector)) {\n      atBottom =\n        document.documentElement.scrollHeight -\n          currentScrollTop -\n          window.innerHeight <=\n        threshold;\n    }\n\n    if (atBottom) {\n      this.userScrolled = false;\n      this.scrollStart = 0; // Reset scroll start\n    } else if (Math.abs(this.scrollStart - currentScrollTop) > threshold) {\n      this.userScrolled = true;\n      // Optionally reset scrollStart here if you want to continuously check for threshold scroll\n      // this.scrollStart = currentScrollTop;\n    }\n  }\n\n  addUserChatBotMessage(userMessage: string) {\n    this.addChatBotElement({\n      sender: \"user\",\n      type: \"start\",\n      message: userMessage,\n    });\n  }\n\n  addThinkingChatBotMessage() {\n    this.addChatBotElement({\n      sender: \"assistant\",\n      type: \"thinking\",\n      message: \"\",\n    });\n  }\n\n  abstract addChatBotElement(wsMessage: YpAssistantMessage): Promise<void>;\n\n  addChatUserElement(data: YpAssistantMessage) {\n    this.chatLog = [...this.chatLog, data];\n  }\n\n  get simplifiedChatLog() {\n    let chatLog = this.chatLog.filter(\n      (chatMessage) =>\n        chatMessage.type != \"thinking\" &&\n        chatMessage.type != \"noStreaming\" &&\n        chatMessage.sender != \"system\"\n    );\n    return chatLog.map((chatMessage) => {\n      return {\n        ...chatMessage,\n        message: chatMessage.rawMessage\n          ? chatMessage.rawMessage\n          : chatMessage.message,\n      };\n    }) as PsSimpleChatLog[];\n  }\n\n  reset() {\n    this.chatLog = [];\n    if (this.ws) {\n      this.ws.close();\n      this.initWebSockets();\n    }\n    this.serverMemoryId = undefined;\n    this.requestUpdate();\n  }\n}\n"]}