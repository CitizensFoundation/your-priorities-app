{"version":3,"file":"yp-streaming-llm-base.js","sourceRoot":"","sources":["../../src/yp-chatbots/yp-streaming-llm-base.ts"],"names":[],"mappings":"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","sourcesContent":["import { property } from \"lit/decorators.js\";\nimport { YpBaseElement } from \"../common/yp-base-element.js\";\n\nexport abstract class YpStreamingLlmBase extends YpBaseElement {\n  @property({ type: Array })\n  chatLog: YpAssistantMessage[] = [];\n\n  @property({ type: String })\n  wsClientId!: string;\n\n  @property({ type: Number })\n  webSocketsErrorCount = 0;\n\n  @property({ type: String })\n  wsEndpoint!: string;\n\n  @property({ type: String })\n  currentFollowUpQuestions: string = \"\";\n\n  @property({ type: Boolean })\n  programmaticScroll = false;\n\n  @property({ type: Boolean })\n  disableAutoScroll = false;\n\n  @property({ type: Number })\n  scrollStart: number = 0;\n\n  @property({ type: String })\n  serverMemoryId: string | undefined;\n\n  // Keeping an instance property for interface compatibility.\n  // (This value will be used from the first subscriber when creating the connection.)\n  @property({ type: Number })\n  defaultDevWsPort = 4242;\n\n  // An instance flag so that an element can opt out of receiving socket events.\n  disableWebsockets = false;\n\n  // ----------------- Static Shared WebSocket & State -------------------\n  private static ws: WebSocket | null = null;\n  private static subscribers: Set<YpStreamingLlmBase> = new Set();\n\n  private static reconnectDelay: number = 1000;\n  private static reconnectionAttempts: number = 1;\n  private static reconnectTimer: number | undefined;\n  private static wsManuallyClosed: boolean = false;\n\n  protected get ws(): WebSocket | null {\n    // This returns the static WebSocket from the class constructor\n    return (this.constructor as typeof YpStreamingLlmBase).ws;\n  }\n  protected set ws(value: WebSocket | null) {\n    (this.constructor as typeof YpStreamingLlmBase).ws = value;\n  }\n\n  constructor() {\n    super();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    if (!this.disableWebsockets) {\n      // Add this instance to the list of subscribers\n      YpStreamingLlmBase.subscribers.add(this);\n      // If no shared connection exists or if itâ€™s closed, create a new one.\n      if (\n        !YpStreamingLlmBase.ws ||\n        YpStreamingLlmBase.ws.readyState === WebSocket.CLOSED\n      ) {\n        YpStreamingLlmBase.initWebSocketsStatic(this);\n      }\n    }\n  }\n\n  /**\n   * Initializes the shared WebSocket connection.\n   * Uses the defaultDevWsPort from the provided instance (or first subscriber) for the URL.\n   */\n  private static initWebSocketsStatic(instance?: YpStreamingLlmBase) {\n    let defaultPort = 4242;\n    if (instance) {\n      defaultPort = instance.defaultDevWsPort;\n    } else if (YpStreamingLlmBase.subscribers.size > 0) {\n      const firstSub = YpStreamingLlmBase.subscribers.values().next().value;\n      if (firstSub) {\n        defaultPort = firstSub.defaultDevWsPort;\n      }\n    }\n\n    const storedClientId = localStorage.getItem(\"ypWsClientId\") || \"\";\n    const protocol = window.location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n    // Use port 443 for wss, or the defaultPort for ws.\n    const port = protocol === \"wss:\" ? 443 : defaultPort;\n    const endpoint = `${protocol}//${window.location.hostname}${\n      port ? \":\" + port : \"\"\n    }/${storedClientId ? \"?clientId=\" + storedClientId : \"\"}`;\n\n    // Reset the manually closed flag (if weâ€™re reconnecting)\n    YpStreamingLlmBase.wsManuallyClosed = false;\n    YpStreamingLlmBase.ws = new WebSocket(endpoint);\n    console.log(\"Attempting to connect to\", endpoint);\n\n    YpStreamingLlmBase.ws.onopen = () => {\n      console.log(\"WebSocket open\");\n      // Reset reconnect parameters on a successful connection.\n      YpStreamingLlmBase.reconnectDelay = 1000;\n      YpStreamingLlmBase.reconnectionAttempts = 1;\n\n      window.dispatchEvent(new Event(\"wsConnected\"));\n    };\n\n    YpStreamingLlmBase.ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n\n      // Update the clientId if the server provides one, and notify all subscribers.\n      if (data.clientId) {\n        console.log(\"Received clientId from server:\", data.clientId);\n        localStorage.setItem(\"ypWsClientId\", data.clientId);\n        YpStreamingLlmBase.subscribers.forEach((sub) => {\n          sub.wsClientId = data.clientId;\n        });\n      }\n\n      // Dispatch the event to every subscriberâ€™s onMessage method.\n      YpStreamingLlmBase.subscribers.forEach((sub) => {\n        sub.onMessage(event);\n      });\n    };\n\n    YpStreamingLlmBase.ws.onclose = (ev) => {\n      console.warn(\"WebSocket closed:\", ev.reason);\n      YpStreamingLlmBase.scheduleReconnect();\n    };\n\n    YpStreamingLlmBase.ws.onerror = (err) => {\n      console.error(\"WebSocket error:\", err);\n      YpStreamingLlmBase.scheduleReconnect();\n    };\n  }\n\n   static scheduleReconnect(doItNow = false) {\n    // Do not attempt to reconnect if the socket was manually closed.\n    if (YpStreamingLlmBase.wsManuallyClosed) return;\n\n    if (YpStreamingLlmBase.reconnectTimer) {\n      window.clearTimeout(YpStreamingLlmBase.reconnectTimer);\n    }\n    YpStreamingLlmBase.reconnectTimer = window.setTimeout(() => {\n      console.log(\"Reconnecting...\");\n      YpStreamingLlmBase.initWebSocketsStatic();\n      YpStreamingLlmBase.reconnectDelay = Math.min(\n        YpStreamingLlmBase.reconnectDelay *\n          YpStreamingLlmBase.reconnectionAttempts,\n        5000\n      );\n      YpStreamingLlmBase.reconnectionAttempts++;\n    }, doItNow ? 0 : YpStreamingLlmBase.reconnectDelay);\n  }\n\n  public sendClientMessage(payload: string) {\n    console.info(\"Sending client message\");\n    if (\n      YpStreamingLlmBase.ws &&\n      YpStreamingLlmBase.ws.readyState === WebSocket.OPEN\n    ) {\n      YpStreamingLlmBase.ws.send(payload);\n    } else {\n      console.error(\"WebSocket not open; cannot send message\");\n      if (YpStreamingLlmBase.ws?.readyState !== WebSocket.CONNECTING) {\n        YpStreamingLlmBase.scheduleReconnect();\n      }\n    }\n  }\n\n  public sendMessage(action: string, payload: any) {\n    console.info(\"Sending message\");\n    if (\n      YpStreamingLlmBase.ws &&\n      YpStreamingLlmBase.ws.readyState === WebSocket.OPEN\n    ) {\n      YpStreamingLlmBase.ws.send(\n        JSON.stringify({\n          clientId: this.wsClientId,\n          action,\n          payload,\n        })\n      );\n    } else {\n      console.error(\"WebSocket not open; cannot send message\");\n      if (YpStreamingLlmBase.ws?.readyState !== WebSocket.CONNECTING) {\n        YpStreamingLlmBase.scheduleReconnect();\n      }\n    }\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n\n    console.info(\n      \"Disconnected callback called, clearing heartbeat intervals and reconnect timer\"\n    );\n\n    if (YpStreamingLlmBase.reconnectTimer) {\n      clearTimeout(YpStreamingLlmBase.reconnectTimer);\n    }\n\n    // Remove this instance from the subscribers.\n    YpStreamingLlmBase.subscribers.delete(this);\n\n    // If no instances remain, close the shared connection.\n    if (YpStreamingLlmBase.subscribers.size === 0 && YpStreamingLlmBase.ws) {\n      YpStreamingLlmBase.wsManuallyClosed = true;\n      YpStreamingLlmBase.ws.close();\n    }\n  }\n\n  async onMessage(event: MessageEvent) {\n    const data = JSON.parse(event.data);\n\n    // Process messages as before\n    switch (data.sender) {\n      case \"assistant\":\n        await this.addChatBotElement(data);\n        break;\n      case \"user\":\n        this.addChatUserElement(data);\n        break;\n    }\n\n    if (\n      data.type !== \"stream_followup\" &&\n      data.type !== \"voice_input\" &&\n      data.type !== \"updated_workflow\" &&\n      data.type !== \"heartbeat_ack\" &&\n      data.type !== \"hiddenContextMessage\"\n    ) {\n      this.scrollDown();\n    }\n  }\n\n  abstract scrollDown(): void;\n\n  addUserChatBotMessage(userMessage: string) {\n    this.addChatBotElement({\n      sender: \"user\",\n      type: \"start\",\n      message: userMessage,\n    });\n  }\n\n  addThinkingChatBotMessage() {\n    this.addChatBotElement({\n      sender: \"assistant\",\n      type: \"thinking\",\n      message: \"\",\n    });\n  }\n\n  abstract addChatBotElement(wsMessage: YpAssistantMessage): Promise<void>;\n\n  addChatUserElement(data: YpAssistantMessage) {\n    this.chatLog = [...this.chatLog, data];\n  }\n\n  get simplifiedChatLog() {\n    let chatLog = this.chatLog.filter(\n      (chatMessage) =>\n        chatMessage.type !== \"thinking\" &&\n        chatMessage.type !== \"noStreaming\" &&\n        chatMessage.sender !== \"system\"\n    );\n    return chatLog.map((chatMessage) => {\n      return {\n        ...chatMessage,\n        message: chatMessage.rawMessage\n          ? chatMessage.rawMessage\n          : chatMessage.message,\n      };\n    }) as YpSimpleChatLog[];\n  }\n\n  reset() {\n    this.chatLog = [];\n    if (YpStreamingLlmBase.ws) {\n      YpStreamingLlmBase.ws.close();\n      // Clear the static socket so it can be re-established.\n      YpStreamingLlmBase.ws = null;\n      if (YpStreamingLlmBase.subscribers.size > 0) {\n        YpStreamingLlmBase.initWebSocketsStatic();\n      }\n    }\n    this.serverMemoryId = undefined;\n    this.requestUpdate();\n  }\n}\n"]}