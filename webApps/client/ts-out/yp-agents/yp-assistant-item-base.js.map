{"version":3,"file":"yp-assistant-item-base.js","sourceRoot":"","sources":["../../src/yp-agents/yp-assistant-item-base.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AACzE,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AAGhE,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,mBAAmB;IAAjD;;QAEL,gBAAW,GAAG,KAAK,CAAC;QAGpB,gBAAW,GAAG,KAAK,CAAC;QAGpB,eAAU,GAAG,KAAK,CAAC;IAgGrB,CAAC;IA9FC,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;OA2BF;SACF,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,OAAO,CAAC;QAEtC,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,WAAW;YAChB,CAAC,CAAC,IAAI,CAAA;;sBAEM,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC;aAC/B;YACH,CAAC,CAAC,OAAO;UACT,IAAI,CAAC,UAAU;YACf,CAAC,CAAC,IAAI,CAAA;;sBAEM,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC;aAC9B;YACH,CAAC,CAAC,OAAO;;KAEd,CAAC;IACJ,CAAC;IAEQ,aAAa;QACpB,OAAO,IAAI,CAAA;;6DAE8C,IAAI,CAAC,OAAO;;;gBAGzD,IAAI,CAAC,aAAa,EAAE;;;gBAGpB,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE;YAC9B,aAAa,EAAE,IAAI;YACnB,0BAA0B,EAAE,IAAI;YAChC,gBAAgB,EAAE,IAAI;YACtB,aAAa,EAAE,IAAI;SACpB,CAAC;gBACA,IAAI,CAAC,iBAAiB,EAAE;;;;;;KAMnC,CAAC;IACJ,CAAC;IAEQ,UAAU;QACjB,OAAO,IAAI,CAAA;;;YAGH,IAAI,CAAC,eAAe,EAAE;;;;cAIpB,IAAI,CAAC,OAAO;;YAEd,IAAI,CAAC,iBAAiB,EAAE;;;KAG/B,CAAC;IACJ,CAAC;CACF,CAAA;AAtGC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;oDACR;AAGpB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;oDACR;AAGpB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;mDACT;AARR,eAAe;IAD3B,aAAa,CAAC,wBAAwB,CAAC;GAC3B,eAAe,CAwG3B","sourcesContent":["import { css, html, nothing } from \"lit\";\nimport { property, customElement } from \"lit/decorators.js\";\nimport { YpAiChatbotItemBase } from '../yp-llms/yp-chatbot-item-base.js';\nimport { resolveMarkdown } from \"../common/litMarkdown/litMarkdown.js\";\n\n@customElement(\"yp-assistant-item-base\")\nexport class YpAgentItemBase extends YpAiChatbotItemBase {\n  @property({ type: Boolean })\n  isVoiceMode = false;\n\n  @property({ type: Boolean })\n  isListening = false;\n\n  @property({ type: Boolean })\n  isSpeaking = false;\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        .voice-status {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          margin-top: 8px;\n          color: var(--md-sys-color-secondary);\n        }\n\n        .voice-icon {\n          --md-icon-size: 24px;\n          animation: pulse 2s infinite;\n        }\n\n        .voice-icon[speaking] {\n          color: var(--md-sys-color-primary);\n        }\n\n        .voice-icon[listening] {\n          color: var(--md-sys-color-tertiary);\n        }\n\n        @keyframes pulse {\n          0% { transform: scale(1); opacity: 1; }\n          50% { transform: scale(1.1); opacity: 0.8; }\n          100% { transform: scale(1); opacity: 1; }\n        }\n      `\n    ];\n  }\n\n  renderVoiceStatus() {\n    if (!this.isVoiceMode) return nothing;\n\n    return html`\n      <div class=\"voice-status\">\n        ${this.isListening\n          ? html`\n              <md-icon class=\"voice-icon\" listening>mic</md-icon>\n              <span>${this.t('Listening...')}</span>\n            `\n          : nothing}\n        ${this.isSpeaking\n          ? html`\n              <md-icon class=\"voice-icon\" speaking>volume_up</md-icon>\n              <span>${this.t('Speaking...')}</span>\n            `\n          : nothing}\n      </div>\n    `;\n  }\n\n  override renderChatGPT() {\n    return html`\n      <div class=\"layout vertical chatGPTDialogContainer\">\n        <div class=\"chatGPTDialog layout vertical\" ?error=\"${this.isError}\">\n          <div class=\"layout horizontal\">\n            <div class=\"layout vertical chatImage\">\n              ${this.renderCGImage()}\n            </div>\n            <div class=\"layout vertical chatText\">\n              ${resolveMarkdown(this.message, {\n                includeImages: true,\n                includeCodeBlockClassNames: true,\n                handleJsonBlocks: true,\n                targetElement: this,\n              })}\n              ${this.renderVoiceStatus()}\n            </div>\n          </div>\n        </div>\n\n      </div>\n    `;\n  }\n\n  override renderUser() {\n    return html`\n      <div class=\"userChatDialog layout horizontal\">\n        <div class=\"layout vertical chatImage\">\n          ${this.renderRoboImage()}\n        </div>\n        <div class=\"layout vertical\">\n          <div class=\"chatText\">\n            ${this.message}\n          </div>\n          ${this.renderVoiceStatus()}\n        </div>\n      </div>\n    `;\n  }\n}"]}