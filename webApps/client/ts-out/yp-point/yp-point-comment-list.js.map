{"version":3,"file":"yp-point-comment-list.js","sourceRoot":"","sources":["../../src/yp-point/yp-point-comment-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, css, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\n\nimport { YpBaseElement } from '../common/yp-base-element.js';\n\nimport '../common/yp-image.js';\n\nimport '@material/web/iconbutton/icon-button.js';\n\nimport '@lit-labs/virtualizer'\n\nimport './yp-point-comment.js';\nimport './yp-point-comment-edit.js';\n//import { RangeChangedEvent } from '@lit-labs/virtualizer/Virtualizer.js';\n\n\n@customElement('yp-point-comment-list')\nexport class YpPointCommentList extends YpBaseElement {\n  @property({ type: Array })\n  comments: Array<YpPointData> | undefined;\n\n  @property({ type: Object })\n  point: YpPointData | undefined;\n\n  @property({ type: Object })\n  image: YpImageData | undefined;\n\n  @property({ type: Boolean })\n  open = false;\n\n  @property({ type: Boolean })\n  loadingList = false;\n\n  @property({ type: Boolean })\n  disableOpenClose = false;\n\n  @property({ type: Number })\n  commentsCount: number | undefined;\n\n  @property({ type: String })\n  commentType: 'points' | 'images' | undefined;\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    super.updated(changedProperties);\n\n    if (changedProperties.has('point')) {\n      this._pointChanged();\n    }\n\n    if (changedProperties.has('image')) {\n      this._imageChanged();\n    }\n\n    if (changedProperties.has('open')) {\n      this._openChanged();\n    }\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        :host {\n          width: 100%;\n        }\n\n        yp-point-comment-edit {\n          width: 100%;\n        }\n\n        lit-virtualizer {\n          max-height: 500px;\n          width: 550px;\n          text-align: left !important;\n          padding: 16px;\n          --lit-virtualizer-items-container: {\n          }\n        }\n\n        .listContainer {\n          padding-top: 24px;\n          height: 100%;\n          width: 100%;\n        }\n\n        .container {\n        }\n\n        #commentCount {\n          font-size: 14px;\n        }\n\n        md-icon-button.openCloseButton {\n          width: 56px;\n          height: 56px;\n          padding-left: 0;\n          margin-left: 0;\n        }\n\n        .commentText {\n          font-size: 14px;\n          text-transform: lowercase;\n          padding-right: 6px;\n        }\n\n        yp-point-comment {\n          text-align: left;\n\n        }\n\n        @media (max-width: 520px) {\n          lit-virtualizer {\n            width: 100%;\n          }\n        }\n\n        @media (max-width: 450px) {\n          lit-virtualizer {\n            width: 100%;\n          }\n        }\n\n        @media (max-width: 360px) {\n          lit-virtualizer {\n            width: 100%;\n          }\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n      `,\n    ];\n  }\n\n  renderComment(comment: YpPointData, index: number) {\n    return html` <yp-point-comment\n      .point=\"${comment}\"\n      .tabindex=\"${index}\"></yp-point-comment>`;\n  }\n\n  override render() {\n    return html`\n      <div class=\"container layout vertical\">\n        <div\n          class=\"layout vertical start-justified\"\n          ?hidden=\"${this.disableOpenClose}\">\n          <div\n            class=\"layout horizontal center-center\"\n            ?hidden=\"${!this.commentsCount}\">\n            <div class=\"commentText\">${this.t('point.comments')}</div>\n            <div id=\"commentCount\">${this.commentsCount}</div>\n          </div>\n          <div\n            class=\"layout horizontal center-center\"\n            ?hidden=\"${this.noComments}\">\n            <div class=\"commentText\">${this.t('noComments')}</div>\n          </div>\n          <div class=\"layout horizontal\">\n            <md-icon-button\n              .label=\"${this.t('openComments')}\"\n              class=\"openCloseButton\"\n              @click=\"${this.setOpen}\"\n              ?hidden=\"${this.open}\"><md-icon>keyboard_arrow_right</md-icon></md-icon-button>\n            <md-icon-button\n              .label=\"${this.t('closeComments')}\"\n              class=\"openCloseButton\"\n              icon=\"keyboard_arrow_down\"\n              @click=\"${this.setClosed}\"\n              ?hidden=\"${!this.open}\"><md-icon>keyboard_arrow_down</md-icon></md-icon-button>\n          </div>\n        </div>\n\n        ${\n          this.open && this.comments\n            ? html`\n              <div class=\"layout vertical listContainer\">\n                <lit-virtualizer\n                  .items=${this.comments}\n                  .scrollTarget=\"${window}\"\n                  .renderItem=${this.renderComment}\n                  @rangeChanged=${this.scrollEvent}></lit-virtualizer>\n\n              </div>\n\n              <yp-point-comment-edit\n                  @refresh=\"${this.refresh}\"\n                  .point=\"${this.point}\"\n                  .image=\"${this.image}\"></yp-point-comment-edit>\n            `\n          : html``\n        }\n        </div>\n      </div>\n    `;\n  }\n\n  scrollEvent(event: any) {\n    if (\n      this.comments &&\n      //      !this.moreFromScrollTriggerActive &&\n      event.last != -1 &&\n      event.last < this.comments.length &&\n      event.last + 5 >= this.comments.length\n    ) {\n      //      this.moreFromScrollTriggerActive = true;\n      //      this._loadMoreData();\n    }\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.addListener('yp-point-deleted', this.refresh);\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeListener('yp-point-deleted', this.refresh);\n  }\n\n  _openChanged() {\n    if (this.open && (this.point || this.image)) {\n      this.refresh();\n    }\n  }\n\n  get noComments() {\n    return !(this.commentsCount == 0);\n  }\n\n  setOpen() {\n    this.open = true;\n    setTimeout(() => {\n      this.fire('iron-resize');\n    }, 20);\n  }\n\n  setClosed() {\n    this.open = false;\n    setTimeout(() => {\n      this.fire('iron-resize');\n    }, 20);\n  }\n\n  _pointChanged() {\n    this.comments = [];\n    this.commentsCount = undefined;\n    if (this.point) {\n      this.commentType = 'points';\n      this.refresh();\n    }\n  }\n\n  refresh() {\n    this._getComments();\n    this._getCommentsCount();\n  }\n\n  _imageChanged() {\n    if (this.image) {\n      this.commentType = 'images';\n      this.refresh();\n    }\n  }\n\n  get hasContent() {\n    return this.point || this.image\n  }\n\n  async _getComments() {\n    if (this.hasContent && this.commentType) {\n      const comment = await window.serverApi.getComments(\n        this.commentType,\n        this.point ? this.point.id : this.image!.id\n      );\n      this.comments = comment;\n      if (comment && comment.length > 0) {\n        //TODO: Fix this\n        //this.$$('#list').scrollToIndex(comment.length - 1);\n      }\n      setTimeout(() => {\n        //TODO: Do we need this\n        //this.$$('#list').fire('iron-resize');\n      });\n    }\n  }\n\n  async _getCommentsCount() {\n    if (this.hasContent && this.commentType) {\n      const response = await window.serverApi.getCommentsCount(\n        this.commentType,\n        this.point ? this.point.id : this.image!.id\n      ) as YpCommentCountsResponse\n\n      this.commentsCount = response.count\n      this.fire('yp-set-comments-count', { count: this.commentsCount });\n    } else {\n      console.error('No point for comment count');\n    }\n  }\n}\n"]}