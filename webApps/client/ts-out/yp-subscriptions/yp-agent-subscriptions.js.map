{"version":3,"file":"yp-agent-subscriptions.js","sourceRoot":"","sources":["../../src/yp-subscriptions/yp-agent-subscriptions.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACzC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AACnE,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAE7D,OAAO,8BAA8B,CAAC;AACtC,OAAO,oCAAoC,CAAC;AAC5C,OAAO,uCAAuC,CAAC;AAC/C,OAAO,yCAAyC,CAAC;AACjD,OAAO,6CAA6C,CAAC;AAkB9C,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,aAAa;IA4BhD,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA6FF;SACF,CAAC;IACJ,CAAC;IAED;QACE,KAAK,EAAE,CAAC;QA5HF,YAAO,GAAG,IAAI,CAAC;QAGf,UAAK,GAAkB,IAAI,CAAC;QAG5B,iBAAY,GAAkB,EAAE,CAAC;QAGjC,0BAAqB,GAAkB,IAAI,CAAC;QAG5C,2BAAsB,GAAgB,IAAI,GAAG,EAAE,CAAC;QAGhD,sBAAiB,GAAG,KAAK,CAAC;QA8GhC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC;QACzD,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;YAC7C,OAAO;QACT,CAAC;QAED,IAAI,CAAC,MAAM,GAAG,MAAM,UAAU,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IAEQ,KAAK,CAAC,YAAY;QACzB,IAAI,CAAC;YACH,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACrC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;YAC1D,IAAI,CAAC,KAAK,GAAG,mCAAmC,CAAC;QACnD,CAAC;gBAAS,CAAC;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,qBAAqB;QACjC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,0BAA0B,CAAC,CAAC;QACzD,IAAI,CAAC,QAAQ,CAAC,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;QAExE,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAEO,eAAe,CAAC,KAAqC;QAC3D,MAAM,SAAS,GAAG,IAAI,GAAG,EAAuB,CAAC;QAEjD,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACnB,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;YAClC,IAAI,CAAC,OAAO;gBAAE,OAAO;YAErB,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE;gBAChC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC;oBAC9B,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE;wBACvB,QAAQ,EAAE,MAAM,CAAC,EAAE;wBACnB,IAAI,EAAE,MAAM,CAAC,IAAI;wBACjB,WAAW,EAAE,MAAM,CAAC,WAAW,IAAI,EAAE;wBACrC,QAAQ,EAAE,MAAM,CAAC,aAAa,EAAE,QAAQ;wBACxC,QAAQ,EAAE,EAAE;qBACb,CAAC,CAAC;gBACL,CAAC;gBAED,MAAM,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAE,CAAC;gBAC9C,MAAM,eAAe,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC;gBAE5E,IAAI,eAAe,EAAE,CAAC;oBACpB,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnC,CAAC;qBAAM,CAAC;oBACN,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACxB,EAAE,EAAE,OAAO,CAAC,EAAE;wBACd,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE;wBACxB,WAAW,EAAE,OAAO,CAAC,WAAW;wBAChC,KAAK,EAAE,CAAC,IAAI,CAAC;qBACd,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;IACrD,CAAC;IAEO,uBAAuB,CAAC,SAAiB;QAC/C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;IAC3F,CAAC;IAEO,uBAAuB,CAAC,SAAiB;QAC/C,IAAI,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC;YAC/C,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAChD,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC7C,CAAC;QACD,IAAI,CAAC,sBAAsB,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACrE,CAAC;IAEO,KAAK,CAAC,eAAe;QAC3B,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC;YAC1E,IAAI,CAAC,KAAK,GAAG,oCAAoC,CAAC;YAClD,OAAO;QACT,CAAC;QAED,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC/B,MAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;QACtC,CAAC;aAAM,CAAC;YACN,MAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;QACtC,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,sBAAsB;QAClC,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,oBAAoB,EAAE;gBACjD,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE;oBACP,cAAc,EAAE,kBAAkB;iBACnC;gBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;oBACnB,SAAS,EAAE,IAAI,CAAC,qBAAqB;oBACrC,IAAI,EAAE,MAAM;iBACb,CAAC;aACH,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;YAEnE,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,IAAI,CAAC,QAAQ,YAAY,CAAC;QAC9D,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;YAC1D,IAAI,CAAC,KAAK,GAAG,+BAA+B,CAAC;QAC/C,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,sBAAsB;QAClC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,gCAAgC,CAAC;YAC9C,OAAO;QACT,CAAC;QAED,IAAI,CAAC;YACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAE9B,wBAAwB;YACxB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,mCAAmC,EAAE;gBAChE,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE;oBACP,cAAc,EAAE,kBAAkB;iBACnC;gBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;oBACnB,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC;iBACpD,CAAC;aACH,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;YAErE,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YAE/C,kBAAkB;YAClB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;gBACjD,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,YAAY;gBACZ,aAAa,EAAE;oBACb,UAAU,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,WAAW,IAAI,CAAC,QAAQ,YAAY;iBAC1E;aACF,CAAC,CAAC;YAEH,IAAI,KAAK,EAAE,CAAC;gBACV,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACjC,CAAC;QACH,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,IAAI,gBAAgB,CAAC;QACjD,CAAC;gBAAS,CAAC;YACT,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC;IACH,CAAC;IAEO,iBAAiB,CAAC,KAAkB;QAC1C,OAAO,IAAI,CAAA;;;YAGH,KAAK,CAAC,QAAQ;YACd,CAAC,CAAC,IAAI,CAAA,aAAa,KAAK,CAAC,QAAQ,UAAU,KAAK,CAAC,IAAI,yBAAyB;YAC9E,CAAC,CAAC,OAAO;;uCAEkB,KAAK,CAAC,IAAI;4CACL,KAAK,CAAC,WAAW;;;;;YAKjD,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;;KAGxE,CAAC;IACJ,CAAC;IAEO,aAAa,CAAC,OAA6B,EAAE,KAAkB;QACrE,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC;QAClE,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC;QAErE,OAAO,IAAI,CAAA;;UAEL,QAAQ;YACR,CAAC,CAAC,IAAI,CAAA;;yBAES,IAAI,CAAC,qBAAqB,KAAK,OAAO,CAAC,EAAE;wBAC1C,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,EAAE,CAAC;4BAC1C;YAClB,CAAC,CAAC,IAAI,CAAA;;yBAES,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;wBAC5C,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,EAAE,CAAC;yBAE9D;;;qCAG6B,OAAO,CAAC,IAAI;YACrC,OAAO,CAAC,WAAW;YACnB,CAAC,CAAC,IAAI,CAAA,kCAAkC,OAAO,CAAC,WAAW,MAAM;YACjE,CAAC,CAAC,OAAO;;;;YAIT,QAAQ;YACR,CAAC,CAAC,YAAY;YACd,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAA,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ;gBACvD,IAAI,CAAC,aAAa,EAAE,CAAC;;;KAGhC,CAAC;IACJ,CAAC;IAEQ,MAAM;QACb,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,OAAO,IAAI,CAAA;;;;OAIV,CAAC;QACJ,CAAC;QAED,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,OAAO,IAAI,CAAA;;YAEL,IAAI,CAAC,KAAK;;OAEf,CAAC;QACJ,CAAC;QAED,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;;UAE7D,IAAI,CAAC,sBAAsB,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;;;;SAI5C,CAAC,CAAC,CAAC,OAAO;;;sBAGG,IAAI,CAAC,iBAAiB;YAChC,CAAC,CAAC,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,KAAK,CAAC,CAAC;mBAChE,IAAI,CAAC,eAAe;;YAE3B,IAAI,CAAC,iBAAiB;YACtB,CAAC,CAAC,IAAI,CAAA,6DAA6D;YACnE,CAAC,CAAC,WAAW;;;KAGpB,CAAC;IACJ,CAAC;CACF,CAAA;AAhYC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iDACT;AAGV;IADP,KAAK,EAAE;gDACe;AAGf;IADP,KAAK,EAAE;8CAC4B;AAG5B;IADP,KAAK,EAAE;qDACiC;AAGjC;IADP,KAAK,EAAE;8DAC4C;AAG5C;IADP,KAAK,EAAE;+DACgD;AAGhD;IADP,KAAK,EAAE;0DAC0B;AAG1B;IADP,KAAK,EAAE;+CACY;AAGZ;IADP,KAAK,EAAE;iDACc;AA1BX,eAAe;IAD3B,aAAa,CAAC,kBAAkB,CAAC;GACrB,eAAe,CAkY3B","sourcesContent":["import { html, css, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { YpBaseElement } from \"../common/yp-base-element.js\";\n\nimport \"@material/web/radio/radio.js\";\nimport \"@material/web/checkbox/checkbox.js\";\nimport \"@material/web/button/filled-button.js\";\nimport \"@material/web/button/outlined-button.js\";\nimport \"@material/web/progress/circular-progress.js\";\n\ninterface BundleGroup {\n  bundleId: number;\n  name: string;\n  description: string;\n  imageUrl?: string;\n  products: AgentProductWithPlan[];\n}\n\ninterface AgentProductWithPlan {\n  id: number;\n  name: string;\n  description?: string;\n  plans: YpSubscriptionPlanAttributes[];\n}\n\n@customElement(\"yp-subscriptions\")\nexport class YpSubscriptions extends YpBaseElement {\n  @property({ type: Number })\n  domainId!: number;\n\n  @state()\n  private loading = true;\n\n  @state()\n  private error: string | null = null;\n\n  @state()\n  private bundleGroups: BundleGroup[] = [];\n\n  @state()\n  private selectedFreeProductId: number | null = null;\n\n  @state()\n  private selectedPaidProductIds: Set<number> = new Set();\n\n  @state()\n  private processingPayment = false;\n\n  @state()\n  private stripe: any;\n\n  @state()\n  private elements: any;\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        :host {\n          display: block;\n          padding: 24px;\n        }\n\n        .bundle-group {\n          margin-bottom: 32px;\n          padding: 24px;\n          border-radius: 8px;\n          border: 1px solid var(--md-sys-color-outline);\n        }\n\n        .bundle-header {\n          display: flex;\n          align-items: center;\n          gap: 16px;\n          margin-bottom: 16px;\n        }\n\n        .bundle-image {\n          width: 64px;\n          height: 64px;\n          border-radius: 8px;\n          object-fit: cover;\n        }\n\n        .bundle-title {\n          margin: 0;\n          color: var(--md-sys-color-on-surface);\n        }\n\n        .bundle-description {\n          margin: 0;\n          color: var(--md-sys-color-on-surface-variant);\n        }\n\n        .product-list {\n          display: grid;\n          gap: 16px;\n          margin-top: 16px;\n        }\n\n        .product-item {\n          display: flex;\n          align-items: center;\n          gap: 16px;\n          padding: 16px;\n          border-radius: 8px;\n          border: 1px solid var(--md-sys-color-outline-variant);\n        }\n\n        .product-details {\n          flex-grow: 1;\n        }\n\n        .product-name {\n          margin: 0;\n          font-weight: 500;\n        }\n\n        .product-description {\n          margin: 4px 0 0;\n          color: var(--md-sys-color-on-surface-variant);\n        }\n\n        .price {\n          font-weight: 500;\n          color: var(--md-sys-color-primary);\n        }\n\n        .payment-section {\n          margin-top: 24px;\n          padding-top: 24px;\n          border-top: 1px solid var(--md-sys-color-outline-variant);\n        }\n\n        #payment-element {\n          margin-top: 16px;\n          margin-bottom: 24px;\n        }\n\n        .error-message {\n          color: var(--md-sys-color-error);\n          margin: 8px 0;\n        }\n\n        .loading-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          min-height: 200px;\n        }\n      `\n    ];\n  }\n\n  constructor() {\n    super();\n    this.initializeStripe();\n  }\n\n  async initializeStripe() {\n    const stripeKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY;\n    if (!stripeKey) {\n      console.error('Stripe public key not found');\n      return;\n    }\n\n    this.stripe = await loadStripe(stripeKey);\n  }\n\n  override async firstUpdated() {\n    try {\n      await this.loadSubscriptionPlans();\n    } catch (error) {\n      console.error('Error loading subscription plans:', error);\n      this.error = 'Failed to load subscription plans';\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  private async loadSubscriptionPlans() {\n    const response = await fetch('/api/subscriptions/plans');\n    if (!response.ok) throw new Error('Failed to fetch subscription plans');\n\n    const plans = await response.json();\n    this.processPlanData(plans);\n  }\n\n  private processPlanData(plans: YpSubscriptionPlanAttributes[]) {\n    const bundleMap = new Map<number, BundleGroup>();\n\n    plans.forEach(plan => {\n      const product = plan.AgentProduct;\n      if (!product) return;\n\n      product.Bundles?.forEach(bundle => {\n        if (!bundleMap.has(bundle.id)) {\n          bundleMap.set(bundle.id, {\n            bundleId: bundle.id,\n            name: bundle.name,\n            description: bundle.description || '',\n            imageUrl: bundle.configuration?.imageUrl,\n            products: []\n          });\n        }\n\n        const bundleGroup = bundleMap.get(bundle.id)!;\n        const existingProduct = bundleGroup.products.find(p => p.id === product.id);\n\n        if (existingProduct) {\n          existingProduct.plans.push(plan);\n        } else {\n          bundleGroup.products.push({\n            id: product.id,\n            name: product.name || '',\n            description: product.description,\n            plans: [plan]\n          });\n        }\n      });\n    });\n\n    this.bundleGroups = Array.from(bundleMap.values());\n  }\n\n  private handleFreeProductSelect(productId: number) {\n    this.selectedFreeProductId = this.selectedFreeProductId === productId ? null : productId;\n  }\n\n  private handlePaidProductSelect(productId: number) {\n    if (this.selectedPaidProductIds.has(productId)) {\n      this.selectedPaidProductIds.delete(productId);\n    } else {\n      this.selectedPaidProductIds.add(productId);\n    }\n    this.selectedPaidProductIds = new Set(this.selectedPaidProductIds);\n  }\n\n  private async handleSubscribe() {\n    if (!this.selectedFreeProductId && this.selectedPaidProductIds.size === 0) {\n      this.error = 'Please select at least one product';\n      return;\n    }\n\n    if (this.selectedFreeProductId) {\n      await this.handleFreeSubscription();\n    } else {\n      await this.handlePaidSubscription();\n    }\n  }\n\n  private async handleFreeSubscription() {\n    try {\n      const response = await fetch('/api/subscriptions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          productId: this.selectedFreeProductId,\n          type: 'free'\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to create subscription');\n\n      window.location.href = `/domain/${this.domainId}/assistant`;\n    } catch (error) {\n      console.error('Error creating free subscription:', error);\n      this.error = 'Failed to create subscription';\n    }\n  }\n\n  private async handlePaidSubscription() {\n    if (!this.stripe) {\n      this.error = 'Payment system not initialized';\n      return;\n    }\n\n    try {\n      this.processingPayment = true;\n\n      // Create payment intent\n      const response = await fetch('/api/subscriptions/payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          productIds: Array.from(this.selectedPaidProductIds)\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to create payment intent');\n\n      const { clientSecret } = await response.json();\n\n      // Confirm payment\n      const { error } = await this.stripe.confirmPayment({\n        elements: this.elements,\n        clientSecret,\n        confirmParams: {\n          return_url: `${window.location.origin}/domain/${this.domainId}/assistant`,\n        },\n      });\n\n      if (error) {\n        throw new Error(error.message);\n      }\n    } catch (error: any) {\n      console.error('Payment error:', error);\n      this.error = error.message || 'Payment failed';\n    } finally {\n      this.processingPayment = false;\n    }\n  }\n\n  private renderBundleGroup(group: BundleGroup) {\n    return html`\n      <div class=\"bundle-group\">\n        <div class=\"bundle-header\">\n          ${group.imageUrl\n            ? html`<img src=\"${group.imageUrl}\" alt=\"${group.name}\" class=\"bundle-image\">`\n            : nothing}\n          <div>\n            <h2 class=\"bundle-title\">${group.name}</h2>\n            <p class=\"bundle-description\">${group.description}</p>\n          </div>\n        </div>\n\n        <div class=\"product-list\">\n          ${group.products.map(product => this.renderProduct(product, group))}\n        </div>\n      </div>\n    `;\n  }\n\n  private renderProduct(product: AgentProductWithPlan, group: BundleGroup) {\n    const freePlan = product.plans.find(plan => plan.type === 'free');\n    const paidPlans = product.plans.filter(plan => plan.type === 'paid');\n\n    return html`\n      <div class=\"product-item\">\n        ${freePlan\n          ? html`\n            <md-checkbox\n              ?checked=${this.selectedFreeProductId === product.id}\n              @change=${() => this.handleFreeProductSelect(product.id)}\n            ></md-checkbox>`\n          : html`\n            <md-radio\n              ?checked=${this.selectedPaidProductIds.has(product.id)}\n              @change=${() => this.handlePaidProductSelect(product.id)}\n            ></md-radio>`\n        }\n\n        <div class=\"product-details\">\n          <h3 class=\"product-name\">${product.name}</h3>\n          ${product.description\n            ? html`<p class=\"product-description\">${product.description}</p>`\n            : nothing}\n        </div>\n\n        <div class=\"price\">\n          ${freePlan\n            ? 'Free Trial'\n            : paidPlans.map(plan => html`${plan.amount} ${plan.currency}/\n              ${plan.billing_cycle}`)}\n        </div>\n      </div>\n    `;\n  }\n\n  override render() {\n    if (this.loading) {\n      return html`\n        <div class=\"loading-container\">\n          <md-circular-progress indeterminate></md-circular-progress>\n        </div>\n      `;\n    }\n\n    if (this.error) {\n      return html`\n        <div class=\"error-message\">\n          ${this.error}\n        </div>\n      `;\n    }\n\n    return html`\n      <div>\n        ${this.bundleGroups.map(group => this.renderBundleGroup(group))}\n\n        ${this.selectedPaidProductIds.size > 0 ? html`\n          <div class=\"payment-section\">\n            <div id=\"payment-element\"></div>\n          </div>\n        ` : nothing}\n\n        <md-filled-button\n          ?disabled=${this.processingPayment ||\n            (!this.selectedFreeProductId && this.selectedPaidProductIds.size === 0)}\n          @click=${this.handleSubscribe}\n        >\n          ${this.processingPayment\n            ? html`<md-circular-progress indeterminate></md-circular-progress>`\n            : 'Subscribe'}\n        </md-filled-button>\n      </div>\n    `;\n  }\n}"]}