{"version":3,"file":"yp-chatbot-base.js","sourceRoot":"","sources":["../../src/yp-llms/yp-chatbot-base.ts"],"names":[],"mappings":"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","sourcesContent":["import { PropertyValueMap, css, html, nothing } from 'lit';\nimport { property, customElement, query, queryAll } from 'lit/decorators.js';\n\nimport '@material/web/fab/fab.js';\n\nimport '@material/web/radio/radio.js';\nimport '@material/web/button/elevated-button.js';\nimport '@material/web/button/text-button.js';\nimport '@material/web/button/outlined-button.js';\nimport '@material/web/button/filled-button.js';\nimport '@material/web/textfield/outlined-text-field.js';\nimport '@material/web/icon/icon.js';\n\nimport '@material/web/iconbutton/outlined-icon-button.js';\n\nimport '../common/yp-image.js';\nimport { YpAiChatbotItemBase } from './yp-chatbot-item-base.js';\nimport { MdFilledTonalButton } from '@material/web/button/filled-tonal-button.js';\nimport { MdOutlinedTextField } from '@material/web/textfield/outlined-text-field.js';\n\nimport { YpStreamingLlmBase } from './yp-streaming-llm-base.js';\n\nimport './yp-chatbot-item-base.js';\nimport { literal, html as staticHtml } from 'lit/static-html.js';\n\n@customElement('yp-chatbot-base')\nexport abstract class YpChatbotBase extends YpStreamingLlmBase {\n  @property({ type: String })\n  infoMessage: string | undefined;\n\n  @property({ type: String })\n  defaultInfoMessage: string | undefined = \"I'm your friendly chat assistant\";\n\n  @property({ type: Boolean })\n  inputIsFocused = false;\n\n  @property({ type: Boolean })\n  onlyUseTextField = false;\n\n  @property({ type: Number })\n  clusterId!: number;\n\n  @property({ type: Number })\n  communityId!: number;\n\n  @property({ type: String })\n  textInputLabel!: string;\n\n  @property({ type: Boolean })\n  showCleanupButton = false;\n\n  @property({ type: Boolean })\n  showCloseButton = false;\n\n  @query('#sendButton')\n  sendButton?: MdFilledTonalButton;\n\n  @queryAll('yp-chatbot-item-base')\n  chatElements?: YpAiChatbotItemBase[];\n\n  @query('#chatInput')\n  chatInputField?: MdOutlinedTextField;\n\n  @query('#chat-window')\n  chatWindow?: HTMLElement;\n\n  @query('#chat-messages')\n  chatMessagesElement?: HTMLElement;\n\n  chatbotItemComponentName = literal`yp-chatbot-item-base`;\n\n  constructor() {\n    super();\n    this.setupServerApi();\n  }\n\n  abstract setupServerApi(): void;\n\n  calcVH() {\n    const vH = Math.max(\n      document.documentElement.clientHeight,\n      window.innerHeight || 0\n    );\n    this.chatWindow!.setAttribute('style', 'height:' + vH + 'px;');\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n  }\n\n  protected override firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>\n  ): void {\n    // focus the text input\n    setTimeout(() => {\n      this.chatInputField!.focus();\n    }, 420);\n\n    setTimeout(() => {\n      this.chatMessagesElement!.addEventListener(\n        'scroll',\n        this.handleScroll.bind(this)\n      );\n    }, 500);\n  }\n\n  override updated(\n    changedProperties: Map<string | number | symbol, unknown>\n  ): void {\n    super.updated(changedProperties);\n    if (changedProperties.has('themeDarkMode')) {\n    }\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n\n\n    if (this.chatMessagesElement) {\n      this.chatMessagesElement.removeEventListener(\n        'scroll',\n        this.handleScroll.bind(this)\n      );\n    }\n\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n    }\n  }\n\n  addToChatLogWithMessage(\n    data: PsAiChatWsMessage,\n    message: string | undefined = undefined,\n    changeButtonDisabledState: boolean | undefined = undefined,\n    changeButtonLabelTo: string | undefined = undefined,\n    refinedCausesSuggestions: string[] | undefined = undefined,\n    rawMessage: string | undefined = undefined\n  ) {\n    this.infoMessage = message!;\n    data.rawMessage = data.rawMessage || rawMessage;\n    this.chatLog = [...this.chatLog, data];\n\n    this.requestUpdate();\n\n    if (changeButtonDisabledState !== undefined) {\n      this.sendButton!.disabled = changeButtonDisabledState;\n    }\n\n    if (changeButtonLabelTo !== undefined) {\n      //this.sendButton!.innerHTML = changeButtonLabelTo;\n    }\n  }\n\n  get lastChatUiElement() {\n    return this.chatElements![this.chatElements!.length - 1];\n  }\n\n  async addChatBotElement(wsMessage: PsAiChatWsMessage) {\n    switch (wsMessage.type) {\n      case 'hello_message':\n        this.addToChatLogWithMessage(wsMessage);\n        break;\n      case 'thinking':\n        if (this.lastChatUiElement) {\n          this.lastChatUiElement.spinnerActive = false;\n        }\n        this.addToChatLogWithMessage(wsMessage, this.t('Thinking...'));\n        break;\n      case 'noStreaming':\n        this.addToChatLogWithMessage(wsMessage, wsMessage.message);\n        await this.updateComplete;\n        this.lastChatUiElement.spinnerActive = true;\n        break;\n      case 'agentStart':\n        console.log('agentStart');\n        if (this.lastChatUiElement) {\n          this.lastChatUiElement.spinnerActive = false;\n        }\n        const startOptions = wsMessage.data as PsAgentStartWsOptions;\n\n        setTimeout(() => {\n          this.scrollDown();\n        }, 50);\n\n        if (startOptions.noStreaming) {\n          this.addChatBotElement({\n            sender: 'bot',\n            type: 'noStreaming',\n            message: startOptions.name,\n          });\n        } else {\n          this.addToChatLogWithMessage(wsMessage, startOptions.name);\n          this.chatLog[\n            this.chatLog.length - 1\n          ].message = `${startOptions.name}\\n\\n`;\n        }\n        this.requestUpdate();\n        break;\n      case 'liveLlmCosts':\n        this.fire('llm-total-cost-update', wsMessage.data);\n        break;\n      case 'memoryIdCreated':\n        this.serverMemoryId = wsMessage.data as string;\n        this.fire('server-memory-id-created', wsMessage.data);\n        break;\n      case 'agentCompleted':\n        console.log('agentCompleted...');\n        const completedOptions = wsMessage.data as PsAgentCompletedWsOptions;\n\n        if (this.lastChatUiElement) {\n          this.lastChatUiElement.spinnerActive = false;\n          this.lastChatUiElement.message = completedOptions.name;\n        } else {\n          console.error('No last element on agentCompleted');\n        }\n        break;\n      case 'agentUpdated':\n        console.log('agentUpdated');\n        if (this.lastChatUiElement) {\n          this.lastChatUiElement.updateMessage = wsMessage.message;\n        } else {\n          console.error('No last element on agentUpdated');\n        }\n        break;\n      case 'start':\n        if (this.lastChatUiElement) {\n          this.lastChatUiElement.spinnerActive = false;\n        }\n        this.addToChatLogWithMessage(wsMessage, this.t('Thinking...'));\n        if (!this.chatLog[this.chatLog.length - 1].message)\n          this.chatLog[this.chatLog.length - 1].message = '';\n        break;\n      case 'start_followup':\n        this.lastChatUiElement.followUpQuestionsRaw = '';\n        break;\n      case 'stream_followup':\n        this.lastChatUiElement.followUpQuestionsRaw += wsMessage.message;\n        this.requestUpdate();\n        break;\n      case 'info':\n        this.infoMessage = wsMessage.message;\n        break;\n      case 'moderation_error':\n        wsMessage.message =\n          'OpenAI Moderation Flag Error. Please refine your question.';\n        this.addToChatLogWithMessage(\n          wsMessage,\n          wsMessage.message,\n          false,\n          this.t('Send')\n        );\n        break;\n      case 'error':\n        this.addToChatLogWithMessage(\n          wsMessage,\n          wsMessage.message,\n          false,\n          this.t('Send')\n        );\n        break;\n      case 'end':\n        this.lastChatUiElement.stopJsonLoading();\n        this.sendButton!.disabled = false;\n        this.sendButton!.innerHTML = this.t('Send');\n        this.infoMessage = this.defaultInfoMessage;\n        break;\n      case 'message':\n        if (this.lastChatUiElement) {\n          this.lastChatUiElement.spinnerActive = false;\n        }\n        this.addToChatLogWithMessage(\n          wsMessage,\n          wsMessage.message,\n          undefined,\n          undefined\n        );\n        this.sendButton!.disabled = false;\n        this.sendButton!.innerHTML = this.t('Send');\n        this.infoMessage = this.defaultInfoMessage;\n        this.requestUpdate();\n        break;\n      case 'stream':\n        if (wsMessage.message && wsMessage.message != 'undefined') {\n          //@ts-ignore\n          this.infoMessage = this.t('typing');\n          this.chatLog[this.chatLog.length - 1].message =\n            this.chatLog[this.chatLog.length - 1].message + wsMessage.message;\n          //console.error(this.chatLog[this.chatLog.length - 1].message)\n          this.requestUpdate();\n          break;\n        }\n    }\n\n    this.scrollDown();\n  }\n\n  abstract sendChatMessage(): Promise<void>;\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        md-outlined-text-field {\n          width: 350px;\n        }\n\n        .infoMessage {\n          margin-top: 8px;\n        }\n\n        .chat-window {\n          display: flex;\n          flex-direction: column;\n          height: 75vh;\n          width: 100%;\n          max-width: 1200px;\n          margin: 0 auto;\n          border-radius: 10px;\n          overflow: hidden;\n        }\n        .chat-messages {\n          display: flex;\n          flex-direction: column;\n          flex: 1;\n          padding: 20px;\n          overflow-y: scroll;\n        }\n\n        .you-chat-element {\n          align-self: flex-start;\n          max-width: 80%;\n          justify-content: flex-start;\n          margin-right: 32px;\n        }\n\n        .bot-chat-element {\n          align-self: flex-start;\n          justify-content: flex-start;\n          width: 100%;\n          max-width: 100%;\n        }\n\n        .chat-input {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 8px;\n        }\n\n        @media (max-width: 960px) {\n          .restartButton {\n            margin-left: 8px;\n            display: none;\n          }\n\n          .chat-window {\n            max-height: 90vh;\n            height: 90vh;\n          }\n\n          .closeButton  {\n            margin-left: 8px;\n          }\n\n          .darkModeButton {\n            margin-right: 8px;\n            display: none;\n          }\n\n          md-outlined-text-field {\n            transition: transform 0.5s;\n            width: 300px;\n          }\n\n          .chat-messages {\n            padding: 0px;\n          }\n\n          .you-chat-element {\n            max-width: 100%;\n            margin-right: 8px;\n          }\n\n          .chat-input {\n            padding-left: 0px;\n            padding-right: 0px;\n          }\n\n          .restartButton[input-is-focused] {\n          }\n\n          .darkModeButton[input-is-focused] {\n          }\n\n          md-outlined-text-field[focused] {\n            width: 100%;\n          }\n        }\n\n        @media (max-width: 600px) {\n          .chat-window {\n\n          }\n\n          .you-chat-element {\n            margin-right: 0;\n          }\n        }\n\n        md-tonal-button {\n          padding: 16px;\n          padding-left: 0;\n          margin-top: 0;\n        }\n\n        .sendIcon {\n          cursor: pointer;\n        }\n\n        .restartButton, .closeButton {\n          margin-left: 16px;\n        }\n\n        .darkModeButton {\n          margin-right: 16px;\n        }\n\n        md-outlined-text-field {\n          flex: 1;\n          border-radius: 10px;\n          border: none;\n          padding: 10px;\n          margin: 16px;\n          margin-bottom: 16px;\n          margin-left: 8px;\n          margin-right: 8px;\n          width: 650px;\n        }\n\n        .chatElement[thinking] {\n          margin-top: 16px;\n          margin-bottom: 8px;\n        }\n\n        @media (max-width: 450px) {\n          md-outlined-text-field {\n            width: 350px;\n          }\n\n          md-outlined-text-field[focused] {\n            width: 100%;\n          }\n        }\n\n        @media (max-width: 400px) {\n          md-outlined-text-field {\n            width: 320px;\n          }\n\n          md-outlined-text-field[focused] {\n            width: 100%;\n          }\n        }\n      `,\n    ];\n  }\n\n  followUpQuestion(event: CustomEvent) {\n    this.chatInputField!.value = event.detail;\n    this.sendChatMessage();\n  }\n\n  renderChatInput() {\n    return html`\n      ${this.showCleanupButton\n        ? html`\n        <md-outlined-icon-button\n          class=\"restartButton\"\n          @click=\"${() => this.fire('reset-chat')}\"\n        ><md-icon>refresh</md-icon></md-icon></md-outlined-icon-button>\n      `\n        : nothing}\n      ${this.showCloseButton\n        ? html`\n        <md-outlined-icon-button\n          class=\"closeButton\"\n          @click=\"${()=>this.fire('chatbot-close')}\"\n        ><md-icon>close</md-icon></md-icon></md-outlined-icon-button>\n      `\n        : nothing}\n      ${this.onlyUseTextField || this.chatLog.length > 1\n        ? html`\n            <md-outlined-text-field\n              class=\"textInput\"\n              type=\"text\"\n              hasTrailingIcon\n              id=\"chatInput\"\n              rows=\"${this.chatLog.length > 1 ? '1' : '3'}\"\n              @focus=\"${() => (this.inputIsFocused = true)}\"\n              @blur=\"${() => (this.inputIsFocused = true)}\"\n              @keyup=\"${(e: KeyboardEvent) => {\n                if (e.key === 'Enter') {\n                  this.sendChatMessage();\n                }\n              }}\"\n              .label=\"${this.textInputLabel}\"\n            >\n              <md-icon\n                class=\"sendIcon\"\n                @click=\"${this.sendChatMessage}\"\n                slot=\"trailing-icon\"\n                id=\"sendButton\"\n                ?input-is-focused=\"${this.inputIsFocused}\"\n                >send</md-icon\n              >\n            </md-outlined-text-field>\n          `\n        : html`<md-outlined-text-field\n            class=\"textInput\"\n            type=\"textarea\"\n            hasTrailingIcon\n            id=\"chatInput\"\n            rows=\"3\"\n            @focus=\"${() => (this.inputIsFocused = true)}\"\n            @blur=\"${() => (this.inputIsFocused = true)}\"\n            .label=\"${this.textInputLabel}\"\n          >\n            <md-icon\n              class=\"sendIcon\"\n              @click=\"${this.sendChatMessage}\"\n              slot=\"trailing-icon\"\n              id=\"sendButton\"\n              ?input-is-focused=\"${this.inputIsFocused}\"\n              >send</md-icon\n            ></md-outlined-text-field\n          >`}\n    `;\n  }\n\n  override render() {\n    return html`\n      <div class=\"chat-window\" id=\"chat-window\">\n        <div class=\"chat-messages\" id=\"chat-messages\">\n          <yp-chatbot-item-base\n            ?hidden=\"${!this.defaultInfoMessage}\"\n            class=\"chatElement bot-chat-element\"\n            .detectedLanguage=\"${this.language}\"\n            .message=\"${this.defaultInfoMessage}\"\n            type=\"info\"\n            sender=\"bot\"\n          ></yp-chatbot-item-base>\n          ${this.chatLog\n            .filter(chatElement => !chatElement.hidden)\n            .map(\n              chatElement => html`\n                <yp-chatbot-item-base\n                  ?thinking=\"${chatElement.type === 'thinking' ||\n                  chatElement.type === 'noStreaming'}\"\n                  @followup-question=\"${this.followUpQuestion}\"\n                  .clusterId=\"${this.clusterId}\"\n                  class=\"chatElement ${chatElement.sender}-chat-element\"\n                  .detectedLanguage=\"${this.language}\"\n                  .message=\"${chatElement.message}\"\n                  @scroll-down-enabled=\"${() => (this.userScrolled = false)}\"\n                  .type=\"${chatElement.type}\"\n                  .sender=\"${chatElement.sender}\"\n                ></yp-chatbot-item-base>\n              `\n            )}\n        </div>\n        <div class=\"layout horizontal center-center chat-input\">\n          ${this.renderChatInput()}\n        </div>\n      </div>\n    `;\n  }\n}\n"]}