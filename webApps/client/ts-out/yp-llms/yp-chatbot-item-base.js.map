{"version":3,"file":"yp-chatbot-item-base.js","sourceRoot":"","sources":["../../src/yp-llms/yp-chatbot-item-base.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, nothing } from \"lit\";\nimport { property, customElement } from \"lit/decorators.js\";\n\nimport { resolveMarkdown } from \"../common/litMarkdown/litMarkdown.js\";\nimport \"@material/web/icon/icon.js\";\nimport \"@material/web/checkbox/checkbox.js\";\n\nimport \"@material/web/button/outlined-button.js\";\nimport \"@material/web/button/filled-button.js\";\nimport \"@material/web/textfield/filled-text-field.js\";\n\nimport \"@material/web/progress/circular-progress.js\";\nimport { jsonrepair } from \"jsonrepair\";\nimport \"../common/yp-image.js\";\nimport { MdCheckbox } from \"@material/web/checkbox/checkbox.js\";\nimport { YpBaseElement } from \"../common/yp-base-element.js\";\n\n@customElement(\"yp-chatbot-item-base\")\nexport class YpAiChatbotItemBase extends YpBaseElement {\n  @property({ type: String })\n  message!: string;\n\n  @property({ type: String })\n  updateMessage: string | undefined;\n\n  @property({ type: String })\n  sender!: \"you\" | \"bot\";\n\n  @property({ type: String })\n  detectedLanguage!: string;\n\n  @property({ type: Number })\n  clusterId!: number;\n\n  @property({ type: String })\n  type:\n    | \"start\"\n    | \"error\"\n    | \"moderation_error\"\n    | \"info\"\n    | \"message\"\n    | \"thinking\"\n    | \"noStreaming\"\n    | undefined;\n\n  @property({ type: Boolean })\n  spinnerActive = false;\n\n  @property({ type: Boolean })\n  fullReferencesOpen = false;\n\n  @property({ type: String })\n  followUpQuestionsRaw: string = \"\";\n\n  @property({ type: Array })\n  followUpQuestions: string[] = [];\n\n  @property({ type: Boolean })\n  jsonLoading = false;\n\n  constructor() {\n    super();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    // Subscribe to MarkdownDirective events\n    this.addEventListener(\"jsonLoadingStart\", this.handleJsonLoadingStart);\n    this.addEventListener(\"jsonLoadingEnd\", this.handleJsonLoadingEnd);\n  }\n\n  override disconnectedCallback() {\n    // Remove event listeners for MarkdownDirective\n    this.removeEventListener(\"jsonLoadingStart\", this.handleJsonLoadingStart);\n    this.removeEventListener(\"jsonLoadingEnd\", this.handleJsonLoadingEnd);\n\n    super.disconnectedCallback();\n  }\n\n  stopJsonLoading() {\n    this.jsonLoading = false;\n  }\n\n  handleJsonLoadingStart = () => {\n    console.log(\"JSON loading start event triggered\");\n    this.jsonLoading = true;\n    this.requestUpdate(); // If needed to trigger a re-render\n  };\n\n  handleJsonLoadingEnd = (event: any) => {\n    const jsonContent = event.detail;\n    console.log(\n      \"JSON loading end event triggered with JSON content:\",\n      jsonContent\n    );\n    this.jsonLoading = false;\n  };\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        :host {\n          display: flex;\n        }\n        .chatImage {\n          padding: 8px;\n          vertical-align: text-top;\n        }\n\n        .robotIcon {\n          --md-icon-size: 34px;\n        }\n\n        .chatText {\n          padding: 8px;\n          padding-left: 8px;\n          margin-top: 0;\n          padding-top: 2px;\n        }\n\n        .chatTextUser {\n        }\n\n        .userChatDialog {\n          color: var(--md-sys-color-on-surface);\n          background-color: var(--md-sys-color-surface-container);\n          padding: 8px;\n          margin: 16px;\n          line-height: 1.5;\n          margin-bottom: 0px;\n          border-radius: 12px;\n        }\n\n        .post {\n          margin: 8px;\n          padding: 12px;\n          border-radius: 24px;\n          margin-right: 0;\n          background-color: var(--md-sys-color-secondary);\n          color: var(--md-sys-color-on-secondary);\n          cursor: pointer;\n        }\n\n        .postImage {\n          height: 28px;\n          width: 50px;\n        }\n\n        .postName {\n          display: flex;\n          justify-content: center;\n          align-content: center;\n          flex-direction: column;\n          margin-right: 8px;\n        }\n\n        .chatGPTDialogContainer {\n          max-width: 100%;\n          width: 100%;\n        }\n\n        .chatGPTDialog {\n          color: var(--md-sys-color-on-surface);\n          background-color: var(--md-sys-color-surface);\n          padding: 8px;\n          margin: 16px;\n          line-height: 1.5;\n          margin-bottom: 0px;\n          border-radius: 10px;\n          max-width: 89%;\n          margin-top: 12px;\n        }\n\n        @media (max-width: 800px) {\n          .chatGPTDialog {\n            margin: 8px;\n            max-width: 100%;\n          }\n        }\n\n        .chatGPTDialog[error] {\n          background-color: var(--md-sys-color-error);\n          color: var(--md-sys-color-on-error);\n        }\n\n        .followup-question-container {\n          margin-top: 12px;\n          width: 100%;\n          align-self: flex-end;\n          justify-content: flex-end;\n          margin-right: 32px;\n          width: 100%;\n        }\n\n        .labelText {\n          padding-left: 6px;\n          width: 100%;\n        }\n\n        md-circular-progress {\n          --md-circular-progress-size: 32px;\n          width: 32px;\n          height: 32px;\n          margin-top: 8px;\n        }\n\n        .refinedSuggestions {\n          padding: 0;\n          border-radius: 8px;\n          margin: 16px;\n          margin-top: 0;\n        }\n\n        .refinedSuggestions label {\n          display: flex;\n          align-items: center;\n          margin-bottom: 0; // Reduced margin for a tighter layout\n          padding: 8px;\n        }\n\n        .labelText {\n          margin-left: 4px; // Adjust as needed\n        }\n\n        .refinedContainer {\n          padding: 0;\n        }\n\n        md-filled-button {\n          max-width: 250px;\n          margin-top: 16px;\n          margin-bottom: 16px;\n        }\n\n        .followup-question {\n          padding: 0;\n          margin: 6px;\n        }\n\n        .chat-message {\n          flex: 1;\n        }\n\n        .thinkingText {\n          margin-top: 4px;\n          margin-left: 6px;\n          color: var(--md-sys-color-secondary);\n        }\n\n        .thinkingText[spinnerActive] {\n          color: var(--md-sys-color-primary);\n        }\n\n        .doneIcon {\n          margin-left: 16px;\n          margin-right: 4px;\n          color: var(--md-sys-color-secondary);\n          font-size: 28px;\n        }\n\n        .postCitation {\n          font-size: 9px;\n          background-color: var(--md-sys-color-inverse-on-surface);\n          color: var(--md-sys-color-primary);\n          padding: 3px;\n        }\n\n        md-checkbox {\n          margin: 15px;\n        }\n\n        .followUpQuestionMark {\n          color: var(--md-sys-color-primary);\n          font-size: 36px;\n          margin-top: 8px;\n        }\n\n        .citationLink {\n          margin-left: 8px;\n          margin-bottom: 8px;\n        }\n\n        .progress-ring {\n          transform: rotate(-90deg);\n          color: var(--md-sys-color-secondary);\n          transform-origin: 50% 50%;\n          margin-left: 16px;\n          margin-right: 4px;\n        }\n        .progress-ring__circle {\n          stroke: var(--md-sys-color-primary);\n          stroke-dasharray: 75.4;\n          stroke-dashoffset: 75.4;\n          stroke-linecap: round;\n          animation: progress-ring 2.5s infinite;\n        }\n        @keyframes progress-ring {\n          0% {\n            stroke-dashoffset: 75.4;\n          }\n          50% {\n            stroke-dashoffset: 0;\n            transform: rotate(0deg);\n          }\n        }\n      `,\n    ];\n  }\n\n  get isError() {\n    return this.type == \"error\" || this.type == \"moderation_error\";\n  }\n\n  renderCGImage() {\n    return html` <md-icon class=\"robotIcon\">smart_toy</md-icon> `;\n  }\n\n  renderRoboImage() {\n    return html` <md-icon class=\"robotIcon\">person</md-icon> `;\n  }\n\n  renderJson() {\n    return html``;\n  }\n\n  renderChatGPT(): any {\n    return html`\n\n\n      <div class=\"layout vertical chatGPTDialogContainer\">\n        <div\n          class=\"chatGPTDialog layout vertical bot-message\"\n          ?error=\"${this.isError}\"\n        >\n          <div class=\"layout ${this.wide ? \"horizontal\" : \"vertical\"}\">\n            <div class=\"layout vertical chatImage\">${this.renderCGImage()}</div>\n            <div class=\"layout vertical chatText\">\n              ${resolveMarkdown(this.message, {\n                includeImages: true,\n                includeCodeBlockClassNames: true,\n                handleJsonBlocks: true,\n                targetElement: this,\n              })}\n              ${this.jsonLoading\n                ? html`<div class=\"layout horizontal center-center\">\n                    <md-circular-progress indeterminate></md-circular-progress>\n                  </div>`\n                : nothing}\n            </div>\n          </div>\n          ${this.renderJson()}\n        </div>\n        ${this.followUpQuestions && this.followUpQuestions.length > 0\n          ? html`\n              <div class=\"layout horizontal followup-question-container wrap\">\n                <md-icon class=\"followUpQuestionMark\">contact_support</md-icon\n                >${this.followUpQuestions.map(\n                  (question) => html`\n                    <md-outlined-button\n                      class=\"followup-question\"\n                      .label=\"${question}\"\n                      @click=\"${() => this.fire(\"followup-question\", question)}\"\n                    ></md-outlined-button>\n                  `\n                )}\n              </div>\n            `\n          : nothing}\n      </div>\n    `;\n  }\n\n  parseFollowUpQuestions() {\n    this.followUpQuestionsRaw = this.followUpQuestionsRaw.replace(\n      /<<([^>>]+)>>/g,\n      (match, content) => {\n        this.followUpQuestions.push(content);\n        return \"\";\n      }\n    );\n  }\n\n  override updated(\n    changedProperties: Map<string | number | symbol, unknown>\n  ): void {\n    super.updated(changedProperties);\n    if (\n      changedProperties.has(\"followUpQuestionsRaw\") &&\n      this.followUpQuestionsRaw\n    ) {\n      this.parseFollowUpQuestions();\n    }\n  }\n\n  renderUser(): any {\n    return html`\n      <div class=\"userChatDialog layout horizontal user-message\">\n        <div class=\"layout vertical chatImage\">${this.renderRoboImage()}</div>\n        <div class=\"layout vertical chatText chatTextUser\">\n          ${resolveMarkdown(this.message, {\n            includeImages: true,\n            includeCodeBlockClassNames: true,\n            handleJsonBlocks: true,\n            targetElement: this,\n          })}\n        </div>\n      </div>\n    `;\n  }\n\n  renderNoStreaming() {\n    return html`${this.spinnerActive\n        ? html`<svg class=\"progress-ring\" width=\"28\" height=\"28\">\n            <circle\n              class=\"progress-ring__circle\"\n              ?spinnerActive=\"${this.spinnerActive}\"\n              stroke=\"blue\"\n              stroke-width=\"2\"\n              fill=\"transparent\"\n              r=\"10\"\n              cx=\"12\"\n              cy=\"12\"\n            />\n          </svg>`\n        : html`<md-icon class=\"doneIcon\">done</md-icon>`}\n      <div class=\"thinkingText\" ?spinnerActive=\"${this.spinnerActive}\">\n        ${this.message}\n        ${this.updateMessage ? html`- ${this.updateMessage}` : nothing}\n      </div> `;\n  }\n\n  renderThinking() {\n    return html`${this.spinnerActive\n        ? html`<svg class=\"progress-ring\" width=\"28\" height=\"28\">\n            <circle\n              class=\"progress-ring__circle\"\n              ?spinnerActive=\"${this.spinnerActive}\"\n              stroke=\"blue\"\n              stroke-width=\"2\"\n              fill=\"transparent\"\n              r=\"10\"\n              cx=\"12\"\n              cy=\"12\"\n            />\n          </svg>`\n        : html`<md-icon class=\"doneIcon\">done</md-icon>`}\n      <div class=\"thinkingText\" ?spinnerActive=\"${this.spinnerActive}\">\n        ${this.getThinkingText()}\n      </div> `;\n  }\n\n  getThinkingText() {\n    return `${this.t(\"thinking\")}...`;\n  }\n\n  renderMessage() {\n    if (this.sender === \"you\") {\n      return this.renderUser();\n    } else if (this.sender === \"bot\" && this.type === \"thinking\") {\n      return this.renderThinking();\n    } else if (this.sender === \"bot\" && this.type === \"noStreaming\") {\n      return this.renderNoStreaming();\n    } else if (this.sender === \"bot\") {\n      return this.renderChatGPT();\n    }\n  }\n\n  override render() {\n    return html` ${this.renderMessage()} `;\n  }\n}\n"]}