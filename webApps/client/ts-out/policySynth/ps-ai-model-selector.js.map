{"version":3,"file":"ps-ai-model-selector.js","sourceRoot":"","sources":["../../src/policySynth/ps-ai-model-selector.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAc,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAGnE,OAAO,uCAAuC,CAAC;AAC/C,OAAO,uCAAuC,CAAC;AAC/C,OAAO,4BAA4B,CAAC;AACpC,OAAO,kDAAkD,CAAC;AAC1D,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAGtD,IAAM,iBAAiB,GAAvB,MAAM,iBAAkB,SAAQ,aAAa;IAA7C;;QACsB,mBAAc,GAA0B,EAAE,CAAC;QAC3C,0BAAqB,GAAoB,EAAE,CAAC;QAC3C,kBAAa,GAErC,EAAE,CAAC;QAEU,uBAAkB,GAE/B,EAAE,CAAC;QACU,qBAAgB,GAE7B;YACF,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;SACV,CAAC;IAmKJ,CAAC;IAjKU,OAAO,CAAC,iBAAmC;QAClD,IACE,iBAAiB,CAAC,GAAG,CAAC,gBAAgB,CAAC;YACvC,iBAAiB,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAC9C,CAAC;YACD,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;QACD,IACE,iBAAiB,CAAC,GAAG,CAAC,eAAe,CAAC;YACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,CAAC,EACjD,CAAC;YACD,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAClC,CAAC;QAED,IAAI,iBAAiB,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC;YAC3C,sFAAsF;QACxF,CAAC;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,gBAAgB,GAAG;YACtB,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;SACV,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAClC,IAAI,KAAK,CAAC,aAAa,IAAI,WAAW,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC9D,MAAM,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,SAA0B,CAAC;gBAC5D,IACE,IAAI,IAAI,IAAI,CAAC,gBAAgB;oBAC7B,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,EACzC,CAAC;oBACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB;QACtB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE;YAC3D,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAqB,CAAC,KAAK,SAAS,EAAE,CAAC;gBACjE,IAAI,CAAC,kBAAkB,CAAC,IAAqB,CAAC,GAAG,KAAM,CAAC,EAAE,CAAC;YAC7D,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CACtC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAC/B;;KAEJ,CAAC;IACJ,CAAC;IAEO,mBAAmB,CAAC,IAAmB;QAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAE9C,OAAO,IAAI,CAAA;;;oBAGK,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;qBAChC,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,IAAI,CAAC;uBACjD,UAAU;;YAErB,UAAU;YACV,CAAC,CAAC,IAAI,CAAA;uCACqB,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC;kCAChC;YACtB,CAAC,CAAC,MAAM,CAAC,GAAG,CACR,OAAO,CAAC,EAAE,CAAC,IAAI,CAAA;;6BAEF,OAAO,CAAC,EAAE;iCACN,OAAO,CAAC,EAAE,KAAK,YAAY,EAAE,EAAE;;2CAErB,OAAO,CAAC,IAAI;;iBAEtC,CACF;;UAEL,YAAY;YACZ,CAAC,CAAC,IAAI,CAAA;wCACwB,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;;;aAG9D;YACH,CAAC,CAAC,EAAE;;KAET,CAAC;IACJ,CAAC;IAEO,sBAAsB,CAAC,IAAmB;QAChD,QAAQ,IAAI,EAAE,CAAC;YACb,KAAK,OAAO;gBACV,OAAO,IAAI,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC;YACtC,KAAK,QAAQ;gBACX,OAAO,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC;YACvC,KAAK,OAAO;gBACV,OAAO,IAAI,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC;YACtC;gBACE,OAAO,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAEO,uBAAuB,CAAC,CAAQ,EAAE,IAAmB;QAC3D,MAAM,MAAM,GAAG,CAAC,CAAC,MAA2B,CAAC;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,kBAAkB,CAAC,IAAmB;QAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAC/C,IAAI,CAAC,kBAAkB,GAAG,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACzD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,gBAAgB;QACtB,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,mBAAmB,EAAE;YACnC,MAAM,EAAE,EAAE,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,EAAE;YACvD,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CACH,CAAC;IACJ,CAAC;IAED,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;OAoBF;SACF,CAAC;IACJ,CAAC;CACF,CAAA;AAlL4B;IAA1B,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;yDAA4C;AAC3C;IAA1B,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;gEAA6C;AAC3C;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;wDAEpB;AAEU;IAAhB,KAAK,EAAE;6DAED;AACU;IAAhB,KAAK,EAAE;2DAMN;AAhBS,iBAAiB;IAD7B,aAAa,CAAC,sBAAsB,CAAC;GACzB,iBAAiB,CAmL7B","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { PsAiModelSize } from '@policysynth/agents/aiModelTypes.js';\n\nimport '@material/web/select/filled-select.js';\nimport '@material/web/select/select-option.js';\nimport '@material/web/icon/icon.js';\nimport '@material/web/iconbutton/outlined-icon-button.js';\nimport { YpBaseElement } from '../common/yp-base-element.js';\n\n@customElement('ps-ai-model-selector')\nexport class PsAiModelSelector extends YpBaseElement {\n  @property({ type: Array }) activeAiModels: PsAiModelAttributes[] = [];\n  @property({ type: Array }) requestedAiModelSizes: PsAiModelSize[] = [];\n  @property({ type: Object }) currentModels: {\n    [key in PsAiModelSize]?: PsAiModelAttributes | null;\n  } = {};\n\n  @state() private selectedAiModelIds: {\n    [key in PsAiModelSize]?: number | null;\n  } = {};\n  @state() private filteredAiModels: {\n    [key in PsAiModelSize]: PsAiModelAttributes[];\n  } = {\n    small: [],\n    medium: [],\n    large: [],\n  };\n\n  override updated(changedProperties: Map<string, any>) {\n    if (\n      changedProperties.has('activeAiModels') ||\n      changedProperties.has('requestedAiModelSizes')\n    ) {\n      this.filterAiModels();\n    }\n    if (\n      changedProperties.has('currentModels') &&\n      Object.keys(this.selectedAiModelIds).length === 0\n    ) {\n      this.initializeSelectedModels();\n    }\n\n    if (changedProperties.has('currentModels')) {\n      //console.error('currentModels changed', JSON.stringify(this.currentModels, null, 2));\n    }\n  }\n\n  filterAiModels() {\n    this.filteredAiModels = {\n      small: [],\n      medium: [],\n      large: [],\n    };\n\n    this.activeAiModels.forEach(model => {\n      if (model.configuration && 'modelSize' in model.configuration) {\n        const size = model.configuration.modelSize as PsAiModelSize;\n        if (\n          size in this.filteredAiModels &&\n          this.requestedAiModelSizes.includes(size)\n        ) {\n          this.filteredAiModels[size].push(model);\n        }\n      }\n    });\n  }\n\n  initializeSelectedModels() {\n    Object.entries(this.currentModels).forEach(([size, model]) => {\n      if (this.selectedAiModelIds[size as PsAiModelSize] === undefined) {\n        this.selectedAiModelIds[size as PsAiModelSize] = model!.id;\n      }\n    });\n    this.requestUpdate();\n  }\n\n  override render() {\n    return html`\n      <div class=\"ai-model-selectors\">\n        ${this.requestedAiModelSizes.map(size =>\n          this.renderAiModelSelect(size)\n        )}\n      </div>\n    `;\n  }\n\n  private renderAiModelSelect(size: PsAiModelSize) {\n    const models = this.filteredAiModels[size];\n    const isDisabled = models.length === 0;\n    const currentModel = this.currentModels[size];\n\n    return html`\n      <div class=\"ai-model-select-container\">\n        <md-filled-select\n          .label=\"${this.getLocalizedModelLabel(size)}\"\n          @change=\"${(e: Event) => this._handleAiModelSelection(e, size)}\"\n          ?disabled=\"${isDisabled}\"\n        >\n          ${isDisabled\n            ? html`<md-select-option disabled>\n                <div slot=\"headline\">${this.t('noModelsAvailable')}</div>\n              </md-select-option>`\n            : models.map(\n                aiModel => html`\n                  <md-select-option\n                    value=\"${aiModel.id}\"\n                    ?selected=\"${aiModel.id === currentModel?.id}\"\n                  >\n                    <div slot=\"headline\">${aiModel.name}</div>\n                  </md-select-option>\n                `\n              )}\n        </md-filled-select>\n        ${currentModel\n          ? html`\n              <md-icon-button @click=\"${() => this._handleRemoveModel(size)}\">\n                <md-icon>delete</md-icon>\n              </md-icon-button>\n            `\n          : ''}\n      </div>\n    `;\n  }\n\n  private getLocalizedModelLabel(size: PsAiModelSize) {\n    switch (size) {\n      case 'small':\n        return this.t('selectSmallAiModel');\n      case 'medium':\n        return this.t('selectMediumAiModel');\n      case 'large':\n        return this.t('selectLargeAiModel');\n      default:\n        return this.t('selectAiModel');\n    }\n  }\n\n  private _handleAiModelSelection(e: Event, size: PsAiModelSize) {\n    const select = e.target as HTMLSelectElement;\n    this.selectedAiModelIds[size] = Number(select.value);\n    this._emitChangeEvent();\n    this.requestUpdate();\n  }\n\n  private _handleRemoveModel(size: PsAiModelSize) {\n    this.currentModels[size] = null;\n    this.selectedAiModelIds[size] = null;\n    this.currentModels = { ...this.currentModels };\n    this.selectedAiModelIds = { ...this.selectedAiModelIds };\n    this._emitChangeEvent();\n    this.requestUpdate();\n  }\n\n  private _emitChangeEvent() {\n    this.dispatchEvent(\n      new CustomEvent('ai-models-changed', {\n        detail: { selectedAiModelIds: this.selectedAiModelIds },\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        .ai-model-selectors {\n          display: flex;\n          flex-direction: column;\n          gap: 16px;\n        }\n\n        .ai-model-select-container {\n          display: flex;\n          align-items: center;\n        }\n\n        md-filled-select {\n          flex-grow: 1;\n          margin-right: 8px;\n        }\n\n        md-outlined-icon-button-not-used {\n          --md-sys-color-on-surface-variant: var(--md-sys-color-error);\n        }\n      `,\n    ];\n  }\n}\n"]}