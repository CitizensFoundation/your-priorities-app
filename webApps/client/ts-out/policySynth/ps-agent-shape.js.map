{"version":3,"file":"ps-agent-shape.js","sourceRoot":"","sources":["../../src/policySynth/ps-agent-shape.ts"],"names":[],"mappings":"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","sourcesContent":["import { dia, shapes, util, V } from \"@joint/core\";\nimport { PsServerApi } from \"./PsServerApi\";\n\nconst api = new PsServerApi();\n\nexport class AgentsShapeView extends dia.ElementView {\n  private observer: MutationObserver | null = null;\n\n  override remove(): this {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n    super.remove();\n    return this;\n  }\n\n  override render() {\n    super.render();\n\n    const htmlMarkup = this.model.get(\"markup\");\n\n    //TODO: Make TS work here\n    const nodeType = this.model.attributes.nodeType as PsAgentsNodeType;\n\n    let foreignObjectWidth = 200;\n    let foreignObjectHeight = 300;\n\n    if (nodeType === \"connector\") {\n      foreignObjectWidth = 140;\n      foreignObjectHeight = 180;\n    }\n\n    // Create a foreignObject with a set size and style\n    const foreignObject = V(\"foreignObject\", {\n      width: foreignObjectWidth,\n      height: foreignObjectHeight,\n      style: \"overflow: visible; display: block;\",\n    }).node;\n\n    // Append the foreignObject to this.el\n    V(this.el).append(foreignObject);\n\n    // Defer the addition of the inner div with the HTML content\n    setTimeout(() => {\n      const div = document.createElement(\"div\");\n      div.setAttribute(\"class\", \"html-element\");\n      div.setAttribute(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n\n      if (nodeType === \"agent\") {\n        div.innerHTML = `<ps-agent-node\n          agentId=\"${this.model.attributes.agentId}\"\n          groupId=\"${this.model.attributes.groupId}\"\n        >\n     </ps-agent-node>`;\n        div.className = \"agentContainer\";\n        this.setupRunningObserver(div);\n      } else {\n        div.innerHTML = `<ps-connector-node\n          connectorId=\"${this.model.attributes.connectorId}\"\n          groupId=\"${this.model.attributes.groupId}\"\n          agentName=\"${this.model.attributes.agentName}\"\n        >\n      </ps-connector-node>`;\n        div.className = \"connectorContainer\";\n      }\n\n      // Append the div to the foreignObject\n      foreignObject.appendChild(div);\n\n      // Force layout recalculation and repaint\n      foreignObject.getBoundingClientRect();\n    }, 0); // A timeout of 0 ms defers the execution until the browser has finished other processing\n\n    // Add event listener for position changes\n    this.listenTo(this.model, \"change:position\", this.updateNodePosition);\n\n    this.update();\n    return this;\n  }\n\n  private setupRunningObserver(div: HTMLDivElement) {\n    const agentNode = div.querySelector('ps-agent-node');\n    if (agentNode) {\n      this.observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          if (mutation.type === 'attributes' && mutation.attributeName === 'running') {\n            const isRunning = agentNode.hasAttribute('running');\n            if (isRunning) {\n              div.classList.add('agentContainerRunning');\n            } else {\n              div.classList.remove('agentContainerRunning');\n            }\n          }\n        });\n      });\n\n      this.observer.observe(agentNode, { attributes: true, attributeFilter: ['running'] });\n    }\n  }\n\n\n  updateNodePosition = util.debounce(() => {\n    const nodeType = this.model.attributes.nodeType;\n    const nodeId =\n      nodeType === \"agent\"\n        ? this.model.attributes.agentId\n        : this.model.attributes.connectorId;\n    const position = this.model.position();\n\n    api.updateNodeConfiguration(\n      this.model.attributes.groupId,\n      nodeType,\n      nodeId,\n      {\n        graphPosX: position.x,\n        graphPosY: position.y,\n      }\n    );\n  }, 500);\n}\n\nexport class AgentShape extends shapes.standard.Rectangle {\n  override defaults() {\n    return util.deepSupplement(\n      {\n        type: \"html.AgentShape\",\n        attrs: {},\n        markup: \"<div></div>\",\n      },\n      shapes.standard.Rectangle.prototype.defaults\n    );\n  }\n\n  view = AgentsShapeView;\n}\n"]}