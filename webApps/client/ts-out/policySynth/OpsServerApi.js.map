{"version":3,"file":"PsServerApi.js","sourceRoot":"","sources":["../../src/policySynth/PsServerApi.ts"],"names":[],"mappings":"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","sourcesContent":["import { YpServerApiBase } from '../common/YpServerApiBase.js';\nimport { PsAiModelSize } from '@policysynth/agents/aiModelTypes.js';\n\nexport class PsServerApi extends YpServerApiBase {\n  baseAgentsPath = '/agents/';\n  constructor(urlPath: string = '/api') {\n    super();\n    this.baseUrlPath = urlPath;\n  }\n\n  public async getAgent(groupId: number): Promise<PsAgentAttributes> {\n    return (await this.fetchWrapper(\n      this.baseUrlPath + `${this.baseAgentsPath}${groupId}`,\n      {},\n      false\n    )) as unknown as PsAgentAttributes;\n  }\n\n  public async removeAgentAiModel(\n    agentId: number,\n    modelId: number\n  ): Promise<void> {\n    return this.fetchWrapper(\n      `${this.baseUrlPath}/agents/${agentId}/ai-models/${modelId}`,\n      {\n        method: 'DELETE',\n      }\n    );\n  }\n\n  public async addAgentAiModel(\n    agentId: number,\n    modelId: number,\n    size: PsAiModelSize\n  ): Promise<void> {\n    return this.fetchWrapper(\n      `${this.baseUrlPath}/agents/${agentId}/ai-models`,\n      {\n        method: 'POST',\n        body: JSON.stringify({ modelId, size }),\n      }\n    );\n  }\n\n\n  public async updateAgentConfiguration(\n    agentId: number,\n    updatedConfig: Partial<PsAgentAttributes['configuration']>\n  ): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `${this.baseAgentsPath}${agentId}/configuration`,\n      {\n        method: 'PUT',\n        body: JSON.stringify(updatedConfig),\n      },\n      false\n    ) as Promise<void>;\n  }\n\n  public async createAgent(\n    name: string,\n    agentClassId: number,\n    aiModels: { [key: string]: number },\n    parentAgentId: number,\n    groupId?: number\n  ): Promise<PsAgentAttributes> {\n    return this.fetchWrapper(\n      this.baseUrlPath + this.baseAgentsPath,\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          name,\n          agentClassId,\n          aiModels,\n          parentAgentId,\n          groupId,\n        }),\n      },\n      false\n    ) as Promise<PsAgentAttributes>;\n  }\n\n  public async getAgentAiModels(\n    agentId: number\n  ): Promise<PsAiModelAttributes[]> {\n    return this.fetchWrapper(\n      `${this.baseUrlPath}/agents/${agentId}/ai-models`\n    ) as Promise<PsAiModelAttributes[]>;\n  }\n\n  public async getActiveAiModels(): Promise<PsAiModelAttributes[]> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `${this.baseAgentsPath}registry/aiModels`,\n      {\n        method: 'GET',\n      },\n      false\n    ) as Promise<PsAiModelAttributes[]>;\n  }\n\n  public async getActiveAgentClasses(): Promise<PsAgentClassAttributes[]> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `${this.baseAgentsPath}registry/agentClasses`,\n      {\n        method: 'GET',\n      },\n      false\n    ) as Promise<PsAgentClassAttributes[]>;\n  }\n\n  public async getActiveConnectorClasses(): Promise<\n    PsAgentConnectorClassAttributes[]\n  > {\n    return this.fetchWrapper(\n      this.baseUrlPath + `${this.baseAgentsPath}registry/connectorClasses`,\n      {\n        method: 'GET',\n      },\n      false\n    ) as Promise<PsAgentConnectorClassAttributes[]>;\n  }\n\n\n\n  public async getAgentCosts(agentId: number): Promise<number> {\n    const response = (await this.fetchWrapper(\n      this.baseUrlPath + `${this.baseAgentsPath}${agentId}/costs`,\n      {\n        method: 'GET',\n      },\n      false\n    )) as { totalCost: string };\n    return parseFloat(response.totalCost);\n  }\n\n\n  async createConnector(\n    agentId: number,\n    connectorClassId: number,\n    name: string,\n    type: 'input' | 'output'\n  ): Promise<PsAgentConnectorAttributes> {\n    const response = await fetch(`/api/agents/${agentId}/${type}Connectors`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ connectorClassId, name }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to create ${type} connector`);\n    }\n\n    return response.json();\n  }\n\n  public updateNode(\n    agentId: number,\n    updatedNode: PsAgentAttributes\n  ): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `${this.baseAgentsPath}${agentId}`,\n      {\n        method: 'PUT',\n        body: JSON.stringify(updatedNode),\n      },\n      false\n    ) as Promise<void>;\n  }\n\n  public async updateNodeConfiguration(\n    nodeType: 'agent' | 'connector',\n    nodeId: number,\n    updatedConfig: Partial<\n      | PsAgentAttributes['configuration']\n      | PsAgentConnectorAttributes['configuration']\n    >\n  ): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath +\n        `${this.baseAgentsPath}${nodeId}/${nodeType}/configuration`,\n      {\n        method: 'PUT',\n        body: JSON.stringify(updatedConfig),\n      },\n      false\n    ) as Promise<void>;\n  }\n\n  public async getAgentStatus(agentId: number): Promise<PsAgentStatus> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `${this.baseAgentsPath}${agentId}/status`,\n      {\n        method: 'GET',\n      },\n      false\n    ) as Promise<PsAgentStatus>;\n  }\n\n  async controlAgent(agentId: number, action: 'start' | 'pause' | 'stop') {\n    return this.fetchWrapper(`/api/agents/${agentId}/control`, {\n      method: 'POST',\n      body: JSON.stringify({ action: action }),\n    });\n  }\n\n  async startAgent(agentId: number) {\n    return this.controlAgent(agentId, 'start');\n  }\n\n  async pauseAgent(agentId: number) {\n    return this.controlAgent(agentId, 'pause');\n  }\n\n  async stopAgent(agentId: number) {\n    return this.controlAgent(agentId, 'stop');\n  }\n\n  public deleteNode(treeId: string | number, nodeId: string): Promise<void> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `${this.baseAgentsPath}${treeId}`,\n      {\n        method: 'DELETE',\n        body: JSON.stringify({ nodeId }),\n      },\n      false\n    ) as Promise<void>;\n  }\n}\n"]}