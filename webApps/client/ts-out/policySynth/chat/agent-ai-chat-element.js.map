{"version":3,"file":"agent-ai-chat-element.js","sourceRoot":"","sources":["../../../src/policySynth/chat/agent-ai-chat-element.ts"],"names":[],"mappings":"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","sourcesContent":["import { TemplateResult, css, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\n\nimport { Layouts } from '../../flexbox-literals/classes.js';\nimport { resolveMarkdown } from '../../chatBot/litMarkdown.js';\nimport '@material/web/icon/icon';\nimport '@material/web/checkbox/checkbox';\n\nimport '@material/web/button/outlined-button';\nimport '@material/web/button/filled-button';\nimport '@material/web/textfield/filled-text-field';\n\nimport '@material/web/progress/circular-progress';\nimport { jsonrepair } from 'jsonrepair';\nimport '@yrpri/webapp/common/yp-image';\nimport { PsServerApi } from '../PsServerApi.js';\nimport { MdCheckbox } from '@material/web/checkbox/checkbox';\nimport { PsAiChatElement } from '../../chatBot/ps-ai-chat-element.js';\n\n@customElement('ltp-ai-chat-element')\nexport class LtpAiChatElement extends PsAiChatElement {\n  @property({ type: String })\n  parentNodeId!: string;\n\n  @property({ type: String })\n  crtId!: string | number;\n\n  @property({ type: Array })\n  refinedCausesSuggestions: string[] | undefined;\n\n  @property({ type: Boolean })\n  lastChainCompletedAsValid: boolean;\n\n  @property({ type: Array })\n  lastValidateCauses: string[] | undefined;\n\n  @property({ type: Boolean })\n  isCreatingCauses: boolean;\n\n  api: PsServerApi;\n\n  constructor() {\n    super();\n    this.api = new PsServerApi();\n  }\n\n  handleJsonLoadingEnd = (event: any) => {\n    const jsonContent = event.detail;\n    console.log(\n      'JSON loading end event triggered with JSON content:',\n      jsonContent\n    );\n    this.jsonLoading = false;\n    let jsonContentParsed: CrtRefinedCausesReply | undefined = undefined;\n    try {\n      jsonContentParsed = JSON.parse(\n        jsonContent.jsonContent\n      ) as CrtRefinedCausesReply;\n    } catch (e) {\n      console.error('Error parsing JSON content:', e);\n      try {\n        jsonContentParsed = JSON.parse(jsonrepair(jsonContent.jsonContent));\n      } catch (e) {\n        console.error('Error parsing JSON content again:', e);\n      }\n    }\n\n    if (jsonContentParsed) {\n      if (\n        this.lastChainCompletedAsValid &&\n        this.lastValidateCauses &&\n        this.lastValidateCauses.length > 0\n      ) {\n        this.refinedCausesSuggestions = this.lastValidateCauses;\n      } else if (jsonContentParsed.suggestedCauses) {\n        this.refinedCausesSuggestions = jsonContentParsed.suggestedCauses;\n      }\n    }\n  };\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        .refinedCausesSuggestionshowMore {\n          padding-left: 16px;\n          padding-right: 16px;\n        }\n\n        .refinedSuggestions {\n          padding: 0;\n          border-radius: 8px;\n          margin: 16px;\n          margin-top: 0;\n        }\n\n        .refinedSuggestions label {\n          display: flex;\n          align-items: center;\n          margin-bottom: 0; // Reduced margin for a tighter layout\n          padding: 8px;\n        }\n\n        .refinedContainer {\n          padding: 0;\n        }\n\n        .directCause {\n          background-color: var(--md-sys-color-primary);\n          color: var(--md-sys-color-on-primary);\n          margin-bottom: 16px !important;\n          border-radius: 16px;\n        }\n\n        .assumption {\n          background-color: var(--md-sys-color-secondary);\n          color: var(--md-sys-color-on-secondary);\n          margin-bottom: 16px !important;\n          border-radius: 16px;\n        }\n\n        .assumptionCheckbox {\n          --md-checkbox-outline-color: var(--md-sys-color-on-secondary);\n          --md-checkbox-hover-outline-color: var(--md-sys-color-on-primary);\n        }\n\n        .directCauseCheckbox {\n          --md-checkbox-outline-color: var(--md-sys-color-on-primary);\n          --md-checkbox-hover-outline-color: var(--md-sys-color-on-secondary);\n        }\n\n        md-filled-button {\n          max-width: 250px;\n          margin-top: 16px;\n          margin-bottom: 16px;\n        }\n\n        .refinedCausesSuggestions {\n          margin-top: 8px;\n          margin-left: 36px;\n          margin-right: 36px;\n          margin-bottom: 22px;\n          padding: 8px;\n          border-radius: 12px;\n          background-color: var(--md-sys-color-tertiary-container);\n          color: var(--md-sys-color-on-tertiary-container);\n        }\n\n        .suggestionsHeader {\n          font-size: 18px;\n          color: var(--md-sys-color-primary);\n          margin-bottom: 16px;\n        }\n      `,\n    ];\n  }\n\n  async addSelected() {\n    const checkboxes = this.shadowRoot!.querySelectorAll('md-checkbox');\n\n    // Arrays to hold selected causes and assumptions\n    const selectedCauses: string[] = [];\n    const selectedAssumptions: string[] = [];\n\n    // Iterate over each checked checkbox\n    checkboxes.forEach(checkbox => {\n      if (checkbox.checked) {\n        const item = checkbox.getAttribute('aria-label');\n        const type = (checkbox as MdCheckbox).dataset.type;\n\n        if (type === 'directCause') {\n          selectedCauses.push(item!);\n        } else if (type === 'assumption') {\n          selectedAssumptions.push(item!);\n        }\n      }\n    });\n\n    this.isCreatingCauses = true;\n\n    // Add causes and assumptions using separate API calls\n    let nodes: LtpCurrentRealityTreeDataNode[] = [];\n\n    if (this.lastChainCompletedAsValid) {\n      if (selectedCauses.length) {\n        const causesNodes = await this.api.addDirectCauses(\n          this.crtId,\n          this.parentNodeId,\n          selectedCauses,\n          'directCause'\n        );\n        nodes = nodes.concat(causesNodes);\n      }\n\n      if (selectedAssumptions.length) {\n        const assumptionsNodes = await this.api.addDirectCauses(\n          this.crtId,\n          this.parentNodeId,\n          selectedAssumptions,\n          'assumption'\n        );\n        nodes = nodes.concat(assumptionsNodes);\n      }\n\n      this.fireGlobal('add-nodes', {\n        parentNodeId: this.parentNodeId,\n        nodes,\n      });\n\n      await new Promise(resolve => setTimeout(resolve, 10));\n\n      this.fire('close-add-cause-dialog');\n\n      this.isCreatingCauses = false;\n    } else {\n      this.fire('validate-selected-causes', selectedCauses);\n    }\n\n    this.fire('scroll-down-enabled');\n  }\n\n  get isError() {\n    return this.type == 'error' || this.type == 'moderation_error';\n  }\n\n  override renderJson() {\n    if (!this.refinedCausesSuggestions) {\n      return html``;\n    }\n\n    const renderSection = (\n      suggestions: string[],\n      headerText: string,\n      typeClass: string\n    ) => {\n      if (!suggestions || suggestions.length === 0) return html``;\n\n      return html`\n        <div class=\"layout horizontal center-center\">\n          <div class=\"suggestionsHeader\">${headerText}</div>\n        </div>\n        <div\n          class=\"layout vertical refinedSuggestions ${typeClass} wrap\"\n          role=\"group\"\n        >\n          ${suggestions.map(\n            text => html`\n              <label class=\"layout horizontal refinedContainer\">\n                <md-checkbox\n                  aria-label=\"${text}\"\n                  .checked=\"${this.lastChainCompletedAsValid}\"\n                  .disabled=\"${this.lastChainCompletedAsValid}\"\n                  class=\"${typeClass}Checkbox\"\n                  data-type=\"${typeClass}\"\n                  touch-target=\"wrapper\"\n                ></md-checkbox>\n                <div class=\"labelText\">${text}</div>\n              </label>\n            `\n          )}\n        </div>\n      `;\n    };\n\n    return html`\n      ${renderSection(\n        this.refinedCausesSuggestions ?? [],\n        'Suggested Direct Causes',\n        'directCause'\n      )}\n\n      <div class=\"layout horizontal center-center\">\n        <md-filled-button @click=\"${() => this.addSelected()}\">\n          ${this.lastChainCompletedAsValid\n            ? this.t('Add selected')\n            : this.t('Validate selected')}\n        </md-filled-button>\n      </div>\n    `;\n  }\n}\n"]}