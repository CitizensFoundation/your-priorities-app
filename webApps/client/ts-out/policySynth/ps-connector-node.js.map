{"version":3,"file":"ps-connector-node.js","sourceRoot":"","sources":["../../src/policySynth/ps-connector-node.ts"],"names":[],"mappings":"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","sourcesContent":["import { PropertyValueMap, css, html, nothing } from \"lit\";\nimport { property, customElement } from \"lit/decorators.js\";\n\nimport \"@material/web/iconbutton/icon-button.js\";\nimport \"@material/web/progress/circular-progress.js\";\nimport \"@material/web/menu/menu.js\";\nimport \"@material/web/menu/menu-item.js\";\n\nimport { MdMenu } from \"@material/web/menu/menu.js\";\nimport { PsOperationsBaseNode } from \"./ps-operations-base-node.js\";\nimport { YpNavHelpers } from \"../common/YpNavHelpers.js\";\nimport { YpFormattingHelpers } from \"../common/YpFormattingHelpers.js\";\n\n@customElement(\"ps-connector-node\")\nexport class PsAgentConnector extends PsOperationsBaseNode {\n  @property({ type: Object })\n  connector!: PsAgentConnectorAttributes;\n\n  @property({ type: Number })\n  connectorId!: number;\n\n  @property({ type: Number })\n  groupId!: number;\n\n  @property({ type: String })\n  agentName!: string;\n\n  @property({ type: Number })\n  groupIdWithContent: number | undefined;\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    this.connector = window.psAppGlobals.getConnectorInstance(\n      this.connectorId\n    )!;\n    //TODO: Fix this by adding .answsers to the configuration\n    //@ts-ignore\n    if (this.connector.configuration[\"groupId\"]) {\n      //@ts-ignore\n      this.groupIdWithContent = this.connector.configuration[\"groupId\"];\n    }\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        .image {\n          width: 140px;\n          height: 79px;\n          border-radius: 16px 16px 0 0;\n        }\n\n        .name {\n          height: 16px;\n          margin-top: 8px;\n          font-size: 14px;\n          text-align: center;\n          align-items: center;\n        }\n\n        .mainContainer {\n          border-radius: 16px;\n          height: 100%;\n        }\n\n        .instanceName {\n          font-size: 12px;\n          height: 72px;\n        }\n\n        .connectorType {\n          font-size: 15px;\n          text-transform: uppercase;\n          padding: 8px;\n          padding-top: 8px;\n          margin-left: 10px;\n        }\n\n        md-icon-button[root-cause] {\n          --md-icon-button-icon-color: var(--md-sys-color-on-primary);\n        }\n\n        md-circular-progress {\n          --md-circular-progress-size: 28px;\n          margin-bottom: 6px;\n        }\n\n        md-menu {\n          --md-menu-z-index: 1000;\n          z-index: 1000;\n        }\n      `,\n    ];\n  }\n\n  override editNode() {\n    this.fire(\"edit-node\", {\n      nodeId: this.nodeId,\n      element: this.connector,\n    });\n  }\n\n  toggleMenu() {\n    const menu = this.shadowRoot?.getElementById(\"menu\") as MdMenu;\n    menu.open = !menu.open;\n  }\n\n  renderImage() {\n    return html`\n      <div class=\"layout horizontal center-center\">\n        <img\n          class=\"image\"\n          src=\"${this.connector.Class?.configuration.imageUrl}\"\n        />\n      </div>\n    `;\n  }\n\n  openGroup() {\n    const gotoLocation = `/group/${this.groupIdWithContent}`;\n    this.fire(\"yp-change-header\", {\n      headerTitle: \" \",\n      documentTitle: this.agentName,\n      headerDescription: \"\",\n      backPath: \"/group/\" + this.groupId,\n      keepOpenForGroup: `/group/${this.groupId}`,\n    });\n    YpNavHelpers.redirectTo(gotoLocation);\n  }\n\n  override render() {\n    //TODO: Add typedefs for the different configurations\n    if (this.connector) {\n      return html`\n        <div class=\"layout vertical mainContainer\">\n          ${this.renderImage()}\n          ${this.connector.configuration[\"name\"]\n            ? html`<div class=\"name \">\n                ${this.connector.configuration[\"name\"]}\n              </div>`\n            : nothing}\n          <div class=\"name instanceName\">${this.connector.Class?.name}</div>\n          <md-icon class=\"typeIconCore\">checklist</md-icon>\n\n          ${this.groupIdWithContent ? html`\n            <md-icon-button  class=\"middleIcon\" @click=\"${this.openGroup}\">\n              <md-icon>open_in_browser</md-icon>\n            </md-icon-button>\n              `: nothing}\n\n          <md-icon-button class=\"editButton\" @click=\"${this.editNode}\"\n            ><md-icon>settings</md-icon></md-icon-button\n          >\n        </div>\n      `;\n    } else {\n      return nothing;\n    }\n  }\n}\n"]}