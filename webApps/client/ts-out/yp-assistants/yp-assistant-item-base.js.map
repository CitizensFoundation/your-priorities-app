{"version":3,"file":"yp-assistant-item-base.js","sourceRoot":"","sources":["../../src/yp-assistants/yp-assistant-item-base.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AACzE,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AACvE,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAE3D,OAAO,oBAAoB,CAAC;AAC5B,OAAO,iCAAiC,CAAC;AAGlC,IAAM,mBAAmB,GAAzB,MAAM,mBAAoB,SAAQ,mBAAmB;IAArD;;QAEL,gBAAW,GAAG,KAAK,CAAC;QAGpB,gBAAW,GAAG,KAAK,CAAC;QAGX,eAAU,GAAG,KAAK,CAAC;IA4H9B,CAAC;IAvHU,YAAY,CAAC,YAA8B;QAClD,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAEQ,OAAO,CAAC,YAA8B;QAC7C,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAC9B,CAAC;IAED,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAkCF;SACF,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,OAAO,CAAC;QAEtC,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,WAAW;YAChB,CAAC,CAAC,IAAI,CAAA;;sBAEM,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC;aAC/B;YACH,CAAC,CAAC,OAAO;UACT,IAAI,CAAC,UAAU;YACf,CAAC,CAAC,IAAI,CAAA;;sBAEM,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC;aAC9B;YACH,CAAC,CAAC,OAAO;;KAEd,CAAC;IACJ,CAAC;IAEQ,aAAa;QACpB,OAAO,IAAI,CAAA;;6DAE8C,IAAI,CAAC,OAAO;;;gBAGzD,IAAI,CAAC,aAAa,EAAE;;;gBAGpB,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE;YAC9B,aAAa,EAAE,IAAI;YACnB,0BAA0B,EAAE,IAAI;YAChC,gBAAgB,EAAE,IAAI;YACtB,aAAa,EAAE,IAAI;SACpB,CAAC;gBACA,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAA;;kBAEtB,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC;;aAElC,CAAC,CAAC,CAAC,OAAO;;;;;;KAMlB,CAAC;IACJ,CAAC;IAGQ,UAAU;QACjB,OAAO,IAAI,CAAA;;;YAGH,IAAI,CAAC,eAAe,EAAE;;;;cAIpB,IAAI,CAAC,OAAO;;YAEd,IAAI,CAAC,iBAAiB,EAAE;gBACpB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAA;;oBAEpB,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC;;eAElC,CAAC,CAAC,CAAC,OAAO;;;KAGpB,CAAC;IACJ,CAAC;CACF,CAAA;AAlIC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wDACR;AAGpB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wDACR;AAGX;IADR,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;uDACA;AAG5B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yDACL;AAXX,mBAAmB;IAD/B,aAAa,CAAC,wBAAwB,CAAC;GAC3B,mBAAmB,CAoI/B","sourcesContent":["import { css, html, nothing } from \"lit\";\nimport { property, customElement } from \"lit/decorators.js\";\nimport { YpAiChatbotItemBase } from '../yp-llms/yp-chatbot-item-base.js';\nimport { resolveMarkdown } from \"../common/litMarkdown/litMarkdown.js\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\n\nimport \"./yp-agent-chip.js\";\nimport \"./yp-agent-chip-for-purchase.js\";\n\n@customElement(\"yp-assistant-item-base\")\nexport class YpAssistantItemBase extends YpAiChatbotItemBase {\n  @property({ type: Boolean })\n  isVoiceMode = false;\n\n  @property({ type: Boolean })\n  isListening = false;\n\n  @property({ type: Boolean })\n  override isSpeaking = false;\n\n  @property({ type: String })\n  htmlToRender?: string;\n\n  override firstUpdated(changedProps: Map<string, any>) {\n    super.firstUpdated(changedProps);\n  }\n\n  override updated(changedProps: Map<string, any>) {\n    super.updated(changedProps);\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        .voice-status {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          margin-top: 8px;\n          color: var(--md-sys-color-secondary);\n        }\n\n        .voice-icon {\n          --md-icon-size: 24px;\n          animation: pulse 2s infinite;\n        }\n\n        .voice-icon[speaking] {\n          color: var(--md-sys-color-primary);\n        }\n\n        .voice-icon[listening] {\n          color: var(--md-sys-color-tertiary);\n        }\n\n        .component-container {\n          margin-top: 16px;\n          padding: 8px;\n          background: var(--md-sys-color-surface-variant);\n          border-radius: 8px;\n        }\n\n        @keyframes pulse {\n          0% { transform: scale(1); opacity: 1; }\n          50% { transform: scale(1.1); opacity: 0.8; }\n          100% { transform: scale(1); opacity: 1; }\n        }\n      `\n    ];\n  }\n\n  renderVoiceStatus() {\n    if (!this.isVoiceMode) return nothing;\n\n    return html`\n      <div class=\"voice-status\">\n        ${this.isListening\n          ? html`\n              <md-icon class=\"voice-icon\" listening>mic</md-icon>\n              <span>${this.t('Listening...')}</span>\n            `\n          : nothing}\n        ${this.isSpeaking\n          ? html`\n              <md-icon class=\"voice-icon\" speaking>volume_up</md-icon>\n              <span>${this.t('Speaking...')}</span>\n            `\n          : nothing}\n      </div>\n    `;\n  }\n\n  override renderChatGPT() {\n    return html`\n      <div class=\"layout vertical chatGPTDialogContainer\">\n        <div class=\"chatGPTDialog layout vertical\" ?error=\"${this.isError}\">\n          <div class=\"layout horizontal\">\n            <div class=\"layout vertical chatImage\">\n              ${this.renderCGImage()}\n            </div>\n            <div class=\"layout vertical chatText\">\n              ${resolveMarkdown(this.message, {\n                includeImages: true,\n                includeCodeBlockClassNames: true,\n                handleJsonBlocks: true,\n                targetElement: this,\n              })}\n              ${this.htmlToRender ? html`\n              <div class=\"component-container\">\n                ${unsafeHTML(this.htmlToRender)}\n              </div>\n            ` : nothing}\n            </div>\n          </div>\n        </div>\n\n      </div>\n    `;\n  }\n\n\n  override renderUser() {\n    return html`\n      <div class=\"userChatDialog layout horizontal\">\n        <div class=\"layout vertical chatImage\">\n          ${this.renderRoboImage()}\n        </div>\n        <div class=\"layout vertical\">\n          <div class=\"chatText\">\n            ${this.message}\n          </div>\n          ${this.renderVoiceStatus()}\n              ${this.htmlToRender ? html`\n                <div class=\"component-container\">\n                  ${unsafeHTML(this.htmlToRender)}\n                </div>\n              ` : nothing}\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"yp-assistant-item-base\": YpAssistantItemBase;\n  }\n}"]}