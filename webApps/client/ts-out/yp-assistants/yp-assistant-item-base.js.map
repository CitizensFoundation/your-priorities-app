{"version":3,"file":"yp-assistant-item-base.js","sourceRoot":"","sources":["../../src/yp-assistants/yp-assistant-item-base.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,mBAAmB,EAAE,MAAM,wCAAwC,CAAC;AAC7E,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AACvE,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAE3D,OAAO,4BAA4B,CAAC;AACpC,OAAO,yCAAyC,CAAC;AACjD,OAAO,8BAA8B,CAAC;AACtC,OAAO,4CAA4C,CAAC;AACpD,OAAO,uCAAuC,CAAC;AAC/C,OAAO,kCAAkC,CAAC;AAGnC,IAAM,mBAAmB,GAAzB,MAAM,mBAAoB,SAAQ,mBAAmB;IAArD;;QAEL,gBAAW,GAAG,KAAK,CAAC;QAGpB,gBAAW,GAAG,KAAK,CAAC;QAGX,eAAU,GAAG,KAAK,CAAC;IA8H9B,CAAC;IAzHU,YAAY,CAAC,YAA8B;QAClD,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAEQ,OAAO,CAAC,YAA8B;QAC7C,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAC9B,CAAC;IAED,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAiEF;SACF,CAAC;IACJ,CAAC;IAEQ,aAAa;QACpB,OAAO,IAAI,CAAA;;6DAE8C,IAAI,CAAC,OAAO;;cAE3D,CAAC,IAAI,CAAC,YAAY;YAClB,CAAC,CAAC,IAAI,CAAA;;sBAEE,IAAI,CAAC,aAAa,EAAE;;iBAEzB;YACH,CAAC,CAAC,OAAO;;gBAEP,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE;YAC9B,aAAa,EAAE,IAAI;YACnB,0BAA0B,EAAE,IAAI;YAChC,gBAAgB,EAAE,IAAI;YACtB,aAAa,EAAE,IAAI;SACpB,CAAC;gBACA,IAAI,CAAC,YAAY;YACjB,CAAC,CAAC,IAAI,CAAA;;wBAEE,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC;;mBAElC;YACH,CAAC,CAAC,OAAO;;;;;KAKpB,CAAC;IACJ,CAAC;IAEQ,UAAU;QACjB,OAAO,IAAI,CAAA;;;gCAGiB,IAAI,CAAC,OAAO;;KAEvC,CAAC;IACJ,CAAC;CACF,CAAA;AApIC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wDACR;AAGpB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wDACR;AAGX;IADR,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;uDACA;AAG5B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yDACL;AAXX,mBAAmB;IAD/B,aAAa,CAAC,wBAAwB,CAAC;GAC3B,mBAAmB,CAsI/B","sourcesContent":["import { css, html, nothing } from \"lit\";\nimport { property, customElement } from \"lit/decorators.js\";\nimport { YpAiChatbotItemBase } from \"../yp-chatbots/yp-chatbot-item-base.js\";\nimport { resolveMarkdown } from \"../common/litMarkdown/litMarkdown.js\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\n\nimport \"./widgets/yp-agent-chip.js\";\nimport \"./widgets/yp-agent-chip-for-purchase.js\";\nimport \"./widgets/yp-login-widget.js\";\nimport \"./widgets/yp-agent-configuration-widget.js\";\nimport \"./widgets/yp-agent-workflow-widget.js\";\nimport \"./widgets/yp-agent-run-widget.js\";\n\n@customElement(\"yp-assistant-item-base\")\nexport class YpAssistantItemBase extends YpAiChatbotItemBase {\n  @property({ type: Boolean })\n  isVoiceMode = false;\n\n  @property({ type: Boolean })\n  isListening = false;\n\n  @property({ type: Boolean })\n  override isSpeaking = false;\n\n  @property({ type: String })\n  htmlToRender?: string;\n\n  override firstUpdated(changedProps: Map<string, any>) {\n    super.firstUpdated(changedProps);\n  }\n\n  override updated(changedProps: Map<string, any>) {\n    super.updated(changedProps);\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        .voice-status {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          margin-top: 8px;\n          color: var(--md-sys-color-secondary);\n        }\n\n        .voice-icon {\n          --md-icon-size: 24px;\n          animation: pulse 2s infinite;\n        }\n\n        .voice-icon[speaking] {\n          color: var(--md-sys-color-primary);\n        }\n\n        .voice-icon[listening] {\n          color: var(--md-sys-color-tertiary);\n        }\n\n        .component-container {\n          margin-top: 16px;\n        }\n\n        .userChatDialog {\n          color: var(--md-sys-color-on-surface);\n          background-color: var(--md-sys-color-surface-container);\n          padding: 0px;\n          margin: 16px;\n          margin-left: 0;\n          margin-right: 0;\n          line-height: 1.5;\n          margin-bottom: 0px;\n          border-radius: 50px;\n          margin-left: auto;\n        }\n\n        .chatGPTDialog {\n          margin: 0;\n        }\n\n\n        .chatText {\n          padding: 16px;\n          margin: 0;\n          font-size: 15px;\n          font-weight: 400;\n        }\n\n        @keyframes pulse {\n          0% {\n            transform: scale(1);\n            opacity: 1;\n          }\n          50% {\n            transform: scale(1.1);\n            opacity: 0.8;\n          }\n          100% {\n            transform: scale(1);\n            opacity: 1;\n          }\n        }\n      `,\n    ];\n  }\n\n  override renderChatGPT() {\n    return html`\n      <div class=\"layout vertical chatGPTDialogContainer\">\n        <div class=\"chatGPTDialog layout vertical\" ?error=\"${this.isError}\">\n          <div class=\"layout horizontal\">\n            ${!this.htmlToRender\n              ? html`\n                  <div class=\"layout vertical chatImage\">\n                    ${this.renderCGImage()}\n                  </div>\n                `\n              : nothing}\n            <div class=\"layout vertical\">\n              ${resolveMarkdown(this.message, {\n                includeImages: true,\n                includeCodeBlockClassNames: true,\n                handleJsonBlocks: true,\n                targetElement: this,\n              })}\n              ${this.htmlToRender\n                ? html`\n                    <div class=\"component-container\">\n                      ${unsafeHTML(this.htmlToRender)}\n                    </div>\n                  `\n                : nothing}\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  override renderUser() {\n    return html`\n      <div class=\"userChatDialog layout horizontal\">\n        <div class=\"flex\"></div>\n        <div class=\"chatText\">${this.message}</div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"yp-assistant-item-base\": YpAssistantItemBase;\n  }\n}\n"]}