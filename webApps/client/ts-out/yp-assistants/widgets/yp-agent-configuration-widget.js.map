{"version":3,"file":"yp-agent-configuration-widget.js","sourceRoot":"","sources":["../../../src/yp-assistants/widgets/yp-agent-configuration-widget.ts"],"names":[],"mappings":"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","sourcesContent":["import { customElement, property } from \"lit/decorators.js\";\nimport { YpBaseElement } from \"../../common/yp-base-element.js\";\nimport { css, html } from \"lit\";\n\nimport \"@material/web/iconbutton/filled-icon-button.js\";\nimport { YpAssistantServerApi } from \"../AssistantServerApi.js\";\n\n@customElement(\"yp-agent-configuration-widget\")\nexport class YpAgentConfigurationWidget extends YpBaseElement {\n  @property({ type: Number })\n  agentId!: number;\n\n  @property({ type: String })\n  agentName!: string;\n\n  @property({ type: String })\n  subscriptionId!: string;\n\n  @property({ type: Number })\n  domainId!: number;\n\n  @property({ type: String })\n  agentDescription!: string;\n\n  @property({ type: String })\n  agentImageUrl!: string;\n\n  @property({ type: String })\n  requiredQuestions!: string;\n\n  serverApi!: YpAssistantServerApi;\n\n  constructor() {\n    super();\n    this.serverApi = new YpAssistantServerApi(\n      window.appGlobals.currentClientMemoryUuid!\n    );\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        :host {\n          display: block;\n          width: 100%;\n        }\n\n        .agent-chip {\n          width: 100%;\n          display: flex;\n          align-items: center;\n          padding: 16px;\n          background-color: var(--md-sys-color-surface-container-low);\n          border-radius: 8px;\n          gap: 16px;\n        }\n\n        .agent-chip[isSelected] {\n          background-color: var(--md-sys-color-surface-variant);\n        }\n\n        img {\n          width: 48px;\n          height: 48px;\n          border-radius: 50%;\n          object-fit: cover;\n        }\n\n        .content {\n          flex: 1;\n          min-width: 0;\n        }\n\n        .agent-name {\n          font-weight: 500;\n          font-size: 1.1em;\n          margin-bottom: 4px;\n        }\n\n        .agent-name[isUnsubscribed] {\n          color: var(--yp-sys-color-down);\n        }\n\n        .agent-description {\n          color: var(--secondary-text-color);\n          font-size: 0.9em;\n          line-height: 1.4;\n        }\n\n        md-filled-icon-button {\n          margin-left: 32px;\n          margin-top: 8px;\n        }\n      `,\n    ];\n  }\n\n  async submitConfiguration() {\n    console.log(\"submitConfiguration\");\n\n    const answers: YpStructuredAnswer[] = [];\n\n    // Get answers from required questions\n    if (this.requiredQuestions) {\n      const questions = JSON.parse(this.requiredQuestions);\n      for (const question of questions) {\n        const questionElement = this.shadowRoot!.querySelector(\n          `#structuredQuestion_${question.uniqueId || `noId_${questions.indexOf(question)}`}`\n        ) as any;\n\n        if (questionElement) {\n          const answer = questionElement.getAnswer();\n          if (answer) {\n            answers.push({\n              uniqueId: question.uniqueId,\n              value: answer\n            });\n          }\n        }\n      }\n    }\n\n    await this.serverApi.submitAgentConfiguration(\n      this.domainId,\n      this.agentId.toString(),\n      this.subscriptionId,\n      answers\n    );\n\n    this.fireGlobal(\"agent-configuration-submitted\");\n  }\n\n  override render() {\n    return html`\n      <div class=\"agent-chip\">\n        <img src=\"${this.agentImageUrl}\" alt=\"${this.agentName}\" />\n        <div class=\"content\">\n          <div class=\"agent-name\">${this.agentName}</div>\n          <div class=\"agent-description\">${this.agentDescription}</div>\n          <div id=\"surveyContainer\">\n            ${JSON.parse(this.requiredQuestions).map(\n              (question: YpStructuredQuestionData, index: number) => html`\n                <yp-structured-question-edit\n                  index=\"${index}\"\n                  id=\"structuredQuestion_${question.uniqueId ||\n                  `noId_${index}`}\"\n                  .question=\"${question}\"\n                >\n                </yp-structured-question-edit>\n              `\n            )}\n          </div>\n        </div>\n        <div class=\"layout horizontal\">\n          <md-filled-button @click=\"${this.submitConfiguration}\">\n            ${this.t(\"Submit\")}\n          </md-filled-button>\n        </div>\n      </div>\n    `;\n  }\n}\n"]}