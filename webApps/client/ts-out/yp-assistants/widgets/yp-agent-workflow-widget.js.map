{"version":3,"file":"yp-agent-workflow-widget.js","sourceRoot":"","sources":["../../../src/yp-assistants/widgets/yp-agent-workflow-widget.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { YpBaseElement } from \"../../common/yp-base-element\";\n\n\n@customElement(\"yp-agent-workflow-widget\")\nexport class YpAgentWorkflowWidget extends YpBaseElement {\n  @property({ type: String }) agentProductId = \"\";\n  @property({ type: String }) runId = \"\";\n  @property({ type: String }) agentName = \"\";\n  @property({ type: String }) agentDescription = \"\";\n  @property({ type: String }) workflowStatus = \"not_started\";\n\n  @property({type: String})\n  workflow!: string;\n\n  get parsedWorkflow(): YpWorkflowConfiguration {\n    try {\n      const decodedWorkflow = atob(this.workflow);\n      return JSON.parse(decodedWorkflow);\n    } catch (error) {\n      console.error('Failed to decode or parse workflow:', error);\n      return { currentStepIndex: 0, steps: [] };\n    }\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        :host {\n          display: block;\n      padding: 24px;\n      max-width: 1200px;\n      margin: 0 auto;\n      font-family: system-ui, -apple-system, sans-serif;\n    }\n\n    .workflow-step {\n      position: relative;\n      display: flex;\n      align-items: flex-start;\n      gap: 16px;\n      padding: 16px;\n    }\n\n    .step-connector {\n      position: absolute;\n      left: 32px;\n      top: 64px;\n      width: 2px;\n      height: 64px;\n      background-color: var(--md-sys-color-outline-variant, #e2e8f0);\n    }\n\n    .step-number {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      font-weight: bold;\n      font-size: 20px;\n      flex-shrink: 0;\n      transition: background-color 0.3s ease;\n    }\n\n    .step-content {\n      flex: 1;\n      background: var(--md-sys-color-surface-container, white);\n      border: 1px solid var(--md-sys-color-outline-variant, #e2e8f0);\n      border-radius: 8px;\n      padding: 24px;\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n    }\n\n    .step-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: flex-start;\n      margin-bottom: 8px;\n    }\n\n    .step-title {\n      font-size: 20px;\n      font-weight: 600;\n      margin: 0;\n    }\n\n    .step-description {\n      margin: 0;\n      font-size: 16px;\n      line-height: 1.5;\n    }\n\n    .step-icon {\n      width: 20px;\n      height: 20px;\n      color: var(--md-sys-color-outline, #94a3b8);\n    }\n\n    /* Status-specific styles */\n    .step-completed {\n      opacity: 0.7;\n    }\n\n    .step-active {\n      animation: pulse 2s infinite;\n    }\n\n    .step-disabled {\n      opacity: 0.5;\n    }\n\n    @keyframes pulse {\n      0% {\n        box-shadow: 0 0 0 0 rgba(46, 204, 113, 0.4);\n      }\n      70% {\n        box-shadow: 0 0 0 10px rgba(46, 204, 113, 0);\n      }\n      100% {\n        box-shadow: 0 0 0 0 rgba(46, 204, 113, 0);\n        }\n      }\n    `];\n  }\n\n  private getStepClass(index: number): string {\n    if (this.workflowStatus === \"not_started\") {\n      return \"\";\n    }\n    if (index < this.parsedWorkflow.currentStepIndex) {\n      return \"step-completed\";\n    }\n    if (index === this.parsedWorkflow.currentStepIndex) {\n      return this.workflowStatus === \"running\" ? \"step-active\" : \"\";\n    }\n    return \"step-disabled\";\n  }\n\n  private renderStep(step: YpWorkflowStep, index: number, isLast: boolean) {\n    const stepClass = this.getStepClass(index);\n\n    return html`\n      <div class=\"workflow-step ${stepClass}\">\n        ${!isLast ? html`<div class=\"step-connector\"></div>` : ''}\n        <div\n          class=\"step-number\"\n          style=\"\n            background-color: ${step.stepBackgroundColor};\n            color: ${step.stepTextColor};\n          \"\n        >\n          ${index + 1}\n        </div>\n        <div class=\"step-content\">\n          <div class=\"step-header\">\n            <h3 class=\"step-title\" style=\"color: ${step.stepTextColor}\">\n              ${step.shortName}\n            </h3>\n            ${step.type === \"engagmentFromOutputConnector\"\n              ? this.renderIcon(\"users\")\n              : this.renderIcon(\"sparkles\")}\n          </div>\n          <p\n            class=\"step-description\"\n            style=\"color: ${this.adjustTextColor(step.stepTextColor || \"#000000\")}\"\n          >\n            ${step.shortDescription}\n          </p>\n        </div>\n      </div>\n    `;\n  }\n\n  private renderIcon(type: \"users\" | \"sparkles\") {\n    return type === \"users\"\n      ? html`<svg class=\"step-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\n          <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\n          <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\n          <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\n        </svg>`\n      : html`<svg class=\"step-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M12 3l1.88 5.76a1 1 0 0 0 .95.69h6.08a1 1 0 0 1 .59 1.81l-4.92 3.58a1 1 0 0 0-.36 1.12l1.88 5.76a1 1 0 0 1-1.54 1.12l-4.92-3.58a1 1 0 0 0-1.18 0l-4.92 3.58a1 1 0 0 1-1.54-1.12l1.88-5.76a1 1 0 0 0-.36-1.12l-4.92-3.58a1 1 0 0 1 .59-1.81h6.08a1 1 0 0 0 .95-.69L12 3z\"></path>\n        </svg>`;\n  }\n\n  private adjustTextColor(backgroundColor: string): string {\n    // If text color is light, darken it slightly for better contrast\n    return backgroundColor === \"#ffffff\" ? \"#64748b\" : backgroundColor;\n  }\n\n  override render() {\n    debugger;\n    if (!this.workflow || !this.parsedWorkflow.steps || this.parsedWorkflow.steps.length === 0) {\n      return html`<div>No workflow configuration available</div>`;\n    }\n\n    return html`\n      ${this.parsedWorkflow.steps.map((step, index) =>\n        this.renderStep(\n          step,\n          index,\n          index === this.parsedWorkflow.steps.length - 1\n        )\n      )}\n    `;\n  }\n}"]}