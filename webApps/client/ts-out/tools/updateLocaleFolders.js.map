{"version":3,"file":"updateLocaleFolders.js","sourceRoot":"","sources":["../../src/tools/updateLocaleFolders.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;AACjE,OAAO,EAAE,MAAM,aAAa,CAAC;AAC7B,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,MAAM,gCAAgC,GAAG,KAAK,IAAI,EAAE;IAClD,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC;IACxD,IAAI,CAAC;QACH,MAAM,EAAE,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACjD,KAAK,MAAM,QAAQ,IAAI,WAAW,CAAC,YAAY,EAAE,CAAC;YAChD,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAC1B,WAAW,EACX,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAChC,CAAC;YACF,MAAM,UAAU,GAAG,MAAM,EAAE;iBACxB,MAAM,CAAC,UAAU,CAAC;iBAClB,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;iBAChB,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;YACtB,IAAI,CAAC,UAAU,EAAE,CAAC;gBAChB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;gBAC3C,MAAM,EAAE,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;gBAChD,MAAM,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,kBAAkB,CAAC,EAAE,IAAI,CAAC,CAAC;YACtE,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,0DAA0D,CAAC,CAAC;IAC1E,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC;AACH,CAAC,CAAA;AAED,KAAK,UAAU,IAAI;IACjB,MAAM,gCAAgC,EAAE,CAAC;AAC3C,CAAC;AAED,IAAI,EAAE;KACH,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;KAC7D,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC","sourcesContent":["import { YpLanguages } from \"../common/languages/ypLanguages.js\";\nimport fs from \"fs/promises\";\nimport path from \"path\";\n\nconst ensureAllLocaleFoldersAreCreated = async () => {\n  const localesPath = path.join(process.cwd(), \"locales\");\n  try {\n    await fs.mkdir(localesPath, { recursive: true });\n    for (const language of YpLanguages.allLanguages) {\n      const localePath = path.join(\n        localesPath,\n        language.code.replace(\"-\", \"_\")\n      );\n      const pathExists = await fs\n        .access(localePath)\n        .then(() => true)\n        .catch(() => false);\n      if (!pathExists) {\n        console.log(\"Creating ---->:\", localePath);\n        await fs.mkdir(localePath, { recursive: true });\n        await fs.writeFile(path.join(localePath, \"translation.json\"), \"{}\");\n      } else {\n        console.log(\"Path exists:\", localePath);\n      }\n    }\n    console.log(\"Locale folders and files have been created successfully.\");\n  } catch (error) {\n    console.error(\"Error creating locale folders:\", error);\n  }\n}\n\nasync function main(): Promise<void> {\n  await ensureAllLocaleFoldersAreCreated();\n}\n\nmain()\n  .then(() => console.log(\"I have updated the locale folders.\"))\n  .catch((error) => console.error(\"Error in main:\", error));\n"]}