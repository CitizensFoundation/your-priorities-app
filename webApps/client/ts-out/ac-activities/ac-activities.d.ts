import "@material/web/button/outlined-button.js";
import "../yp-point/yp-point-news-story-edit.js";
import "./ac-activity.js";
import "./ac-activity-recommended-posts.js";
import "@lit-labs/virtualizer";
import { YpBaseElementWithLogin } from "../common/yp-base-element-with-login.js";
export declare class AcActivities extends YpBaseElementWithLogin {
    disableNewPosts: boolean;
    noRecommendedPosts: boolean;
    gotInitialData: boolean;
    activities: Array<AcActivityData> | undefined;
    domainId: number | undefined;
    label: string | undefined;
    addLabel: string | undefined;
    notLoggedInLabel: string | undefined;
    collectionId: number;
    collectionType: string;
    communityId: number | undefined;
    groupId: number | undefined;
    postId: number | undefined;
    postGroupId: number | undefined;
    userId: number | undefined;
    mode: "activities" | "news_feeds";
    url: string | undefined;
    latestProcessedActivityAt: string | undefined;
    oldestProcessedActivityAt: string | undefined;
    activityIdToDelete: number | undefined;
    recommendedPosts: Array<YpPostData> | undefined;
    closeNewsfeedSubmissions: boolean;
    _moreToLoad: boolean;
    updated(changedProperties: Map<string | number | symbol, unknown>): void;
    static get styles(): any[];
    renderItem(activity: AcActivityData, index: number): import("lit-html").TemplateResult<1>;
    render(): import("lit-html").TemplateResult<1>;
    scrollEvent(event: {
        last: number;
    }): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    _openLogin(): void;
    _pointDeleted(event: CustomEvent): void;
    get wideListOffset(): "800" | "415";
    get ironListResizeScrollThreshold(): 800 | 300;
    get ironListPaddingTop(): number;
    _removeActivityId(activityId: number): void;
    _deleteActivity(event: CustomEvent): void;
    _reallyDelete(): Promise<void>;
    _generateRequest(typeId: number, typeName: string): void;
    _loadMoreData(): Promise<void>;
    loadNewData(): Promise<void>;
    _domainIdChanged(): void;
    _communityIdChanged(): void;
    _groupIdChanged(): void;
    _postIdChanged(): void;
    _userIdChanged(): void;
    _clearScrollThreshold(): void;
    _getRecommendations(typeName: string, typeId: number): Promise<void>;
    _preProcessActivities(activities: Array<AcActivityData>): AcActivityData[];
    _processResponse(activitiesResponse: AcActivitiesResponse, newData?: boolean): void;
    scrollToItem(item: AcActivityData): void;
    fireResize(): void;
}
//# sourceMappingURL=ac-activities.d.ts.map