import { YpBaseElement } from "../common/yp-base-element.js";
import "@material/web/iconbutton/outlined-icon-button.js";
import "@material/web/iconbutton/filled-tonal-icon-button.js";
import "@material/web/labs/badge/badge.js";
export declare class YpPostActions extends YpBaseElement {
    post: YpPostData;
    endorsementButtons: string;
    headerMode: boolean;
    forceSmall: boolean;
    endorseValue: number;
    allDisabled: boolean;
    disabledTitle: string | undefined;
    floating: boolean;
    votingDisabled: boolean;
    smallerIcons: boolean;
    maxNumberOfGroupVotes: number | undefined;
    numberOfGroupVotes: number | undefined;
    forceShowDebate: boolean;
    onlyShowDebate: boolean;
    forceHideDebate: boolean;
    hideVoteCount: boolean;
    connectedCallback(): void;
    disconnectedCallback(): void;
    firstUpdated(changedProperties: Map<string | number | symbol, unknown>): void;
    static get styles(): any[];
    renderDebate(): import("lit-html").TemplateResult<1>;
    render(): import("lit-html").TemplateResult<1>;
    get isEndorsed(): boolean;
    get isOpposed(): boolean;
    get votingStateDisabled(): boolean;
    get onlyUpVoteShowing(): boolean | undefined;
    get endorseModeIconUp(): "arrow_upward" | "thumb_up" | "thumb_down" | "favorite" | "do_not_disturb" | "keyboard_arrow_up" | "keyboard_arrow_down" | "arrow_downward" | undefined;
    get endorseModeIconDown(): "arrow_upward" | "thumb_up" | "thumb_down" | "favorite" | "do_not_disturb" | "keyboard_arrow_up" | "keyboard_arrow_down" | "arrow_downward" | undefined;
    get customVoteUpHoverText(): string;
    get customVoteDownHoverText(): string;
    _goToPostIfNotHeader(): void;
    get hideDebate(): boolean | undefined;
    updated(changedProperties: Map<string | number | symbol, unknown>): Promise<void>;
    _updateEndorsementsFromSignal(event: CustomEvent): void;
    _updateEndorsements(event?: CustomEvent | undefined): void;
    endorseModeIcon(endorsementButtons: string, upDown: string): "arrow_upward" | "thumb_up" | "thumb_down" | "favorite" | "do_not_disturb" | "keyboard_arrow_up" | "keyboard_arrow_down" | "arrow_downward" | undefined;
    _setEndorsement(value: number): Promise<void>;
    _enableVoting(): void;
    generateEndorsementFromLogin(value: number): void;
    generateEndorsement(value: number): Promise<void>;
    upVote(): void;
    downVote(): void;
    _setVoteHidingStatus(): void;
}
//# sourceMappingURL=yp-post-actions.d.ts.map