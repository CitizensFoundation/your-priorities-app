{"version":3,"file":"yp-post-tags.js","sourceRoot":"","sources":["../../src/yp-post/yp-post-tags.ts"],"names":[],"mappings":"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","sourcesContent":["import { stylesFromModule } from '@polymer/polymer/lib/utils/style-gather';\nimport { html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport { YpBaseElement } from '../common/yp-base-element.js';\nimport { ShadowStyles } from '../common/ShadowStyles.js';\n\nimport '../yp-magic-text/yp-magic-text.js';\nimport '@material/web/icon/icon.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { YpMagicText } from '../yp-magic-text/yp-magic-text.js';\n\n@customElement('yp-post-tags')\nexport class YpPostTags extends YpBaseElement {\n  @property({ type: Object })\n  post!: YpPostData;\n\n  @property({ type: String })\n  translatedTags: string | undefined;\n\n  @property({ type: Boolean })\n  autoTranslate = false;\n\n  static override get styles() {\n    return [\n      super.styles,\n      ShadowStyles,\n      css`\n        .tagContainer {\n          max-width: 480px;\n          font-size: 14px;\n          margin-left: 8px;\n          vertical-align: middle;\n          padding-left: 16px;\n          color: var(--app-tags-text-color, #111) !important;\n          font-weight: var(--app-tags-font-weight, 500);\n        }\n\n        .middleDot {\n          padding-left: 2px;\n          padding-right: 2px;\n          vertical-align: middle;\n          color: var(--app-tags-color, #656565);\n        }\n\n        .tagItem {\n          vertical-align: middle;\n        }\n\n        @media (max-width: 800px) {\n          .middleDot {\n            font-size: 14px;\n            margin-bottom: 8px;\n          }\n\n          .tagContainer {\n            font-size: 17px;\n            padding-left: 16px;\n            padding-right: 16px;\n            padding-bottom: 16px;\n          }\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n      `,\n    ];\n  }\n\n  override render() {\n    return html`\n      <div class=\"tagContainer wrap\">\n        ${this.postTags.map(\n          (item, index) => html`\n            <span class=\"tagItem\">${this._trimmedItem(item)}</span\n            ><span\n              class=\"middleDot\"\n              ?hidden=\"${this.computeSpanHidden(this.postTags, index)}\"\n              >&#9679;</span\n            >\n          `\n        )}\n      </div>\n\n      <yp-magic-text\n        id=\"postTagsTranslations\"\n        hidden\n        content-id=\"${this.post.id}\"\n        textOnly\n        content=\"${ifDefined(this.post.public_data?.tags)}\"\n        content-language=\"${ifDefined(this.post.language)}\"\n        @new-translation=\"${this._newTranslation}\"\n        textType=\"postTags\"\n      >\n      </yp-magic-text>\n    `;\n  }\n\n  _trimmedItem(item: string) {\n    if (item) {\n      return item.trim();\n    } else {\n      return '';\n    }\n  }\n\n  _autoTranslateEvent(event: CustomEvent) {\n    this.autoTranslate = event.detail;\n  }\n\n  computeSpanHidden(items: Array<string>, index: number) {\n    return items.length - 1 === index;\n  }\n\n  _newTranslation() {\n    setTimeout(() => {\n      const tagsTranslation = this.$$('#postTagsTranslations') as YpMagicText;\n      if (tagsTranslation && tagsTranslation.finalContent) {\n        this.translatedTags = tagsTranslation.finalContent;\n      }\n    });\n  }\n\n  get postTags() {\n    if (this.translatedTags && this.autoTranslate) {\n      return this.translatedTags.split(',');\n    } else if (\n      this.post &&\n      this.post.public_data &&\n      this.post.public_data.tags\n    ) {\n      return this.post.public_data.tags.split(',');\n    } else {\n      return [];\n    }\n  }\n}\n"]}