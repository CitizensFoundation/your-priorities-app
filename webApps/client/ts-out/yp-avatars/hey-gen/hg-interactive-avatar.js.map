{"version":3,"file":"hg-interactive-avatar.js","sourceRoot":"","sources":["../../../src/yp-avatars/hey-gen/hg-interactive-avatar.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css, PropertyValues } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport StreamingAvatar, {\n  AvatarQuality,\n  StreamingEvents,\n  TaskMode,\n  TaskType,\n  VoiceEmotion,\n  StartAvatarResponse,\n} from \"@heygen/streaming-avatar\";\nimport \"@material/web/button/filled-button.js\";\nimport \"@material/web/select/filled-select.js\";\nimport \"@material/web/select/select-option.js\";\nimport \"@material/web/progress/circular-progress.js\";\nimport \"@material/web/divider/divider.js\";\nimport { AudioBackupManager } from \"./AudioBackup.js\";\nimport { ConversationBackupManager } from \"./ConverationBackup.js\";\n\nconst STT_LANGUAGE_LIST = [\n  { label: \"Bulgarian\", value: \"bg\", key: \"bg\" },\n  { label: \"Chinese\", value: \"zh\", key: \"zh\" },\n  { label: \"Czech\", value: \"cs\", key: \"cs\" },\n  { label: \"Danish\", value: \"da\", key: \"da\" },\n  { label: \"Dutch\", value: \"nl\", key: \"nl\" },\n  { label: \"English\", value: \"en\", key: \"en\" },\n  { label: \"Finnish\", value: \"fi\", key: \"fi\" },\n  { label: \"French\", value: \"fr\", key: \"fr\" },\n  { label: \"German\", value: \"de\", key: \"de\" },\n  { label: \"Greek\", value: \"el\", key: \"el\" },\n  { label: \"Hindi\", value: \"hi\", key: \"hi\" },\n  { label: \"Hungarian\", value: \"hu\", key: \"hu\" },\n  { label: \"Icelandic\", value: \"is\", key: \"is\" },\n  { label: \"Indonesian\", value: \"id\", key: \"id\" },\n  { label: \"Italian\", value: \"it\", key: \"it\" },\n  { label: \"Japanese\", value: \"ja\", key: \"ja\" },\n  { label: \"Korean\", value: \"ko\", key: \"ko\" },\n  { label: \"Malay\", value: \"ms\", key: \"ms\" },\n  { label: \"Norwegian\", value: \"no\", key: \"no\" },\n  { label: \"Polish\", value: \"pl\", key: \"pl\" },\n  { label: \"Portuguese\", value: \"pt\", key: \"pt\" },\n  { label: \"Romanian\", value: \"ro\", key: \"ro\" },\n  { label: \"Russian\", value: \"ru\", key: \"ru\" },\n  { label: \"Slovak\", value: \"sk\", key: \"sk\" },\n  { label: \"Spanish\", value: \"es\", key: \"es\" },\n  { label: \"Swedish\", value: \"sv\", key: \"sv\" },\n  { label: \"Turkish\", value: \"tr\", key: \"tr\" },\n  { label: \"Ukrainian\", value: \"uk\", key: \"uk\" },\n  { label: \"Vietnamese\", value: \"vi\", key: \"vi\" },\n];\n\ninterface Avatar {\n  avatar_id: string;\n  name: string;\n}\n\ninterface Language {\n  key: string;\n  label: string;\n}\n\ninterface VoiceConfig {\n  rate: number;\n  emotion: VoiceEmotion;\n}\n\n@customElement(\"hg-interactive-avatar\")\nexport class InteractiveAvatar extends LitElement {\n  @property({ type: String })\n  getConfigPath = \"/api/users/get_hey_gen_config\";\n\n  @property({ type: String })\n  audioBackupPath = \"/api/users/hey_gen_audio_backup\";\n\n  @property({ type: String })\n  conversationBackupPath = \"/api/users/hey_gen_conversation_backup\";\n\n  @state()\n  private isLoadingSession = false;\n\n  @state()\n  private isLoadingRepeat = false;\n\n  @state()\n  private stream: MediaStream | null = null;\n\n  @state()\n  private debug = \"\";\n\n  @property({ type: String })\n  knowledgeId = \"\";\n\n  @property({ type: String })\n  knowledgeBase = \"\";\n\n  @property({ type: String })\n  avatarId = \"\";\n\n  @property({ type: String })\n  language = \"en\";\n\n  @state()\n  private data: StartAvatarResponse | null = null;\n\n  @state()\n  private text = \"\";\n\n  @property({ type: Boolean, reflect: true })\n  isUserTalking = false;\n\n  // Private fields\n  private avatar: StreamingAvatar | null = null;\n  private mediaStreamEl: HTMLVideoElement | null = null;\n  private audioBackup: AudioBackupManager | null = null;\n  private conversationBackup: ConversationBackupManager | null = null;\n  private sessionId: string = \"\";\n\n  static override styles = css`\n    :host {\n      display: block;\n      width: 100%;\n    }\n    .container {\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n    }\n    .card {\n      background: var(--md-sys-color-surface);\n      border-radius: 12px;\n      box-shadow: var(--md-sys-elevation-1);\n      overflow: hidden;\n    }\n    .card-body {\n      height: 500px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      padding: 1rem;\n    }\n    .video-container {\n      height: 500px;\n      width: 900px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: relative;\n      border-radius: 8px;\n      overflow: hidden;\n    }\n    video {\n      width: 100%;\n      height: 100%;\n      object-fit: contain;\n    }\n    .controls {\n      position: absolute;\n      bottom: 1rem;\n      right: 1rem;\n      display: flex;\n      flex-direction: column;\n      gap: 0.5rem;\n    }\n    .setup-form {\n      height: 100%;\n      width: 500px;\n      display: flex;\n      flex-direction: column;\n      gap: 2rem;\n      align-self: center;\n    }\n    .form-group {\n      display: flex;\n      flex-direction: column;\n      gap: 0.5rem;\n      width: 100%;\n    }\n    .card-footer {\n      padding: 1rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n    }\n    .input-container {\n      width: 100%;\n      display: flex;\n      position: relative;\n    }\n    .debug {\n      font-family: monospace;\n      text-align: right;\n    }\n  `;\n\n  private async getConfig(): Promise<string> {\n    try {\n      const response = await fetch(this.getConfigPath, {\n        method: \"POST\",\n        body: JSON.stringify({\n          language: this.language,\n          avatarId: this.avatarId,\n          knowledgeBase: this.knowledgeBase,\n          knowledgeId: this.knowledgeId,\n          sessionId: this.sessionId\n        }),\n      });\n      const data = await response.json();\n      console.log(\"Access Token Response:\", data);\n      if (!this.knowledgeId && data.knowledgeId) {\n        this.knowledgeId = data.knowledgeId;\n      }\n      if (!this.knowledgeBase && data.knowledgeBase) {\n        this.knowledgeBase = data.knowledgeBase;\n      }\n      return data.token;\n    } catch (error) {\n      console.error(\"Error fetching access token:\", error);\n      throw error;\n    }\n  }\n\n  constructor() {\n    super();\n  }\n\n  initBackups(token: string): void {\n    const commonHeaders = {\n      Authorization: `Bearer ${token}`,\n    };\n\n    this.audioBackup = new AudioBackupManager({\n      sendInterval: 2500,\n      backupEndpoint: this.audioBackupPath,\n      headers: commonHeaders,\n      sessionId: this.sessionId,\n    });\n\n    // Initialize conversation backup manager\n    this.conversationBackup = new ConversationBackupManager({\n      backupEndpoint: this.conversationBackupPath,\n      batchInterval: 1234,\n      headers: commonHeaders,\n      sessionId: this.sessionId,\n    });\n  }\n\n  private async startSession(): Promise<void> {\n    this.isLoadingSession = true;\n    this.sessionId = crypto.randomUUID();\n\n    const newToken = await this.getConfig();\n\n    if (!newToken) {\n      this.debug = \"No token received\";\n      throw new Error(\"No token received\");\n    }\n\n    this.avatar = new StreamingAvatar({\n      token: newToken,\n    });\n\n    this.initBackups(newToken);\n\n    this.setupAvatarEventListeners();\n\n    try {\n      const res = await this.avatar.createStartAvatar({\n        quality: AvatarQuality.Low,\n        avatarName: this.avatarId,\n        knowledgeBase: this.knowledgeBase,\n        language: this.language\n      });\n\n      this.data = res;\n      await this.avatar.startVoiceChat({ useSilencePrompt: false });\n    } catch (error) {\n      console.error(\"Error starting avatar session:\", error);\n    } finally {\n      this.isLoadingSession = false;\n    }\n  }\n\n  private getVoiceConfig(): VoiceConfig {\n    return {\n      rate: 1.5,\n      emotion: VoiceEmotion.EXCITED,\n    };\n  }\n\n  private setupAvatarEventListeners(): void {\n    if (!this.avatar) return;\n\n    this.avatar.on(StreamingEvents.AVATAR_START_TALKING, (e: CustomEvent) => {\n      console.log(\"Avatar started talking\", e);\n      this.dispatchEvent(\n        new CustomEvent(\"hg-interactive-avatar-start-talking\", {\n          detail: e.detail,\n        })\n      );\n    });\n\n    this.avatar.on(StreamingEvents.AVATAR_STOP_TALKING, (e: CustomEvent) => {\n      console.log(\"Avatar stopped talking\", e);\n      this.dispatchEvent(\n        new CustomEvent(\"hg-interactive-avatar-stop-talking\", {\n          detail: e.detail,\n        })\n      );\n    });\n\n    this.avatar.on(StreamingEvents.AVATAR_TALKING_MESSAGE, (e: CustomEvent) => {\n      console.log(\"Avatar talking message\", e);\n\n      // Add message to backup\n      if (this.conversationBackup) {\n        this.conversationBackup.addMessage({\n          type: \"avatar\",\n          message: e.detail.message,\n          timestamp: Date.now(),\n          taskId: e.detail.task_id,\n        });\n      }\n\n      this.dispatchEvent(\n        new CustomEvent(\"hg-interactive-avatar-talking-message\", {\n          detail: e.detail,\n        })\n      );\n    });\n\n    this.avatar.on(StreamingEvents.STREAM_DISCONNECTED, () => {\n      console.log(\"Stream disconnected\");\n      this.dispatchEvent(new CustomEvent(\"hg-interactive-avatar-disconnected\"));\n      this.endSession();\n    });\n\n    this.avatar.on(\n      StreamingEvents.STREAM_READY,\n      (event: { detail: MediaStream | null }) => {\n        console.log(\">>>>> Stream ready:\", event.detail);\n        this.stream = event.detail;\n        if (this.stream && this.audioBackup) {\n          //this.audioBackup.attachToStream(this.stream);\n        } else {\n          console.error(\"Stream or audio backup not initialized\");\n        }\n        this.dispatchEvent(\n          new CustomEvent(\"hg-interactive-avatar-ready\", {\n            detail: event.detail,\n          })\n        );\n      }\n    );\n\n    this.avatar.on(StreamingEvents.USER_START, (event: any) => {\n      console.log(\">>>>> User started talking:\", event);\n      this.isUserTalking = true;\n      this.dispatchEvent(\n        new CustomEvent(\"hg-interactive-avatar-user-start\", { detail: event })\n      );\n    });\n\n    this.avatar.on(StreamingEvents.USER_STOP, (event: any) => {\n      console.log(\">>>>> User stopped talking:\", event);\n      this.isUserTalking = false;\n      this.dispatchEvent(\n        new CustomEvent(\"hg-interactive-avatar-user-stop\", { detail: event })\n      );\n    });\n  }\n\n  private async handleSpeak(): Promise<void> {\n    this.isLoadingRepeat = true;\n    if (!this.avatar) {\n      this.debug = \"Avatar API not initialized\";\n      return;\n    }\n\n    try {\n      await this.avatar.speak({\n        text: this.text,\n        taskType: TaskType.REPEAT,\n        taskMode: TaskMode.SYNC,\n      });\n    } catch (e) {\n      if (e instanceof Error) {\n        this.debug = e.message;\n      }\n    }\n    this.isLoadingRepeat = false;\n  }\n\n  private async handleInterrupt(): Promise<void> {\n    if (!this.avatar) {\n      this.debug = \"Avatar API not initialized\";\n      return;\n    }\n    try {\n      await this.avatar.interrupt();\n    } catch (e) {\n      if (e instanceof Error) {\n        this.debug = e.message;\n      }\n    }\n  }\n\n  private async endSession(): Promise<void> {\n    if (this.audioBackup) {\n      this.audioBackup.stop();\n    }\n\n    if (this.conversationBackup) {\n      this.conversationBackup.stop();\n    }\n\n    await this.avatar?.stopAvatar();\n    this.stream = null;\n  }\n\n  override updated(changedProperties: PropertyValues): void {\n    if (changedProperties.has(\"stream\") && this.stream) {\n      const videoEl = this.shadowRoot?.querySelector(\"video\");\n      if (videoEl) {\n        videoEl.srcObject = this.stream;\n        videoEl.onloadedmetadata = () => {\n          videoEl.play();\n          this.debug = \"Playing\";\n        };\n      }\n    }\n\n    if (changedProperties.has(\"text\")) {\n      const prevText = changedProperties.get(\"text\") as string;\n      if (!prevText && this.text) {\n        this.avatar?.startListening();\n      } else if (prevText && !this.text) {\n        this.avatar?.stopListening();\n      }\n    }\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.endSession();\n  }\n\n  override render() {\n    return html`\n      <div class=\"container\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            ${this.stream\n              ? html`\n                  <div class=\"video-container\">\n                    <video autoplay playsinline>\n                      <track kind=\"captions\" />\n                    </video>\n                    <div class=\"controls\">\n                      <md-filled-button @click=${this.handleInterrupt}>\n                        Interrupt task\n                      </md-filled-button>\n                      <md-filled-button @click=${this.endSession}>\n                        End session\n                      </md-filled-button>\n                    </div>\n                  </div>\n                `\n              : this.isLoadingSession\n              ? html`\n                  <md-circular-progress indeterminate></md-circular-progress>\n                `\n              : html`\n                  <div class=\"setup-form\">\n                    <div class=\"form-group\">\n                      <md-filled-select\n                        label=\"Select language\"\n                        .value=${this.language}\n                        @change=${(e: Event) =>\n                          (this.language = (\n                            e.target as HTMLSelectElement\n                          ).value)}\n                      >\n                        ${STT_LANGUAGE_LIST.map(\n                          (lang: Language) => html`\n                            <md-select-option value=${lang.key}>\n                              ${lang.label}\n                            </md-select-option>\n                          `\n                        )}\n                      </md-filled-select>\n                    </div>\n\n                    <md-filled-button @click=${this.startSession}>\n                      Start session\n                    </md-filled-button>\n                  </div>\n                `}\n          </div>\n\n          <md-divider></md-divider>\n\n          <div class=\"card-footer\">\n            <div style=\"text-align: center\">\n              <md-filled-button ?disabled=${!this.isUserTalking}>\n                ${this.isUserTalking ? \"Listening\" : \"Voice chat\"}\n              </md-filled-button>\n            </div>\n          </div>\n        </div>\n\n        <p class=\"debug\">\n          <strong>Console:</strong><br />\n          ${this.debug}\n        </p>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"interactive-avatar\": InteractiveAvatar;\n  }\n}\n"]}