{"version":3,"file":"AoiServerApi.js","sourceRoot":"","sources":["../../../src/allOurIdeas/survey/AoiServerApi.ts"],"names":[],"mappings":"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","sourcesContent":["import { StringUnitLength } from \"luxon\";\nimport { YpServerApi } from \"../../common/YpServerApi.js\";\n\nexport class AoiServerApi extends YpServerApi {\n  constructor(urlPath: string = \"/api/allOurIdeas\") {\n    super();\n    this.baseUrlPath = urlPath;\n  }\n\n  public getEarlData(groupId: number): AoiEarlResponse {\n    return this.fetchWrapper(\n      this.baseUrlPath + `/${groupId}`\n    ) as unknown as AoiEarlResponse;\n  }\n\n  async getPrompt(groupId: number, questionId: number) {\n    return this.fetchWrapper(\n      this.baseUrlPath + `/${groupId}/questions/${questionId}/prompt`\n    ) as unknown as AoiPromptData;\n  }\n\n  public async getSurveyResults(groupId: number): Promise<AoiResultData[]> {\n    return this.fetchWrapper(\n      this.baseUrlPath + `/${groupId}/questions/results`\n    ) as unknown as AoiResultData[];\n  }\n\n  getSurveyAnalysis(\n    groupId: number,\n    analysisIndex: number,\n    analysisTypeIndex: number\n  ): AnalysisTypeData {\n    return this.fetchWrapper(\n      this.baseUrlPath +\n        `/${groupId}/questions/${analysisIndex}/${analysisTypeIndex}/analysis`\n    ) as unknown as AnalysisTypeData;\n  }\n\n  public submitIdea(\n    groupId: number,\n    questionId: number,\n    newIdea: string\n  ): AoiAddIdeaResponse {\n    return this.fetchWrapper(\n      this.baseUrlPath + `/${groupId}/questions/${questionId}/add_idea`,\n      {\n        method: \"POST\",\n        body: JSON.stringify({ new_idea: newIdea }),\n      },\n      false\n    ) as unknown as AoiAddIdeaResponse;\n  }\n\n  public postVote(\n    groupId: number,\n    questionId: number,\n    promptId: number,\n    locale: string,\n    body: AoiVoteData,\n    direction: \"left\" | \"right\" | \"skip\"\n  ): AoiVoteResponse {\n    const url = new URL(\n      `${window.location.protocol}//${window.location.host}${\n        this.baseUrlPath\n      }/${groupId}/questions/${questionId}/prompts/${promptId}/${\n        direction == \"skip\" ? \"skips\" : \"votes\"\n      }?locale=${locale}`\n    );\n\n    Object.keys(window.appGlobals.originalQueryParameters).forEach((key) => {\n      if (key.startsWith(\"utm_\")) {\n        url.searchParams.append(\n          key,\n          window.aoiAppGlobals.originalQueryParameters[key]\n        );\n      }\n    });\n\n    const browserId = window.appUser.getBrowserId();\n    const browserFingerprint = window.appUser.browserFingerprint;\n    const browserFingerprintConfidence =\n      window.appUser.browserFingerprintConfidence;\n\n    url.searchParams.append(\"checksum_a\", browserId!);\n    url.searchParams.append(\"checksum_b\", browserFingerprint!);\n    url.searchParams.append(\n      \"checksum_c\",\n      browserFingerprintConfidence!.toString()\n    );\n\n    return this.fetchWrapper(\n      url.toString(),\n      {\n        method: \"POST\",\n        body: JSON.stringify(body),\n      },\n      false\n    ) as unknown as AoiVoteResponse;\n  }\n\n  public postVoteSkip(\n    groupId: number,\n    questionId: number,\n    promptId: number,\n    locale: string,\n    body: AoiVoteSkipData\n  ): AoiVoteResponse {\n    return this.fetchWrapper(\n      this.baseUrlPath +\n        `/${groupId}/questions/${questionId}/prompts/${promptId}/skip.js?locale=${locale}`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(body),\n      },\n      false\n    ) as unknown as AoiVoteResponse;\n  }\n\n  public llmAnswerConverstation(\n    groupId: number,\n    wsClientId: string,\n    chatLog: PsSimpleChatLog[],\n  ): Promise<void> {\n\n    return this.fetchWrapper(\n      this.baseUrlPath + `/${groupId}/llmAnswerExplain`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({\n          wsClientId,\n          chatLog\n        }),\n      },\n      false\n    ) ;\n  }\n}\n"]}