{"version":3,"file":"yp-registration-questions.js","sourceRoot":"","sources":["../../src/yp-user/yp-registration-questions.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAG7D,OAAO,6CAA6C,CAAC;AACrD,OAAO,yCAAyC,CAAC;AAEjD,OAAO,8BAA8B,CAAC;AAEtC,OAAO,6CAA6C,CAAC;AAGrD,OAAO,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAG3D,IAAM,uBAAuB,GAA7B,MAAM,uBAAwB,SAAQ,aAAa;IAAnD;;QAWL,kBAAa,GAAG,KAAK,CAAC;QAQtB,oBAAe,GAAkB,EAAE,CAAC;QAEpC,8BAAyB,GAA2B,EAAE,CAAC;QAEvD,kBAAa,GAAkB,EAAE,CAAC;QAElC,qBAAgB,GAAiD,EAAE,CAAC;IAybtE,CAAC;IAvbU,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,iBAAiB,CACpB,mBAAmB,EACnB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CACpC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,MAAM,CAAC,aAAa,EAAE,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAEQ,oBAAoB;QAC3B,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,IAAI,CAAC,oBAAoB,CACvB,mBAAmB,EACnB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CACpC,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACjE,CAAC;IAED,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;OAqBF;SACF,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,KAAkB;QAC/B,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC3E,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACjD,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAClB,+BAA+B,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,CAAC,CAAC,CACxD,CAAC;YACjB,IAAI,CAAC,cAAc,CAAC;gBAClB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,KAAK;gBACb,QAAQ,EAAE,QAAQ;aACnB,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IAED,SAAS,CAAC,KAAkB,EAAE,SAAkB;QAC9C,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACjD,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACrD,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAClB,+BAA+B,GAAG,OAAO,CAC3B,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC;YAClB,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,KAAK;YACb,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,iBAAiB,CAAC,KAAkB,EAAE,SAAkB;QACtD,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,IAAI,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,EAAE,CAAC;YAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAE;iBAC1C,QAAsD,CAAC;YAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzC,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACjD,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACrD,IACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBACf,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ;oBACxB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ;oBACjC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAS,CAAC,SAAS,CAC1C,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAS,CAAC,MAAM,GAAG,CAAC,CAC9C,KAAK,GAAG,EACT,CAAC;oBACD,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CACtC,CAAC,GAAG,CAAC,CACN,CAAC,QAAQ,CAAC,QAAS,CAAC,SAAS,CAC5B,CAAC,EACD,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAS,CAAC,MAAM,GAAG,CAAC,CAC9C,CAAC;gBACJ,CAAC;gBACD,IACE,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ;oBACpB,KAAK,CAAC,MAAM,CAAC,MAAM;oBACnB,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,KAAK,MAAM,EACxC,CAAC;oBACD,UAAU,GAAG,IAAI,CAAC;gBACpB,CAAC;qBAAM,IACL,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ;oBACpB,KAAK,CAAC,MAAM,CAAC,IAAI;oBACjB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,KAAK,IAAI;wBACrC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,KAAK,IAAI,GAAG,GAAG,CAAC,EAC/C,CAAC;oBACD,MAAM;gBACR,CAAC;qBAAM,CAAC;oBACN,IAAI,UAAU,EAAE,CAAC;wBACf,IAAI,SAAS,EAAE,CAAC;4BACb,QAAQ,CAAC,CAAC,CAAiB,CAAC,MAAM,GAAG,KAAK,CAAC;wBAC9C,CAAC;6BAAM,CAAC;4BACL,QAAQ,CAAC,CAAC,CAAiB,CAAC,MAAM,GAAG,IAAI,CAAC;wBAC7C,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAC,KAAK;YACf,CAAC,CAAC,IAAI,CAAA,IACF,IAAI,CAAC,QAAQ;gBACX,CAAC,CAAC,IAAI,CAAA;oDACkC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;;kBAElD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,WAAW,EAAE,EAAE;oBAC/C,OAAO,IAAI,CAAA;qCACQ,WAAW,CAAC,IAAI;;mCAElB,IAAI,CAAC,aAAa;kCACnB,WAAW,CAAC,IAAI;2CACP,WAAW;iCACrB,WAAW,CAAC,WAAY;;;;mBAItC,CAAC;gBACJ,CAAC,CAAC;eACH;gBACH,CAAC,CAAC,OACN;UAEE,IAAI,CAAC,iBAAiB;gBACpB,CAAC,CAAC,IAAI,CAAA;kBACA,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;oBAC/C,OAAO,IAAI,CAAA;;gCAEG,KAAK;;;wDAGmB,KAAK;6CAChB,IAAI,CAAC,iBAAiB;mCAChC,QAAQ;;;mBAGxB,CAAC;gBACJ,CAAC,CAAC;qBACG;gBACT,CAAC,CAAC,OACN,QAAQ;YACV,CAAC,CAAC,OAAO,CAAC;IACd,CAAC;IAED,IAAI,mBAAmB;QACrB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,yBAAyB,EAAE,CAAC;YACrE,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC7B,OAAO,IAAI,CAAC,mBAAmB,CAAC;YAClC,CAAC;iBAAM,CAAC;gBACN,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,yBAAyB,CAAC;YAC5D,CAAC;QACH,CAAC;aAAM,CAAC;YACN,OAAO,SAAS,CAAC;QACnB,CAAC;IACH,CAAC;IAED,IAAI,iBAAiB;QACnB,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,MAAM,iBAAiB,GAAoC,EAAE,CAAC;YAC9D,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;gBAC5C,IACE,CAAC,IAAI,CAAC,QAAQ;oBACd,CAAC,IAAI,CAAC,eAAe;wBACnB,QAAQ,CAAC,IAAI,KAAK,SAAS;wBAC3B,QAAQ,CAAC,WAAW,KAAK,IAAI,CAAC,eAAe,CAAC,EAChD,CAAC;oBACD,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACnC,CAAC;YACH,CAAC,CAAC,CAAC;YACH,OAAO,iBAAiB,CAAC;QAC3B,CAAC;aAAM,CAAC;YACN,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,mBAAmB,CAAC,KAAkB;QACpC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,KAAK,CAAC,wBAAwB;QAC5B,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;QACrC,IACE,IAAI,CAAC,aAAa;YAClB,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,KAAK;YACV,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,EACrC,CAAC;YACD,MAAM,eAAe,GACnB,MAAM,MAAM,CAAC,SAAS,CAAC,kCAAkC,CACvD,IAAI,CAAC,KAAK,CAAC,EAAE,EACb,IAAI,CAAC,QAAQ,CACd,CAAC;YAEJ,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;gBAChE,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAChC,CAAC;gBAErC,IACE,eAAe,CAAC,MAAM;oBACtB,eAAe,CAAC,+BAA+B,CAAC,gBAAgB,CAAC,EACjE,CAAC;oBACD,IAAI,mBAAmB,GAAG,CAAC,CAAC;oBAC5B,KACE,IAAI,aAAa,GAAG,CAAC,EACrB,aAAa,GAAG,gBAAgB,CAAC,MAAM,EACvC,aAAa,EAAE,EACf,CAAC;wBACD,MAAM,QAAQ,GAAG,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBACjD,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC;wBACtC,QAAQ,CAAC,IAAI,GAAG,eAAe,CAAC,mBAAmB,EAAE,CAAC,CAAC;wBAEvD,IACE,QAAQ,CAAC,IAAI,KAAK,QAAQ;4BAC1B,QAAQ,CAAC,YAAY;4BACrB,QAAQ,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAChC,CAAC;4BACD,KACE,IAAI,cAAc,GAAG,CAAC,EACtB,cAAc,GAAG,QAAQ,CAAC,YAAY,CAAC,MAAM,EAC7C,cAAc,EAAE,EAChB,CAAC;gCACD,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,YAAY;oCAChD,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;gCAC7C,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,IAAI;oCACxC,eAAe,CAAC,mBAAmB,EAAE,CAAC,CAAC;4BAC3C,CAAC;wBACH,CAAC;6BAAM,IACL,QAAQ,CAAC,IAAI,KAAK,YAAY;4BAC9B,QAAQ,CAAC,UAAU;4BACnB,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAC9B,CAAC;4BACD,KACE,IAAI,cAAc,GAAG,CAAC,EACtB,cAAc,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,EAC3C,cAAc,EAAE,EAChB,CAAC;gCACD,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,YAAY;oCAC9C,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;gCAC3C,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,IAAI;oCACtC,eAAe,CAAC,mBAAmB,EAAE,CAAC,CAAC;4BAC3C,CAAC;wBACH,CAAC;6BAAM,IACL,QAAQ,CAAC,IAAI,KAAK,UAAU;4BAC5B,QAAQ,CAAC,eAAe;4BACxB,QAAQ,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EACnC,CAAC;4BACD,KACE,IAAI,cAAc,GAAG,CAAC,EACtB,cAAc,GAAG,QAAQ,CAAC,eAAe,CAAC,MAAM,EAChD,cAAc,EAAE,EAChB,CAAC;gCACD,QAAQ,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,YAAY;oCACnD,QAAQ,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;gCAChD,QAAQ,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,IAAI;oCAC3C,eAAe,CAAC,mBAAmB,EAAE,CAAC,CAAC;4BAC3C,CAAC;wBACH,CAAC;oBACH,CAAC;oBAED,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC;gBAC9C,CAAC;qBAAM,CAAC;oBACN,OAAO,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC;oBACtE,OAAO,CAAC,KAAK,CACX,cAAc,gBAAgB,CAAC,MAAM,UAAU,eAAe,CAAC,MAAM,EAAE,CACxE,CAAC;gBACJ,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;YACvC,CAAC;QACH,CAAC;IACH,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,IAAI,MAAM,CAAC,aAAa,EAAE,CAAC;gBACzB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;YAC5C,CAAC;YACD,MAAM,eAAe,GAAkB,EAAE,CAAC;YAC1C,MAAM,aAAa,GAAkB,EAAE,CAAC;YACxC,MAAM,gBAAgB,GAAe,EAAE,CAAC;YACxC,MAAM,yBAAyB,GAA2B,EAAE,CAAC;YAC7D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;gBACjD,IACE,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAK,CAAC,WAAW,EAAE,KAAK,WAAW,CAAC;oBAC1D,QAAQ,CAAC,IAAK,CAAC,WAAW,EAAE,KAAK,eAAe;oBAChD,QAAQ,CAAC,IAAK,CAAC,WAAW,EAAE,KAAK,UAAU;oBAC3C,QAAQ,CAAC,IAAK,CAAC,WAAW,EAAE,KAAK,cAAc;oBAC/C,QAAQ,CAAC,IAAK,CAAC,WAAW,EAAE,KAAK,aAAa;oBAC9C,QAAQ,CAAC,IAAK,CAAC,WAAW,EAAE,KAAK,YAAY;oBAC7C,QAAQ,CAAC,IAAK,CAAC,WAAW,EAAE,KAAK,QAAQ;oBACzC,QAAQ,CAAC,IAAK,CAAC,WAAW,EAAE,KAAK,UAAU,EAC3C,CAAC;oBACD,IACE,CAAC,IAAI,CAAC,QAAQ;wBACd,CAAC,IAAI,CAAC,eAAe;4BACnB,QAAQ,CAAC,WAAW,KAAK,IAAI,CAAC,eAAe,CAAC,EAChD,CAAC;wBACD,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC5B,yBAAyB,CAAC,QAAQ,CAAC,QAAS,CAAC,GAAG,KAAK,CAAC;wBACtD,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAS,CAAC,CAAC;wBACvC,gBAAgB,CAAC,IAAI,CAAC;4BACpB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;4BAC3B,OAAO,EAAE,KAAK;yBACf,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;YACvC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;YACzC,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;QAC7D,CAAC;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,MAAM,QAAQ,GAAoC,EAAE,CAAC;YACrD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;gBACnD,IAAI,QAAQ,CAAC,IAAK,CAAC,WAAW,EAAE,KAAK,SAAS,EAAE,CAAC;oBAC/C,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1B,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC3B,CAAC;QACH,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,UAAU;QACR,MAAM,OAAO,GAAkC,EAAE,CAAC;QAClD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;YACzC,MAAM,eAAe,GAAG,IAAI,CAAC,EAAE,CAC7B,+BAA+B,GAAG,SAAS,CAChB,CAAC;YAC9B,IAAI,eAAe,EAAE,CAAC;gBACpB,MAAM,YAAY,GAA2B,EAAE,CAAC;gBAChD,MAAM,IAAI,GAAG,eAAe,CAAC,QAAQ,CAAC,YAAY;oBAChD,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,YAAY;oBACvC,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC;gBAElC,MAAM,MAAM,GAAG,eAAe,CAAC,SAAS,EAAE,CAAC;gBAE3C,IAAI,MAAM,EAAE,CAAC;oBACX,YAAY,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,SAAS,EAAG,CAAC,KAAe,CAAC;oBAClE,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC7B,CAAC;qBAAM,CAAC;oBACN,OAAO,CAAC,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,CAAC;gBAClD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;QACjC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ;QACN,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,WAAW,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;YACzC,MAAM,eAAe,GAAG,IAAI,CAAC,EAAE,CAC7B,+BAA+B,GAAG,SAAS,CAChB,CAAC;YAC9B,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,eAAe,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,EAAE,CAAC;gBACxD,KAAK,GAAG,KAAK,CAAC;gBACd,IAAI,CAAC,WAAW,EAAE,CAAC;oBACjB,eAAe,CAAC,cAAc,EAAE,CAAC;oBACjC,WAAW,GAAG,IAAI,CAAC;gBACrB,CAAC;gBACD,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACzC,CAAC;YACD,eAAe,CAAC,aAAa,EAAE,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3C,KAAK,GAAG,KAAK,CAAC;QAChB,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAEQ,OAAO,CAAC,iBAAyD;QACxE,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAEjC,IACE,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC;YAC9B,iBAAiB,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAC5C,CAAC;YACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IAED,aAAa,CAAC,KAAkB;QAC9B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AAhdC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;sDACI;AAG/B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;kEACmC;AAG7D;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;oEACuC;AAGjE;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;8DACN;AAGtB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gEACS;AAGpC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;yDAC4B;AAjB3C,uBAAuB;IADnC,aAAa,CAAC,2BAA2B,CAAC;GAC9B,uBAAuB,CAkdnC","sourcesContent":["import { html, css, nothing } from \"lit\";\nimport { property, customElement } from \"lit/decorators.js\";\n\nimport { YpBaseElement } from \"../common/yp-base-element.js\";\nimport * as linkify from \"linkifyjs\";\n\nimport \"@material/web/progress/circular-progress.js\";\nimport \"@material/web/iconbutton/icon-button.js\";\n\nimport \"@material/web/radio/radio.js\";\n\nimport \"../yp-survey/yp-structured-question-edit.js\";\n\nimport { YpStructuredQuestionEdit } from \"../yp-survey/yp-structured-question-edit.js\";\nimport { YpSurveyHelpers } from \"../yp-survey/YpSurveyHelpers.js\";\n\n@customElement(\"yp-registration-questions\")\nexport class YpRegistrationQuestions extends YpBaseElement {\n  @property({ type: Object })\n  group: YpGroupData | undefined;\n\n  @property({ type: Array })\n  structuredAnswers: Array<Record<string, string>> | undefined;\n\n  @property({ type: Array })\n  translatedQuestions: Array<YpStructuredQuestionData> | undefined;\n\n  @property({ type: Boolean })\n  autoTranslate = false;\n\n  @property({ type: String })\n  selectedSegment: string | undefined;\n\n  @property({ type: Array })\n  segments: Array<YpStructuredQuestionData> | undefined;\n\n  liveQuestionIds: Array<number> = [];\n\n  uniqueIdsToElementIndexes: Record<string, number> = {};\n\n  liveUniqueIds: Array<string> = [];\n\n  liveUniqueIdsAll: Array<{ uniqueId: string; atIndex: number }> = [];\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.addGlobalListener(\n      \"yp-auto-translate\",\n      this._autoTranslateEvent.bind(this)\n    );\n    this.addListener(\"yp-skip-to-unique-id\", this._skipToId);\n    this.addListener(\"yp-goto-next-index\", this._goToNextIndex);\n\n    if (window.autoTranslate) {\n      this.autoTranslate = true;\n    }\n\n    this._getTranslationsIfNeeded();\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeGlobalListener(\n      \"yp-auto-translate\",\n      this._autoTranslateEvent.bind(this)\n    );\n    this.removeListener(\"yp-skip-to-unique-id\", this._skipToId);\n    this.removeListener(\"yp-goto-next-index\", this._goToNextIndex);\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        :host {\n        }\n\n        @media (max-width: 800px) {\n          yp-structured-question-edit {\n            padding-left: 0;\n            padding-right: 0;\n          }\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n\n        yp-structured-question-edit {\n        }\n\n        .segmentQuestionIntro {\n          margin-top: 16px;\n        }\n      `,\n    ];\n  }\n\n  _goToNextIndex(event: CustomEvent) {\n    const currentPos = this.liveQuestionIds.indexOf(event.detail.currentIndex);\n    if (currentPos < this.liveQuestionIds.length - 1) {\n      const item = this.$$(\n        \"#structuredQuestionContainer_\" + this.liveQuestionIds[currentPos + 1]\n      ) as HTMLElement;\n      item.scrollIntoView({\n        block: \"end\",\n        inline: \"end\",\n        behavior: \"smooth\",\n      });\n      item.focus();\n    }\n  }\n\n  _skipToId(event: CustomEvent, showItems: boolean) {\n    const toId = event.detail.toId.replace(/]/g, \"\");\n    const fromId = event.detail.fromId.replace(/]/g, \"\");\n    const toIndex = this.uniqueIdsToElementIndexes[toId];\n    const item = this.$$(\n      \"#structuredQuestionContainer_\" + toIndex\n    ) as HTMLElement;\n    item.scrollIntoView({\n      block: \"end\",\n      inline: \"end\",\n      behavior: \"smooth\",\n    });\n    item.focus();\n  }\n\n  _skipToWithHideId(event: CustomEvent, showItems: boolean) {\n    let foundFirst = false;\n    if (this.$$(\"#surveyContainer\")) {\n      const children = this.$$(\"#surveyContainer\")!\n        .children as unknown as Array<YpStructuredQuestionEdit>;\n      for (let i = 0; i < children.length; i++) {\n        const toId = event.detail.toId.replace(/]/g, \"\");\n        const fromId = event.detail.fromId.replace(/]/g, \"\");\n        if (\n          children[i + 1] &&\n          children[i + 1].question &&\n          children[i + 1].question.uniqueId &&\n          children[i + 1].question.uniqueId!.substring(\n            children[i + 1].question.uniqueId!.length - 1\n          ) === \"a\"\n        ) {\n          children[i].question.uniqueId = children[\n            i + 1\n          ].question.uniqueId!.substring(\n            0,\n            children[i + 1].question.uniqueId!.length - 1\n          );\n        }\n        if (\n          children[i].question &&\n          event.detail.fromId &&\n          children[i].question.uniqueId === fromId\n        ) {\n          foundFirst = true;\n        } else if (\n          children[i].question &&\n          event.detail.toId &&\n          (children[i].question.uniqueId === toId ||\n            children[i].question.uniqueId === toId + \"a\")\n        ) {\n          break;\n        } else {\n          if (foundFirst) {\n            if (showItems) {\n              (children[i] as HTMLElement).hidden = false;\n            } else {\n              (children[i] as HTMLElement).hidden = true;\n            }\n          }\n        }\n      }\n    } else {\n      console.error(\"No survey container found\");\n    }\n  }\n\n  override render() {\n    return this.group\n      ? html` ${\n          this.segments\n            ? html`\n                <div class=\"segmentQuestionIntro\">${this.t(\"choose\")}</div>\n\n                ${this.segments.map((radioButton, buttonIndex) => {\n                  return html`\n                    <label .label=\"${radioButton.text}\">\n                      <md-radio\n                        @change=\"${this._radioChanged}\"\n                        .value=\"${radioButton.text}\"\n                        id=\"segmentRadio_${buttonIndex}\"\n                        .name=\"${radioButton.segmentName!}\"\n                      >\n                      </md-radio>\n                    </label>\n                  `;\n                })}\n              `\n            : nothing\n        }\n        ${\n          this.filteredQuestions\n            ? html`<div id=\"surveyContainer\">\n                ${this.filteredQuestions.map((question, index) => {\n                  return html`\n                    <yp-structured-question-edit\n                      .index=\"${index}\"\n                      use-small-font\n                      is-from-new-post\n                      id=\"structuredQuestionContainer_${index}\"\n                      .structured-answers=\"${this.structuredAnswers}\"\n                      .question=\"${question}\"\n                    >\n                    </yp-structured-question-edit>\n                  `;\n                })}\n              </div>`\n            : nothing\n        }</div>`\n      : nothing;\n  }\n\n  get structuredQuestions(): Array<YpStructuredQuestionData> | undefined {\n    if (this.group && this.group.configuration.registrationQuestionsJson) {\n      if (this.translatedQuestions) {\n        return this.translatedQuestions;\n      } else {\n        return this.group.configuration.registrationQuestionsJson;\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  get filteredQuestions() {\n    if (this.structuredQuestions) {\n      const filteredQuestions: Array<YpStructuredQuestionData> = [];\n      this.structuredQuestions.forEach((question) => {\n        if (\n          !this.segments ||\n          (this.selectedSegment &&\n            question.type !== \"segment\" &&\n            question.segmentName === this.selectedSegment)\n        ) {\n          filteredQuestions.push(question);\n        }\n      });\n      return filteredQuestions;\n    } else {\n      return null;\n    }\n  }\n\n  _autoTranslateEvent(event: CustomEvent) {\n    this.autoTranslate = event.detail;\n    this._getTranslationsIfNeeded();\n  }\n\n  async _getTranslationsIfNeeded() {\n    this.translatedQuestions = undefined;\n    if (\n      this.autoTranslate &&\n      this.language &&\n      this.group &&\n      this.language !== this.group.language\n    ) {\n      const translatedTexts =\n        await window.serverApi.getTranslatedRegistrationQuestions(\n          this.group.id,\n          this.language\n        );\n\n      if (this.autoTranslate && this.language !== this.group.language) {\n        const currentQuestions = JSON.parse(\n          JSON.stringify(this.group.configuration.registrationQuestionsJson)\n        ) as Array<YpStructuredQuestionData>;\n\n        if (\n          translatedTexts.length ===\n          YpSurveyHelpers.getQuestionLengthWithSubOptions(currentQuestions)\n        ) {\n          let translatedItemCount = 0;\n          for (\n            let questionCount = 0;\n            questionCount < currentQuestions.length;\n            questionCount++\n          ) {\n            const question = currentQuestions[questionCount];\n            question.originalText = question.text;\n            question.text = translatedTexts[translatedItemCount++];\n\n            if (\n              question.type === \"radios\" &&\n              question.radioButtons &&\n              question.radioButtons.length > 0\n            ) {\n              for (\n                let subOptionCount = 0;\n                subOptionCount < question.radioButtons.length;\n                subOptionCount++\n              ) {\n                question.radioButtons[subOptionCount].originalText =\n                  question.radioButtons[subOptionCount].text;\n                question.radioButtons[subOptionCount].text =\n                  translatedTexts[translatedItemCount++];\n              }\n            } else if (\n              question.type === \"checkboxes\" &&\n              question.checkboxes &&\n              question.checkboxes.length > 0\n            ) {\n              for (\n                let subOptionCount = 0;\n                subOptionCount < question.checkboxes.length;\n                subOptionCount++\n              ) {\n                question.checkboxes[subOptionCount].originalText =\n                  question.checkboxes[subOptionCount].text;\n                question.checkboxes[subOptionCount].text =\n                  translatedTexts[translatedItemCount++];\n              }\n            } else if (\n              question.type === \"dropdown\" &&\n              question.dropdownOptions &&\n              question.dropdownOptions.length > 0\n            ) {\n              for (\n                let subOptionCount = 0;\n                subOptionCount < question.dropdownOptions.length;\n                subOptionCount++\n              ) {\n                question.dropdownOptions[subOptionCount].originalText =\n                  question.dropdownOptions[subOptionCount].text;\n                question.dropdownOptions[subOptionCount].text =\n                  translatedTexts[translatedItemCount++];\n              }\n            }\n          }\n\n          this.translatedQuestions = currentQuestions;\n        } else {\n          console.error(\"Questions and Translated texts length does not match\");\n          console.error(\n            `Questions: ${currentQuestions.length} Texts ${translatedTexts.length}`\n          );\n        }\n      } else {\n        this.translatedQuestions = undefined;\n      }\n    }\n  }\n\n  _setupQuestions() {\n    if (this.filteredQuestions) {\n      if (window.autoTranslate) {\n        this.autoTranslate = window.autoTranslate;\n      }\n      const liveQuestionIds: Array<number> = [];\n      const liveUniqueIds: Array<string> = [];\n      const liveUniqueIdsAll: Array<any> = [];\n      const uniqueIdsToElementIndexes: Record<string, number> = {};\n      this.filteredQuestions.forEach((question, index) => {\n        if (\n          (question && question.type!.toLowerCase() === \"textfield\") ||\n          question.type!.toLowerCase() === \"textfieldlong\" ||\n          question.type!.toLowerCase() === \"textarea\" ||\n          question.type!.toLowerCase() === \"textarealong\" ||\n          question.type!.toLowerCase() === \"numberfield\" ||\n          question.type!.toLowerCase() === \"checkboxes\" ||\n          question.type!.toLowerCase() === \"radios\" ||\n          question.type!.toLowerCase() === \"dropdown\"\n        ) {\n          if (\n            !this.segments ||\n            (this.selectedSegment &&\n              question.segmentName === this.selectedSegment)\n          ) {\n            liveQuestionIds.push(index);\n            uniqueIdsToElementIndexes[question.uniqueId!] = index;\n            liveUniqueIds.push(question.uniqueId!);\n            liveUniqueIdsAll.push({\n              uniqueId: question.uniqueId,\n              atIndex: index,\n            });\n          }\n        }\n      });\n      this.liveQuestionIds = liveQuestionIds;\n      this.liveUniqueIds = liveUniqueIds;\n      this.liveUniqueIdsAll = liveUniqueIdsAll;\n      this.uniqueIdsToElementIndexes = uniqueIdsToElementIndexes;\n    }\n  }\n\n  _checkForSegments() {\n    if (this.structuredQuestions) {\n      const segments: Array<YpStructuredQuestionData> = [];\n      this.structuredQuestions.forEach((question, index) => {\n        if (question.type!.toLowerCase() === \"segment\") {\n          segments.push(question);\n        }\n      });\n\n      if (segments.length > 0) {\n        this.segments = segments;\n      }\n    } else {\n      this.segments = undefined;\n    }\n  }\n\n  getAnswers() {\n    const answers: Array<Record<string, string>> = [];\n    this.liveQuestionIds.forEach((liveIndex) => {\n      const questionElement = this.$$(\n        \"#structuredQuestionContainer_\" + liveIndex\n      ) as YpStructuredQuestionEdit;\n      if (questionElement) {\n        const returnAnswer: Record<string, string> = {};\n        const text = questionElement.question.originalText\n          ? questionElement.question.originalText\n          : questionElement.question.text;\n\n        const answer = questionElement.getAnswer();\n\n        if (answer) {\n          returnAnswer[text] = questionElement.getAnswer()!.value as string;\n          answers.push(returnAnswer);\n        } else {\n          console.warn(\"No answer for question: \" + text);\n        }\n      }\n    });\n    this.structuredAnswers = answers;\n    return answers;\n  }\n\n  validate() {\n    let valid = true;\n    let hasFoundOne = false;\n    this.liveQuestionIds.forEach((liveIndex) => {\n      const questionElement = this.$$(\n        \"#structuredQuestionContainer_\" + liveIndex\n      ) as YpStructuredQuestionEdit;\n      questionElement.classList.remove(\"error\");\n      if (questionElement && !questionElement.checkValidity()) {\n        valid = false;\n        if (!hasFoundOne) {\n          questionElement.scrollIntoView();\n          hasFoundOne = true;\n        }\n        questionElement.classList.add(\"error\");\n      }\n      questionElement.requestUpdate();\n    });\n\n    if (this.segments && !this.selectedSegment) {\n      valid = false;\n    }\n    return valid;\n  }\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    super.updated(changedProperties);\n\n    if (\n      changedProperties.has(\"group\") ||\n      changedProperties.has(\"translatedQuestions\")\n    ) {\n      this._checkForSegments();\n      this._setupQuestions();\n    }\n  }\n\n  _radioChanged(event: CustomEvent) {\n    this.selectedSegment = event.detail.value;\n    this._setupQuestions();\n    setTimeout(() => {\n      this.fire(\"questions-changed\");\n    });\n  }\n}\n"]}