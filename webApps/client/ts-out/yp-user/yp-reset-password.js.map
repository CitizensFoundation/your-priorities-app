{"version":3,"file":"yp-reset-password.js","sourceRoot":"","sources":["../../src/yp-user/yp-reset-password.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, css } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\nimport { YpBaseElement } from \"../common/yp-base-element.js\";\n\nimport \"@material/web/dialog/dialog.js\";\nimport \"@material/web/textfield/outlined-text-field.js\";\nimport \"@material/web/button/text-button.js\";\nimport { Dialog } from \"@material/web/dialog/internal/dialog.js\";\nimport { TextField } from \"@material/web/textfield/internal/text-field.js\";\n\n@customElement(\"yp-reset-password\")\nexport class YpResetPassword extends YpBaseElement {\n  @property({ type: String })\n  password = \"\";\n\n  @property({ type: String })\n  token = \"\";\n\n  @property({ type: String })\n  passwordErrorMessage = \"\";\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        md-dialog[open][is-safari] {\n          height: 100%;\n        }\n      `,\n    ];\n  }\n\n  override render() {\n    return html`\n      <md-dialog\n        id=\"dialog\"\n        @cancel=\"${this.scrimDisableAction}\"\n        ?is-safari=\"${this.isSafari}\"\n      >\n        <div slot=\"headline\">${this.t(\"user.resetPassword\")}</div>\n\n        <div slot=\"content\">\n          <p>${this.t(\"user.resetPasswordInstructions\")}</p>\n\n          <md-outlined-text-field\n            id=\"password\"\n            @keydown=\"${this.onEnter}\"\n            type=\"password\"\n            .label=\"${this.t(\"password\")}\"\n            .value=\"${this.password}\"\n            autocomplete=\"off\"\n            validationMessage=\"${this.passwordErrorMessage}\"\n          >\n          </md-outlined-text-field>\n        </div>\n\n        <div class=\"buttons\" slot=\"actions\">\n          <md-text-button @click=\"${this._cancel}\"\n            >${this.t(\"cancel\")}</md-text-button\n          >\n          <md-text-button autofocus @click=\"${this._validateAndSend}\"\n            >${this.t(\"user.resetPassword\")}</md-text-button\n          >\n        </div>\n      </md-dialog>\n    `;\n  }\n\n  onEnter(event: KeyboardEvent) {\n    if (event.keyCode == 13) {\n      event.stopPropagation();\n      this._validateAndSend();\n    }\n  }\n\n  async _validateAndSend() {\n    const passwordField = this.$$(\"#password\") as TextField;\n    if (passwordField && passwordField.checkValidity() && passwordField.value) {\n      const response = await window.serverApi.resetPassword(this.token, {\n        password: passwordField.value,\n      });\n\n      //TODO Figure out the error here and test if it works\n      if (!response || (response.error && response.error == \"not_found\")) {\n        this.fire(\"yp-error\", this.t(\"errorResetTokenNotFoundOrUsed\"));\n      } else {\n        this.close();\n        window.appGlobals.notifyUserViaToast(\n          this.t(\"notification.passwordResetAndLoggedIn\")\n        );\n        this._loginCompleted(response);\n      }\n    }\n  }\n\n  _cancel() {\n    this.fire(\"cancel\");\n    window.location.href = \"/\";\n  }\n\n  _loginCompleted(user: YpUserData) {\n    window.appUser.setLoggedInUser(user);\n    this.fire(\"logged-in\");\n    window.location.href = \"/\";\n  }\n\n  async open(token: string) {\n    if (token) {\n      this.token = token;\n    } else {\n      console.error(\"No token provided to reset password\");\n    }\n    await this.updateComplete;\n    (this.$$(\"#dialog\") as Dialog).show();\n  }\n\n  close() {\n    (this.$$(\"#dialog\") as Dialog).close();\n  }\n}\n"]}